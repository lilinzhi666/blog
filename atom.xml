<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lilinzhi</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-11T13:55:26.140Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2.最全的Git在Eclipse中的使用教程 ---EGIT - Eclipse下的GIT插件</title>
    <link href="http://example.com/2022/11/11/2-%E6%9C%80%E5%85%A8%E7%9A%84Git%E5%9C%A8Eclipse%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-EGIT-Eclipse%E4%B8%8B%E7%9A%84GIT%E6%8F%92%E4%BB%B6/"/>
    <id>http://example.com/2022/11/11/2-%E6%9C%80%E5%85%A8%E7%9A%84Git%E5%9C%A8Eclipse%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-EGIT-Eclipse%E4%B8%8B%E7%9A%84GIT%E6%8F%92%E4%BB%B6/</id>
    <published>2022-11-11T13:53:42.000Z</published>
    <updated>2022-11-11T13:55:26.140Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.csdn.net/"><img src="https://img-home.csdnimg.cn/images/20201124032511.png" alt="CSDN首页"></a></p><ul><li><a href="https://blog.csdn.net/">博客</a></li><li><a href="https://download.csdn.net/">下载</a></li><li><a href="https://edu.csdn.net/">学习</a></li><li><a href="https://bbs.csdn.net/">社区</a></li><li><a href="https://gitcode.net/gitcode/1024opensource?utm_source=csdn_toolbar">GitCode <img src="https://img-home.csdnimg.cn/images/20221027045535.png" alt="img"></a></li><li><a href="https://dev-portal.csdn.net/welcome?utm_source=toolbar">云服务</a></li><li><a href="https://devbit.csdn.net/?source=csdn_toolbar">猿如意</a></li></ul><p> 搜索</p><p><a href="https://blog.csdn.net/m0_52348758"><img src="https://profile.csdnimg.cn/D/7/C/2_m0_52348758" alt="img"></a></p><p><a href="https://mall.csdn.net/vip">会员中心 <img src="https://img-home.csdnimg.cn/images/20210918025138.gif" alt="img"></a></p><p><a href="https://i.csdn.net/#/user-center/collection-list?type=1">足迹</a></p><p><a href="https://blink.csdn.net/">动态</a></p><p><a href="https://i.csdn.net/#/msg/index">消息</a></p><p><a href="https://mp.csdn.net/">创作中心 <img src="https://img-home.csdnimg.cn/images/20220627041202.png" alt="img"></a></p><p><a href="https://mp.csdn.net/edit">发布</a></p><h1 id="2-最全的Git在Eclipse中的使用教程-—EGIT-Eclipse下的GIT插件"><a href="#2-最全的Git在Eclipse中的使用教程-—EGIT-Eclipse下的GIT插件" class="headerlink" title="2.最全的Git在Eclipse中的使用教程 —EGIT - Eclipse下的GIT插件"></a>2.最全的Git在Eclipse中的使用教程 —EGIT - Eclipse下的GIT插件</h1><h1 id="EGit-基本配置"><a href="#EGit-基本配置" class="headerlink" title="EGit-基本配置"></a>EGit-基本配置</h1><h2 id="配置GIT默认仓库"><a href="#配置GIT默认仓库" class="headerlink" title="配置GIT默认仓库"></a>配置GIT默认仓库</h2><p><img src="https://img-blog.csdnimg.cn/20190117174727999.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="配置GIT用户信息"><a href="#配置GIT用户信息" class="headerlink" title="配置GIT用户信息"></a>配置GIT用户信息</h2><p><img src="https://img-blog.csdnimg.cn/20190117174743829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117174841618.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="打开EGit相关视图"><a href="#打开EGit相关视图" class="headerlink" title="打开EGit相关视图"></a>打开EGit相关视图</h2><p><img src="https://img-blog.csdnimg.cn/20190117174858699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117174903493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="EGIT-本地版本控制"><a href="#EGIT-本地版本控制" class="headerlink" title="EGIT - 本地版本控制"></a>EGIT - 本地版本控制</h1><hr><ol><li>将项目转换为仓库<br><img src="https://img-blog.csdnimg.cn/20190117174919498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117174925611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117174931953.png" alt="在这里插入图片描述"></li><li>EGit图标<br>已跟踪[ tracked ]<br><img src="https://img-blog.csdnimg.cn/20190117174950826.png" alt="在这里插入图片描述"><br>未跟踪[ untracked ]<br><img src="https://img-blog.csdnimg.cn/20190117174958822.png" alt="在这里插入图片描述"><br>仓库未跟踪，通常是新建的文件，要接入版本管理可以通过“Add to Index”或直接<br>“<a href="https://so.csdn.net/so/search?q=Commit&spm=1001.2101.3001.7020">Commit</a>”操作。</li></ol><p>忽略[ ignored ]<br><img src="https://img-blog.csdnimg.cn/20190117175014725.png" alt="在这里插入图片描述"><br>仓库认为该文件不存在（如bin目录，不需要关注）。通过右键Team &#x3D;&gt; Ignore 添加忽<br>略文件</p><p>已修改[ dirty ]<br><img src="https://img-blog.csdnimg.cn/20190117175024987.png" alt="在这里插入图片描述"><br>修改“已跟踪[ tracked ]”的文件，未添加到暂存区Index（未“Add to Index”或<br>“Commit”）的文件，标志与本地库不一致。<br>已暂存[ staged ]<br><img src="https://img-blog.csdnimg.cn/20190117175036914.png" alt="在这里插入图片描述"><br>修改“已跟踪[ tracked ]”的文件，并添加到暂存区Index（即执行“Add to<br>Index”）；<br>已部分暂存[ partially-staged ]<br><img src="https://img-blog.csdnimg.cn/20190117175047448.png" alt="在这里插入图片描述"><br>修改“已跟踪[ tracked ]”的文件，部分修改已添加暂存区Index，部分未添加。相当<br>于：已跟踪的文件修改，Add to Index ，Commit前又修改了文件。</p><p>已添加[ added ]<br><img src="https://img-blog.csdnimg.cn/2019011717510149.png" alt="在这里插入图片描述"><br>untracked 状态的文件，通过“Add to Index”被仓库已知，但是没有“Commit”，<br>“Commit”后可变为“已跟踪[ tracked ]”状态。<br>已删除[ removed ]<br><img src="https://img-blog.csdnimg.cn/20190117175116326.png" alt="在这里插入图片描述"><br>从工作区中删除文件，文件会消失，也就没有图标出现，下一次提交时被删除。Team<br>&#x3D;&gt; Untrack可以触发本图标，在“Commit”对话框中可以看到图标。<br>冲突[ conflict ]<br><img src="https://img-blog.csdnimg.cn/20190117175128673.png" alt="在这里插入图片描述"><br>进行Merge合并操作会引起冲突，需要人工解决并添加到索引区修改状态。</p><p>假设有效[ assume-valid ]<br><img src="https://img-blog.csdnimg.cn/20190117175145150.png" alt="在这里插入图片描述"><br>一些修改未被Git检查。右键Team &#x3D;&gt; Assume unchanged可产生该状态。</p><ol><li>增加到缓存区<br>Team-&gt;Add To Index<br><img src="https://img-blog.csdnimg.cn/20190117175206195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>提交到分支区<br>Team-&gt;Commit<br><img src="https://img-blog.csdnimg.cn/20190117175224806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117175304569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117175313986.png" alt="在这里插入图片描述"></li><li>一步提交版本(增加到暂存区+提交到分支区)<br>Team-&gt;Commit<br>在进行提交操作时，EGIT允许直接勾选 [未跟踪] 状态的文件，此时，EGit会自动将该类型文<br>件Add To Index 后再 Commit</li><li>查看版本信息<br>Team-&gt;Show In History<br><img src="https://img-blog.csdnimg.cn/20190117175413764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>增加文件到本地仓库<br>Team-&gt;Add To Index<br>Team-&gt;Commit<br>Team-&gt;Commit<br>创建文件<br><img src="https://img-blog.csdnimg.cn/20190117175429210.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019011717543742.png" alt="在这里插入图片描述"><br>增加到暂存区 [Team-&gt;Add To Index]<br><img src="https://img-blog.csdnimg.cn/20190117175443305.png" alt="在这里插入图片描述"><br>提交到分支区 [Team-&gt;Commit]<br><img src="https://img-blog.csdnimg.cn/20190117175449540.png" alt="在这里插入图片描述"></li><li>提交修改到本地仓库<br>Team-&gt;Add To Index<br>Team-&gt;Commit<br>Team-&gt;Commit<br>修改文件<br><img src="https://img-blog.csdnimg.cn/20190117175501302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117175505754.png" alt="在这里插入图片描述"><br>增加到暂存区 [Team-&gt;Add To Index]<br><img src="https://img-blog.csdnimg.cn/20190117175512757.png" alt="在这里插入图片描述"><br>提交到分支区 [Team-&gt;Commit]<br><img src="https://img-blog.csdnimg.cn/20190117175520256.png" alt="在这里插入图片描述"></li><li>删除文件从本地仓库<br>删除文件<br>Team-&gt;Commit<br>直接删除文件<br><img src="https://img-blog.csdnimg.cn/20190117175538708.png" alt="在这里插入图片描述"><br>提交到分支区 [Team-&gt;Commit]<br><img src="https://img-blog.csdnimg.cn/20190117175546830.png" alt="在这里插入图片描述"></li><li>从暂存区中撤销<br>Team-&gt;Remove From Index<br>修改工作区<br><img src="https://img-blog.csdnimg.cn/20190117175559931.png" alt="在这里插入图片描述"><br>增加到暂存区 [Team-&gt;Add To Index]<br><img src="https://img-blog.csdnimg.cn/20190117175609798.png" alt="在这里插入图片描述"><br>从暂存区中撤销 [Team-&gt;Remove From Index]<br><img src="https://img-blog.csdnimg.cn/20190117175616242.png" alt="在这里插入图片描述"></li><li>基于分支树回滚版本<br>[History窗口中]Reset-&gt;Soft、Mixed、Hard<br>History窗口中选择目标版本并回滚 [Reset-&gt;Soft、Mixed、Hard]<br><img src="https://img-blog.csdnimg.cn/2019011717562966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>基于操作历史回滚版本<br>[GitRef窗口中]Reset-&gt;Soft、Mixed、Hard<br>GitRef窗口中选择某个历史指令并回滚到该指令执行过后的状态 [Reset-&gt;<br>Soft、Mixed、Hard]<br><img src="https://img-blog.csdnimg.cn/20190117175646197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>文件版本比较<br>两个历史版本之间的比较<br>[History窗口中，选择两个版本]-&gt;Compare With Each Other<br>History窗口中，选择两个版本，并通过[Compare With Each Other]进行比较<br><img src="https://img-blog.csdnimg.cn/20190117175708955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><p>指定历史版本和当前工作区中文件的比较 b.<br>[History窗口中，选择某一个版本，选择其中一个文件]-&gt;Compare With WorkSpace<br>History窗口中，选择某一个版本，选择其中一个文件，并通过[Compare With WorkSpace]<br>将该文件的指定版本和当前工作区中的状态做比较<br><img src="https://img-blog.csdnimg.cn/20190117175717259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>比较窗口中提供了按钮，可以实现快速代码移植<br><img src="https://img-blog.csdnimg.cn/20190117175734401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li>忽略文件<br>Team-&gt;Ignore<br>可以通过[Team-&gt;Ignore]命令Git忽略指定文件，此命令本质上会将该文件位置信息写<br>入.gitignore文件中，git会根据此文件中指定的规则忽略相应文件<br><img src="https://img-blog.csdnimg.cn/20190117175751748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因此也可以直接修改.gitignore指定忽略文件规则<br><img src="https://img-blog.csdnimg.cn/20190117175800440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><p>.gitignore文件格式：<br>1）空格不匹配任意文件，可作为分隔符，可用反斜杠转义<br>2）以“＃”开头的行都会被 Git 忽略。即#开头的文件标识注释，可以使用反斜杠进行<br>转义。<br>3）可以使用标准的glob模式匹配。所谓的glob模式是指shell所使用的简化了的正则表<br>达式。<br>4）以斜杠”&#x2F;“开头表示目录；”&#x2F;“结束的模式只匹配文件夹以及在该文件夹路径下的内<br>容，但是不匹配该文件；”&#x2F;“开始的模式匹配项目跟目录；如果一个模式不包含斜杠，则<br>它匹配相对于当前 .gitignore 文件路径的内容，如果该模式不在 .gitignore 文件中，则<br>相对于项目根目录。<br>5）以星号”<em>“通配多个字符，即匹配多个任意字符；使用两个星号”</em>*” 表示匹配任意中<br>间目录，比如<code>a/**/z</code>可以匹配 a&#x2F;z, a&#x2F;b&#x2F;z 或 a&#x2F;b&#x2F;c&#x2F;z等。<br>6）以问号”?“通配单个字符，即匹配一个任意字符；<br>7）以方括号”[]“包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如<br>[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划<br>线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0<br>到9的数字，[a-z]表示匹配任意的小写字母）。<br>8）以叹号”!“表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目<br>录，可以在模式前加上惊叹号（!）取反。需要特别注意的是：如果文件的父目录已经被<br>前面的规则排除掉了，那么对这个文件用”!“规则是不起作用的。也就是说”!“开头的模式<br>表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用”!”也不会再<br>次被包含。可以使用反斜杠进行转义。<br>需要谨记：git对于.ignore配置文件是按行从上到下进行规则匹配的，意味着如果前面的<br>规则匹配的范围更大，则后面的规则将不会生效；</p><h1 id="EGIT-远程版本控制"><a href="#EGIT-远程版本控制" class="headerlink" title="EGIT - 远程版本控制"></a>EGIT - 远程版本控制</h1><hr><ol><li>代码托管站点<br>基于Git这一优秀的分布式版本控制工具，市面上出现了大量基于Git的代码托管网站，开发者可以选择使用代码托管网<br>站作为分布式版本控制中的”中央服务器”，从而非常便利的实现代码托管、分布式开发、项目管理等能功能，省去了自<br>己搭设中心服务器的麻烦。<br>目前，许多开源项目也基于代码托管网站进行管理，随着越来越多的人参与和使用，Git代码托管网站早已不再只是基本<br>的版本管理工具，而成为了一个完整的开发者社区，在开源领域有着重要的作用。<br>目前有很多代码托管网站，其中最知名的是GitHub，托管着大量的私有或开源的项目，其他国外较为知名的代码托管网<br>站包括GitLab、BitBucket等，但这些代码托管网站通常架设在国外，国内访问并不稳定，而国内也有相关产品，例如<br>码云、coding等，在国内也有较为广泛的应用。<br><img src="https://img-blog.csdnimg.cn/20190117175838693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>GitEE码云<br>码云(gitee.com)是开源中国推出的代码托管平台,支持 Git 和 SVN,提供免费的私有仓库托管。目前已成为国内最大的代<br>码托管系统，有超过 300 万的开发者选择码云。<br>注册码云<br>访问码云官网<a href="https://gitee.com/%EF%BC%8C%E6%B3%A8%E5%86%8C%E5%B9%B6%E7%99%BB%E9%99%86">https://gitee.com/，注册并登陆</a><br><img src="https://img-blog.csdnimg.cn/20190117175902988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><p>在码云上创建仓库<br><img src="https://img-blog.csdnimg.cn/20190117175911700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>配置仓库基本信息<br><img src="https://img-blog.csdnimg.cn/20190117175924189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获取项目地址<br><img src="https://img-blog.csdnimg.cn/20190117175936112.png" alt="在这里插入图片描述"></p><ol><li>EGit推送代码到远程仓库 - HTTPS方式<br>提交本地代码<br>Team-&gt;Commit<br>推送本地仓库代码到远程仓库<br>Team-&gt;Remote-&gt;Push<br><img src="https://img-blog.csdnimg.cn/20190117180005853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/201901171800123.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在远程仓库中检查是否推送成功<br><img src="https://img-blog.csdnimg.cn/20190117180021697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>EGit从远程仓库克隆代码到本地仓库 - HTTPS方式<br>[Eclipse菜单 - File - Import]<br>从远程仓库中克隆项目，选择[Eclipse菜单 - File - Import]<br><img src="https://img-blog.csdnimg.cn/201901171800373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117180042489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117180047921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117180052151.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190117180057790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击下一步，克隆项目成功<br><img src="https://img-blog.csdnimg.cn/20190117180105828.png" alt="在这里插入图片描述"><br>可以进一步导入该仓库中的代码到Eclipse中成为一个java项目<br><img src="https://img-blog.csdnimg.cn/20190117180116154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>导入成功，在Eclipse下使用该项目<br><img src="https://img-blog.csdnimg.cn/20190117180124383.png" alt="在这里插入图片描述"></li><li>EGit从远程仓库拉取代码 - HTTPS方式<br>Team-&gt;Remote-&gt;Fetch From…<br>当远程仓库中有高于本地版本的更新内容时，可以在本地仓库通过拉取操作获取该版本内容。<br>为了方便测试，在远程仓库中，创建一个新文件<br><img src="https://img-blog.csdnimg.cn/2019011718013797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ol><p>尝试从EGIT中进行拉取，通过[Team-&gt;Remote-&gt;Fetch From…]开始拉取<br><img src="https://img-blog.csdnimg.cn/20190117180145487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019011718015132.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>拉取之后在History里可以看到最新拉取到的版本，但master和HEAD仍未执行该版本，通过[Rest-&gt;<br>Soft、Mixed、Hard]来进行指向<br><img src="https://img-blog.csdnimg.cn/20190117180200413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功拉取了文件<br><img src="https://img-blog.csdnimg.cn/20190117180208706.png" alt="在这里插入图片描述"></p><ol><li>使用SSH方式连接远程仓库<br>非对称加密简介<br>非对称加密算法是一种密钥的保密方法。<br>非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。公开密钥与私有密钥是一对，<br>如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用<br>对应的公开密钥才能解密。因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。 非对称<br>加密算法实现机密信息交换的基本过程是：甲方生成一对密钥并将其中的一把作为公用密钥向其它方公开；得到该<br>公用密钥的乙方使用该密钥对机密信息进行加密后再发送给甲方；甲方再用自己保存的另一把专用密钥对加密后的<br>信息进行解密。<br>另一方面，甲方可以使用乙方的公钥对机密信息进行签名后再发送给乙方；甲方再用自己的私钥对乙方发送回来的<br>数据进行验签。<br>甲方只能用其专用密钥解密由其公用密钥加密后的任何信息。 非对称加密算法的保密性比较好，它消除了最终用户<br>交换密钥的需要。<br>非对称密码体制的特点：算法强度复杂、安全性依赖于算法与密钥但是由于其算法复杂，而使得加密解密速度没有<br>对称加密解密的速度快。对称密码体制中只有一种密钥，并且是非公开的，如果要解密就得让对方知道密钥。所以<br>保证其安全性就是保证密钥的安全，而非对称密钥体制有两种密钥，其中一个是公开的，这样就可以不需要像对称<br>密码那样传输对方的密钥了。这样安全性就大了很多。<br>非对称加密主要算法有： RSA、Elgamal、背包算法、Rabin、D-H、ECC（椭圆曲线加密算法）等</li></ol><p>SSH免密登录原理<br><img src="https://img-blog.csdnimg.cn/2019011718024380.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>SSH方式免密连接远程仓库<br>以上的案例中均是使用HTTPS方式连接的远程仓库，但通常远程仓库通常都提供SSH方式的连接，且SSH方式以非<br>对称加密为原理可以实现免密登录，从而可以避免频繁的输入用户名密码，是一种更加安全、便捷的连接方式，目<br>前应用的非常广泛，推荐使用。</p><p>本地生成公钥私钥对<br><img src="https://img-blog.csdnimg.cn/20190117180258226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在远程仓库中配置公钥<br><img src="https://img-blog.csdnimg.cn/20190117180307675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>之后就可以通过SSH地址来免密连接远程仓库了<br><img src="https://img-blog.csdnimg.cn/20190117180316813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5MTg4MDM5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.csdn.net/&quot;&gt;&lt;img src=&quot;https://img-home.csdnimg.cn/images/20201124032511.png&quot; alt=&quot;CSDN首页&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>1.Git零基础使用详解</title>
    <link href="http://example.com/2022/11/11/1-Git%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>http://example.com/2022/11/11/1-Git%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-11-11T13:51:09.000Z</published>
    <updated>2022-11-11T13:52:59.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Git零基础使用详解"><a href="#1-Git零基础使用详解" class="headerlink" title="1.Git零基础使用详解"></a>1.Git零基础使用详解</h1><h1 id="一、git概述"><a href="#一、git概述" class="headerlink" title="一、git概述"></a>一、git概述</h1><hr><p>目前最流行的版本控制工具</p><ol><li>版本控制概念<br>在代码开发过程中，往往需要对<a href="https://so.csdn.net/so/search?q=%E6%BA%90%E7%A0%81&spm=1001.2101.3001.7020">源码</a>进行多次的修改操作，这样一来同一份代码就产生了多个版本，在开发过程中通常需要对这些多个版本代码进行管理，以便于在需要时进行 代码回滚、多版本间比较、多人协作开发、代码分支、分支合并 等操作。<br>这样的需求大量的存在，而随着软件越来越复杂、代码越来越多、参与开发者越来越多，版本管理也变的越来越有难度，此时就需要专业的软件来对版本进行管理，这个过程就称之为版本控制，实现版本控制的软件就称之为版本控制软件。</li><li>版本控制软件分类<br>集中式版本控制<br>在集中式版本控制中，版本库是集中存放在中央服务器的，开发者在开发之前要先从中央服务器取得最新的版本，然后开始工作，工作完成后，再把自己的代码推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。<br>优点：<br>便于集中式的代码管理<br>便于进行权限控制<br>缺点：<br>需要联网才可以工作,而且项目庞大的情况下对带宽的要求比较高<br>中心服务器存在单节点故障风险</li></ol><p><strong>CVS、SVN</strong></p><p><strong>分布式版本控制</strong><br>在分布式版本控制系统中，没有“中央服务器”的概念，每个人的电脑上都是一个完整的版本库。而在多人协同工作时，通过推送各自的修改，保证多人间的版本一致。<br>但其实，在实际开发中，很少真的在两个电脑间进行修改的推送，而是选择一台充当“中央服务器”，但这个服务器仅仅是为了使用便利，本质上和其他机器没有任何区别，即使宕机，整个分布式版本控制仍然可以工作。</p><p><strong>优点</strong></p><ol><li>不需要联网也可以工作</li><li>不存在单节点故障风险</li></ol><p><strong>缺点</strong><br>无法实现严格的权限控制</p><p><strong>Git</strong></p><ol><li>git历史<br>Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。<br>Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？<br>在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！<br>你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。<br>不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。<br>安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。<br>Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：<br>Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。<br>Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。<br>历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了。</li></ol><h1 id="二、git安装配置"><a href="#二、git安装配置" class="headerlink" title="二、git安装配置"></a>二、git安装配置</h1><hr><ol><li>下载Git<br>Git最早只支持Linux，目前已经能够支持Linux、Unix、Windows、OS系统之上。<br>下载地址：<br><a href="https://git-scm.com/">https://git-scm.com/</a></li><li>安装Git<br>Linux上安装Git<br>解压Linux版源码包<br>依次执行</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./config</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">123</span><br></pre></td></tr></table></figure><p><strong>Windows上安装Git</strong><br>\1. 下载安装包<br>\2. 双击执行默认安装<br>\3. 双击 Git Bush 即可启动Git</p><ol><li>初始配置Git<br>因为Git是一款分布式的版本控制软件，多用户之间的互相通信需要确定身份，所以安装Git后需要先配置当前用户的名称和邮箱，才可以使用</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><h1 id="三、创建版本库"><a href="#三、创建版本库" class="headerlink" title="三、创建版本库"></a>三、创建版本库</h1><hr><ol><li>版本库的概念<br>版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</li><li>创建版本库<br>在任意位置创建一个文件夹，位置可以任意，但是强烈建议目录路径中不要包含中文。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">cd</span> e:</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">pwd</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">mkdir</span> gitdemo01</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">cd</span> gitdemo01</span></span><br><span class="line">1234</span><br></pre></td></tr></table></figure><p>通过git命令将该目录变为git所管理的仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>命令执行后，该目录下会多出一个.git的目录，这个目录是Git来跟踪管理版本库的，请勿手动修改。<br><strong>也可以在一个非空的文件夹中创建仓库，但是在学习阶段先不要这样做。</strong></p><h1 id="四、工作区-、版本库、暂存区、分支-概念"><a href="#四、工作区-、版本库、暂存区、分支-概念" class="headerlink" title="四、工作区 、版本库、暂存区、分支 概念"></a>四、工作区 、版本库、暂存区、分支 概念</h1><hr><p>工作区：存放文件的位置<br>版本库：工作区中.git文件夹,其中包含暂存区 和 分支区<br>暂存区：版本库中 包含暂存区 git add命令 或 git rm 命令加入的操作 被记录在暂存区内<br>分支区：版本库中 包含分支区 是最终版本信息保存的位置 git commit命令将暂存区内记录的操作 提交到分支中<br>可以配置多个分支，如果不指定则默认为master分支，并有一个head指针指向master分支的最新位置</p><h1 id="五、版本管理"><a href="#五、版本管理" class="headerlink" title="五、版本管理"></a>五、版本管理</h1><hr><ol><li>提交新文件<br>注意，所有版本控制系统只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但无法跟踪文件内容的变化，只能查看文件信息变化，如大小、更新时间等。</li></ol><p>将需要管理的文件放置到仓库目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    test.txt</span><br><span class="line">This is test</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>查看版本库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>增加文件到暂存区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>提交版本到分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add file test.txt&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看版本库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>-m后面输入的是本次提交的说明，可以输入任意内容</strong><br><strong>本例中只经历了一个修改就提交了，其实完全可以 多个修改后一次提交</strong></p><ol><li>提交修改<br>修改test.txt</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>查看版本库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看文件具体修改</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git diff test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>增加文件到暂存区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>提交版本到分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;change Git to git&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>可以再次查看状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>查看历史版本<br>修改test.txt</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">git is good.</span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>增加文件到暂存区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>提交版本到分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add new line git is good&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>…重复以上步骤保存文件的多个版本…</p><p>查看历史版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty=oneline</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>回滚版本<br>回滚版本</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>**在Git中，用HEAD表示当前版本，上一个版本就是HEAD，上上一个版本就是HEAD，当然往上100个版本写100个比较容易数不过来，所以写成HEAD~100。 **</p><p>也可以通过版本包跳转版本，比上一种写法好的地方在于可以跳转到已经被回退的版本上:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 5527510751b4303390bb4f321bfa8b7f997cbfd0</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>或简写为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard 55275</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>但是问题是如知道版本号呢？可以通过如下命令查看之前所有提交对应操作及版本号：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reflog</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>撤销修改<br>尚未增加文件到暂存区：<br>修改test.txt</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">git is good</span><br><span class="line">git is easy to use</span><br><span class="line">git is really useful</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><p>撤销修改 – 将文件恢复到最近一次add 或 commit之前的状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>已经增加文件到暂存区，但尚未提交到分支：<br>修改test.txt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">git is good</span><br><span class="line">git is easy to use</span><br><span class="line">git is really useful</span><br><span class="line">git is good</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>增加文件到暂存区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add </span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>撤销修改 – 把暂存区的修改撤销掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>撤销修改 – 将文件恢复到最近一次add 或 commit之前的状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>已经增加文件到暂存区，且已提交到分支：<br>可以通过之前所学的版本回退技术完成。<br>但这仅限于本地版本库，如果版本已经提交到远程版本库，则即使在本地做版本库中做回退，也无法取消在远程版本库中的记录。</p><ol><li>删除文件<br>从工作区中删除文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看版本库状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>增加删除文件操作到暂存区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rm test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>提交版本到分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit</span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>细节:Git跟踪并管理的是修改，而非文件。<br>实验：<br>修改test.txt</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">git is good</span><br><span class="line">git is easy to use</span><br><span class="line">1234</span><br></pre></td></tr></table></figure><p>增加文件到暂存区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test.txt</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改test.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git is a version control system.</span><br><span class="line">git is free software.</span><br><span class="line">git is good</span><br><span class="line">git is easy to use</span><br><span class="line">git is very useful</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><p>提交版本到分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;change test&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>发现git is really useful并没有被提交</p><h1 id="六、远程仓库"><a href="#六、远程仓库" class="headerlink" title="六、远程仓库"></a>六、远程仓库</h1><hr><ol><li>远程仓库概念<br>为了方便版本的交换，通常会使用一个中心服务器，24小时连续运行，提供版本控制服务<br>这就有两种做法：<br>自己搭建中心服务器<br>使用GitHub仓库托管网站<br>目前我们更多使用代码托管的方式工作</li><li>GitHub远程仓库连接<br>注册GitHub账号</li></ol><p>由于git和github的通信需要加密，需要设置SSH<br>创建SSH Key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen -t rsa -C <span class="string">&quot;youremail@example.com&quot;</span></span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>最终，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。</p><p>登陆GitHub，打开“Account settings”，“SSH Keys”页面，然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容</p><ol><li>关联远程仓库<br>当我们已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，非常方便<br>登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库<br>在Repository name填入learngit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库</li></ol><p>本地关联到远程仓库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git remote add origin git@github.com:piaoqian/learngit.git</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>推送到远程仓库<br>把本地库的内容推送到远程:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push -u origin master</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin master</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>从远程仓库克隆<br>$ git clone &lt;版本库的网址&gt;<br>$ git clone &lt;版本库的网址&gt; &lt;本地目录名&gt;</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> git@github.com:<span class="built_in">test</span>/gitskills.git</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>将远程存储库中的更改合并到当前分支中<br>$ git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git pull git@github.com:<span class="built_in">test</span>/learngit.git master:master -f</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>删除远程仓库关联</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git remote <span class="built_in">rm</span> origin</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h1 id="九、分支管理"><a href="#九、分支管理" class="headerlink" title="九、分支管理"></a>九、分支管理</h1><hr><ol><li>分支概念<br>可以从当前的开发线中分割出一个新的开发线，从而在不影响原来开发线的过程中，开发并提交代码，等到新的开发线开发完成，可以一次性加入原开发线，即进行分支合并操作。<br>分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。<br>现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</li><li>分支的使用<br>默认git中只有一个主分支master，head就指向master</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">head</span><br><span class="line">  |</span><br><span class="line">master</span><br><span class="line">  |</span><br><span class="line">x----x----x</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><p>每次提交master分支都会向前移动一步，这样，随着你不断提交，master分支的线也越来越长<br>head<br>|<br>master<br>|<br>x—-x—-x—-x</p><p>当我们创建新的分支，例如dev时，Git新建了一个指针叫dev，指向master相同的提交，再把HEAD指向dev，就表示当前分支在dev上：<br>创建分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git branch dev</span><br><span class="line">$ git checkout dev</span><br><span class="line">12</span><br><span class="line">或</span><br><span class="line">1</span><br><span class="line">$ git checkout -b dev</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>-b参数表示创建并切换<br>用git branch命令查看当前分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$git branch</span><br><span class="line">1</span><br><span class="line"> master</span><br><span class="line">   |</span><br><span class="line">x----x----x----x</span><br><span class="line">    |</span><br><span class="line">  dev</span><br><span class="line">     |</span><br><span class="line"> head</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>Git创建一个分支很快，因为除了增加一个dev指针，改改HEAD的指向，工作区的文件都没有任何变化！<br>从现在开始，对工作区的修改和提交就是针对dev分支了，比如新提交一次后，dev指针往前移动一步，而master指针不变<br>创建文件：<br>test2.txt<br>creating a new branch is quick.<br>提交：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git add test2.txt</span><br><span class="line">$ git commit -m &quot;branch test&quot;</span><br><span class="line">12</span><br><span class="line"> master</span><br><span class="line">   |</span><br><span class="line">x----x----x----x----x</span><br><span class="line">|</span><br><span class="line">   dev</span><br><span class="line">|</span><br><span class="line">   head</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>如我们在dev上的工作完成了，就可以把dev合并到master上。Git怎么合并呢？最简单的方法，就是直接把master指向dev的当前提交，就完成了合并：<br>切换回主分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git checkout master</span></span><br><span class="line">1</span><br><span class="line">  head</span><br><span class="line">   |</span><br><span class="line"> master</span><br><span class="line">      |</span><br><span class="line">x----x----x----x----x</span><br><span class="line">|</span><br><span class="line">   dev</span><br><span class="line">1234567</span><br></pre></td></tr></table></figure><p>把dev分支的工作成果合并到master分支上。git merge命令用于合并指定分支到当前分支。此时采用的是快速合并策略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git merge dev</span></span><br><span class="line">1</span><br><span class="line">   head</span><br><span class="line">|</span><br><span class="line">  master</span><br><span class="line">   |</span><br><span class="line">x----x----x----x----x</span><br><span class="line">|</span><br><span class="line">   dev</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">合并完分支后，甚至可以删除dev分支。删除dev分支就是把dev指针给删掉，删掉后，我们就剩下了一条master分支：</span><br><span class="line">删除dev分支:</span><br><span class="line">1234567891011</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d dev</span></span><br><span class="line">1</span><br><span class="line">查看branch：</span><br><span class="line">1</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch</span></span><br><span class="line">1</span><br><span class="line">   head</span><br><span class="line">|</span><br><span class="line">  master</span><br><span class="line">   |</span><br><span class="line">x----x----x----x----x</span><br><span class="line">12345</span><br></pre></td></tr></table></figure><ol><li>冲突<br>当多个分支之间的进行合并时，可能会产生冲突，需要对冲突解决后才能合并分支</li></ol><p>创建新的分支feature1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b feature1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改文件:<br>test2.txt<br>creating a new branch is quick and simple.</p><p>在feature1分支上提交:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add test2.txt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;AND simple&quot;</span></span></span><br><span class="line">12</span><br><span class="line">切换到master分支：</span><br><span class="line">1</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改文件：<br>test2.txt<br>Creating a new branch is quick &amp; simple.<br>在master分支上提交:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add test2.txt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;&amp; simple&quot;</span></span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge feature1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>Git告诉我们，test2.txt文件存在冲突，必须手动解决冲突后再提交。git status也可以告诉我们冲突的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改如下后保存：<br>Creating a new branch is quick and simple.</p><p>再提交:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add test2.txt</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;conflict fixed&quot;</span></span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>用带参数的git log也可以看到分支的合并情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --graph --pretty=oneline --abbrev-commit</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>最后，删除feature1分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d feature1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>冲突解决。</p><ol><li>强制禁止快速合并策略<br>通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。<br>如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</li></ol><p>创建dev分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b dev</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改文件:<br>test2.txt<br>creating a new branch is quick and simple xxx.<br>提交：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add readme.txt</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit -m <span class="string">&quot;add merge&quot;</span></span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>切换回master:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>强制禁止快速合并模式，合并分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge --no-ff -m <span class="string">&quot;merge with no-ff&quot;</span> dev</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>分支策略<br>master分支应该是非常稳定的，也就是仅用来发布新版本<br>干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本</li></ol><p>6.stash 暂存分支<br>当某一分支工作到一半，突然需要切换到其他分支时，可以通过stash机制将当前分支状态暂存起来，再在需要的时候恢复。</p><p>创建新的分支feature1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b dev</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>修改文件:<br>test3.txt<br>today is a good day.<br>加入文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add test3.txt</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>临时需要切换到其他分支，暂存当前分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git stash</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>切换到dev2分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b dev2</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>修改文件：<br>test4.txt<br>happy every day<br>加入文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add test4.txt</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>提交文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git commit test4.txt -m <span class="string">&quot;add test4.txt&quot;</span></span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>切换到master分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout master</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>合并分支</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge --no-ff -m <span class="string">&quot;merged dev2&quot;</span> dev2</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>切换回dev分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout dev</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>发现工作区是干净的，需要恢复暂存分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git stash list</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>有两个办法：<br>一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；<br>另一种方式是用git stash pop，恢复的同时把stash内容也删</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git stash pop</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><ol><li>多人协作<br>在多人使用远程仓库进行工作时，往往在同一个分支上的操作会存在冲突，此时需要远程冲突合并。<br>多人协作的工作模式通常是这样：<br>首先，可以试图用git push origin 推送自己的修改；<br>如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；<br>如果合并有冲突，则解决冲突，并在本地提交；<br>没有冲突或者解决掉冲突后，再用git push origin 推送就能成功！<br>如果git pull提示no tracking information，则说明本地分支和远程分支的链接关系没有创建，用命令git branch –set-upstream-to origin&#x2F;</li></ol><h1 id="十、标签"><a href="#十、标签" class="headerlink" title="十、标签"></a>十、标签</h1><hr><p>git中的版本都有版本编号，对代码的提交和<a href="https://so.csdn.net/so/search?q=%E5%9B%9E%E6%BB%9A&spm=1001.2101.3001.7020">回滚</a>都是基于版本编号进行的，但是git中的版本编号是一串随机串，不好记忆，此时可以使用标签机制为某个提交增加标签，方便以后查找</p><p>在当前分支当前提交上打标签：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git tag v1.0</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>查看所有标签,默认标签是打在最新提交的commit上的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git tag</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>如果想要打标签在某个指定历史commit上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag v0.9 f52c633</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>还可以创建带有说明的标签，用-a指定标签名，-m指定说明文字：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -a v0.1 -m <span class="string">&quot;version 0.1 released&quot;</span> 1094adb</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>可以通过如下命令查看一个tag信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show v0.1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>如果标签打错了，也可以删除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -d v0.1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>如果要推送某个标签到远程，使用命令git push origin ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin v1.0</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>或者，一次性推送全部尚未推送到远程的本地标签：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin --tags</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git tag -d v0.9</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>然后，从远程删除。删除命令也是push，但是格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin :refs/tags/v0.9</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h1 id="十一、定制Git"><a href="#十一、定制Git" class="headerlink" title="十一、定制Git"></a>十一、定制Git</h1><hr><ol><li>忽略特定文件<br>有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件等等<br>此时，在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。<br>不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a></li><li>别名<br>配置别名：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.st status</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.co checkout</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.ci commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global alias.br branch</span></span><br><span class="line">1234</span><br></pre></td></tr></table></figure><p>删除别名<br>找到<code>.git/config</code>文件<br>找到<code>[alias]</code>标签，删除其中别名</p><h1 id="十二、使用码云"><a href="#十二、使用码云" class="headerlink" title="十二、使用码云"></a>十二、使用码云</h1><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用GitHub时，国内的用户经常遇到的问题是访问速度太慢，有时候还会出现无法连接的情况。</span><br><span class="line">可以使用国内的Git托管服务——码云（gitee.com），和GitHub相比，码云也提供免费的Git仓库。</span><br><span class="line">此外，还集成了代码质量检测、项目演示等功能。对于团队协作开发，码云还提供了项目管理、代码托管、文档管理的服务，5人以下小团队免费。</span><br><span class="line">123</span><br></pre></td></tr></table></figure><h1 id="十三、Eclipse中的Git插件"><a href="#十三、Eclipse中的Git插件" class="headerlink" title="十三、Eclipse中的Git插件"></a>十三、Eclipse中的Git插件</h1><hr><p>待续</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-Git零基础使用详解&quot;&gt;&lt;a href=&quot;#1-Git零基础使用详解&quot; class=&quot;headerlink&quot; title=&quot;1.Git零基础使用详解&quot;&gt;&lt;/a&gt;1.Git零基础使用详解&lt;/h1&gt;&lt;h1 id=&quot;一、git概述&quot;&gt;&lt;a href=&quot;#一、git概</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>若依开发文档</title>
    <link href="http://example.com/2022/10/18/%E8%8B%A5%E4%BE%9D%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <id>http://example.com/2022/10/18/%E8%8B%A5%E4%BE%9D%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</id>
    <published>2022-10-18T01:27:21.000Z</published>
    <updated>2022-10-18T01:27:21.192Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Stream流基本操作</title>
    <link href="http://example.com/2022/10/15/Stream%E6%B5%81%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2022/10/15/Stream%E6%B5%81%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</id>
    <published>2022-10-15T09:14:55.000Z</published>
    <updated>2022-10-15T09:15:48.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stream流使用笔记"><a href="#Stream流使用笔记" class="headerlink" title="Stream流使用笔记"></a>Stream流使用笔记</h1><blockquote><p>作者：lilinzhi</p></blockquote><p>guava适合于构造动态List，虽然只是个语法题，但是易用性确实好很多，可以用一个简单语句代替之前用很多语句才能实现的功能，方便表达出程序员的想法。Guava里的很多方法都非常方便，相信基本都是来自于实践中的痛点，对JDK里的方法是个很好的补充。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">       &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">       &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">       &lt;version&gt;<span class="number">31.0</span><span class="number">.1</span>-jre&lt;/version&gt;</span><br><span class="line">   &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>listA与listB的差级</p><p>listB与listA的差级</p><p>listA与listB的交集</p><p>listA与listB的并集（不去重）</p><p>listA与listB的去重并集（不去重）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lilinzhi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/9 14:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ArrayList&lt;String&gt; listA = Lists.newArrayList(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        ArrayList&lt;String&gt; listB = Lists.newArrayList(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;王五&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;listA = &quot;</span> + listA);</span><br><span class="line">        System.out.println(<span class="string">&quot;listB = &quot;</span> + listB);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// listA和listB的差集（listA - listB）</span></span><br><span class="line">        List&lt;String&gt; collect = listA.stream().filter(item -&gt; !listB.contains(item)).collect(Collectors.toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;listA - listB的差集 = &quot;</span> + collect);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// listA和listB的差集（listB - listA）</span></span><br><span class="line">        List&lt;String&gt; collect1 = listB.stream().filter(item -&gt; !listA.contains(item)).collect(Collectors.toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;listB - listA的差集 = &quot;</span> + collect1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// listA和listB交集</span></span><br><span class="line">        List&lt;String&gt; intersection = listA.stream().filter(listB::contains).collect(Collectors.toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;listA和listB交集 = &quot;</span> + intersection);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// listA和listB并集（不去重）</span></span><br><span class="line">        listA.addAll(listB);</span><br><span class="line">        System.out.println(<span class="string">&quot;listA和listB并集 = &quot;</span> + listA);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// listA和listB并集（去重）</span></span><br><span class="line">        List&lt;String&gt; distinctList = listA.stream().distinct().collect(Collectors.toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;listA和listB去重并集 = &quot;</span> + distinctList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Stream流使用笔记&quot;&gt;&lt;a href=&quot;#Stream流使用笔记&quot; class=&quot;headerlink&quot; title=&quot;Stream流使用笔记&quot;&gt;&lt;/a&gt;Stream流使用笔记&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;作者：lilinzhi&lt;/p&gt;
&lt;/blo</summary>
      
    
    
    
    
    <category term="Stream流基本操作" scheme="http://example.com/tags/Stream%E6%B5%81%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>函数式接口</title>
    <link href="http://example.com/2022/10/09/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/"/>
    <id>http://example.com/2022/10/09/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/</id>
    <published>2022-10-09T07:00:58.000Z</published>
    <updated>2022-10-09T07:04:41.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h1><blockquote><p>作者：lilinzhi</p></blockquote><p>1.消费型</p><p>​消费型Consumer</p><p>​有参数，没有返回值</p><p>2.供应型</p><p>​供应型Supplier</p><p>​没有参数，有返回值</p><p>3.功能型</p><p>​功能性Function</p><p>​有参数，也有返回值</p><p>4.断言型</p><p>​断言型Predicate</p><p>​有返回值–boolean      事情-判断</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Consumer;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Function;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Predicate;</span><br><span class="line"><span class="keyword">import</span> java.util.function.Supplier;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lilinzhi</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: TODO</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/7 21:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//1.函数式接口</span></span><br><span class="line">        <span class="comment">//  消费型Consumer</span></span><br><span class="line">        <span class="comment">//  有参数，没有返回值</span></span><br><span class="line">        Consumer&lt;String&gt; c1 =System.out::println;</span><br><span class="line">        c1.accept(<span class="string">&quot;llz&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.供应型Supplier</span></span><br><span class="line">        <span class="comment">//  没有参数，有返回值</span></span><br><span class="line">        <span class="comment">//  要一个0-9之间的随机整数</span></span><br><span class="line">        Supplier&lt;Integer&gt; s1 =()-&gt;&#123;<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">10</span>);&#125;;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> s1.get();</span><br><span class="line">        System.out.println(integer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.功能性Function       apply</span></span><br><span class="line">        <span class="comment">//  有参数，也有返回值</span></span><br><span class="line">        <span class="comment">//String------&gt;int</span></span><br><span class="line">        Function&lt;String,Integer&gt; f1 =(String s)-&gt;&#123;<span class="keyword">return</span> Integer.parseInt(s);&#125;;</span><br><span class="line">        <span class="type">int</span> <span class="variable">v2</span> <span class="operator">=</span> f1.apply(<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        System.out.println(v2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.断言型Predicate</span></span><br><span class="line">        <span class="comment">//   有返回值--boolean      事情-判断</span></span><br><span class="line">        <span class="comment">//  String---&gt;包含zzt</span></span><br><span class="line">        Predicate&lt;String&gt; p1= (String s)-&gt;&#123;<span class="keyword">return</span> s.contains(<span class="string">&quot;zzt&quot;</span>);&#125;;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">abczzt</span> <span class="operator">=</span> p1.test(<span class="string">&quot;abczzt&quot;</span>);</span><br><span class="line">        System.out.println(abczzt);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;函数式接口&quot;&gt;&lt;a href=&quot;#函数式接口&quot; class=&quot;headerlink&quot; title=&quot;函数式接口&quot;&gt;&lt;/a&gt;函数式接口&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;作者：lilinzhi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.消费型&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="函数式接口" scheme="http://example.com/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>提高生产力，最全MybatisPlus讲解</title>
    <link href="http://example.com/2022/10/07/%E6%8F%90%E9%AB%98%E7%94%9F%E4%BA%A7%E5%8A%9B%EF%BC%8C%E6%9C%80%E5%85%A8MybatisPlus%E8%AE%B2%E8%A7%A3/"/>
    <id>http://example.com/2022/10/07/%E6%8F%90%E9%AB%98%E7%94%9F%E4%BA%A7%E5%8A%9B%EF%BC%8C%E6%9C%80%E5%85%A8MybatisPlus%E8%AE%B2%E8%A7%A3/</id>
    <published>2022-10-07T05:29:52.000Z</published>
    <updated>2022-10-07T05:30:16.019Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/"><img src="https://static.segmentfault.com/main_site/b9d296b0/static/logo-b.d865fc97.svg" alt="segmentfault"></a></p><p><a href="https://segmentfault.com/questions">问答</a><a href="https://segmentfault.com/blogs">专栏</a><a href="https://segmentfault.com/tags">标签</a><a href="https://segmentfault.com/jobs">招聘</a><a href="https://segmentfault.com/events">活动</a></p><p>发现</p><p><a href="https://segmentfault.com/user/login">注册登录</a></p><p><img src="https://sponsor.segmentfault.com/lg.php?bannerid=0&campaignid=0&zoneid=2&loc=https://segmentfault.com/a/1190000038393216&referer=https://cn.bing.com/&cb=1a6b858c88" alt="img"></p><p><a href="https://segmentfault.com/">首页</a><a href="https://segmentfault.com/blogs">专栏</a><a href="https://segmentfault.com/blog/cbuc">小菜良记</a>文章详情</p><p><strong>1</strong></p><h1 id="提高生产力，最全-MyBatisPlus-讲解！"><a href="#提高生产力，最全-MyBatisPlus-讲解！" class="headerlink" title="提高生产力，最全 MyBatisPlus 讲解！"></a><a href="https://segmentfault.com/a/1190000038393216">提高生产力，最全 MyBatisPlus 讲解！</a></h1><p><a href="https://segmentfault.com/u/17689400062"><img src="https://avatar-static.segmentfault.com/374/624/374624372-60e931e1645ae_huge128" alt="img"><strong>蔡不菜丶</strong></a>发布于 2020-12-06</p><p><img src="https://sponsor.segmentfault.com/lg.php?bannerid=0&campaignid=0&zoneid=25&loc=https://segmentfault.com/a/1190000038393216&referer=https://cn.bing.com/&cb=fef9e3d6e7" alt="img"></p><p>大家好，我是小菜，一个渴望在互联网行业做到蔡不菜的小菜。可柔可刚，点赞则柔，白嫖则刚！ <strong>死鬼~看完记得给我来个三连哦！</strong></p><p><img src="https://segmentfault.com/img/remote/1460000037680420" alt="img"></p><blockquote><p>本文主要介绍</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MybatisPlus的使用</span><br></pre></td></tr></table></figure><p>如有需要，可以参考</p><p>如有帮助，不忘 <strong>点赞</strong> ❥</p><p>微信公众号已开启，<strong>小菜良记</strong>，没关注的同学们记得关注哦！</p></blockquote><p>如果你每天还在重复写 <strong>CRUD</strong> 的 <strong>SQL</strong>，如果你对这些 <strong>SQL</strong> 已经不耐烦了，那么你何不花费一些时间来阅读这篇文章，然后对已有的老项目进行改造，必有收获！</p><h2 id="一、MP-是什么"><a href="#一、MP-是什么" class="headerlink" title="一、MP 是什么"></a>一、MP 是什么</h2><p><strong>MP</strong> 全称 <strong>Mybatis-Plus</strong> ，套用官方的解释便是成为 MyBatis 最好的搭档,简称<strong>基友</strong>。它是在 <strong>MyBatis</strong> 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h3 id="1-三大特性"><a href="#1-三大特性" class="headerlink" title="1. 三大特性"></a>1. 三大特性</h3><h4 id="1）润物无声"><a href="#1）润物无声" class="headerlink" title="1）润物无声"></a>1）润物无声</h4><p>只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑。</p><h4 id="2）效率至上"><a href="#2）效率至上" class="headerlink" title="2）效率至上"></a>2）效率至上</h4><p>只需简单配置，即可快速进行单表 CRUD 操作，从而节省大量时间。</p><h4 id="3）丰富功能"><a href="#3）丰富功能" class="headerlink" title="3）丰富功能"></a>3）丰富功能</h4><p>代码生成、物理分页、性能分析等功能一应俱全。</p><h3 id="2-支持数据库"><a href="#2-支持数据库" class="headerlink" title="2. 支持数据库"></a>2. 支持数据库</h3><ul><li><strong>mysql</strong> 、<strong>mariadb</strong> 、<strong>oracle</strong> 、<strong>db2</strong> 、<strong>h2</strong> 、<strong>hsql</strong> 、<strong>sqlite</strong> 、<strong>postgresql</strong> 、<strong>sqlserver</strong> 、<strong>presto</strong> 、<strong>Gauss</strong> 、<strong>Firebird</strong></li><li><strong>Phoenix</strong> 、<strong>clickhouse</strong> 、<strong>Sybase ASE</strong> 、 <strong>OceanBase</strong> 、达梦数据库 、虚谷数据库 、人大金仓数据库 、南大通用数据库</li></ul><h3 id="3-框架结构"><a href="#3-框架结构" class="headerlink" title="3. 框架结构"></a>3. 框架结构</h3><p><img src="https://segmentfault.com/img/remote/1460000038393220" alt="img"></p><p>实话说，以上这些内容只要你打开官网也能看到，那么我们接下来就先来实际操作一番！</p><p><img src="https://segmentfault.com/img/remote/1460000038393221" alt="img"></p><h2 id="二、MP实战"><a href="#二、MP实战" class="headerlink" title="二、MP实战"></a>二、MP实战</h2><h3 id="1-手摸手式项目练习"><a href="#1-手摸手式项目练习" class="headerlink" title="1. 手摸手式项目练习"></a>1. 手摸手式项目练习</h3><h4 id="1）数据库及表准备"><a href="#1）数据库及表准备" class="headerlink" title="1）数据库及表准备"></a>1）数据库及表准备</h4><p><strong>sql 语句：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`  (</span><br><span class="line"> `id` <span class="type">int</span>(<span class="number">0</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line"> `dept_id` <span class="type">int</span>(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `name` <span class="type">varchar</span>(<span class="number">16</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> `remark` <span class="type">varchar</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">7</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of student</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="string">&#x27;小菜&#x27;</span>, <span class="string">&#x27;关注小菜不迷路！&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">2</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;好好学习，天天向上！&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="2）pom-依赖"><a href="#2）pom-依赖" class="headerlink" title="2）pom 依赖"></a>2）pom 依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--MP插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Mysql--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--JUNIT--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3）配置文件"><a href="#3）配置文件" class="headerlink" title="3）配置文件"></a>3）配置文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"> <span class="attr">datasource:</span></span><br><span class="line"> <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line"> <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line"> <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line"> <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br></pre></td></tr></table></figure><h4 id="4）实体类"><a href="#4）实体类" class="headerlink" title="4）实体类"></a>4）实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@TableName(&quot;student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@TableId(type = IdType.AUTO)</span></span><br><span class="line"> <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> Integer deptId;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> String remark;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5）Mapper"><a href="#5）Mapper" class="headerlink" title="5）Mapper"></a>5）Mapper</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="6）测试类"><a href="#6）测试类" class="headerlink" title="6）测试类"></a>6）测试类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Autowired</span></span><br><span class="line"> <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Test</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getAll</span><span class="params">()</span> &#123;</span><br><span class="line"> List&lt;User&gt; users = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"> users.forEach(System.out::println);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** OUTPUT:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment">User(id=2, deptId=1, name=小明, remark=好好学习，天天向上！)</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p><strong>小菜结：</strong></p><p>在以上的结果，我们可以看到已经打印出了数据库中的全部数据（两条）。而并没有看到平时我们需要写的 <strong>mapper.xml</strong> 文件，只是用到了 <strong>usermapper</strong> 中的 <strong>selectList()</strong> 方法，而 <strong>UserMapper</strong> 继承了 <strong>BaseMapper</strong> 这个接口，这个接口便是 <strong>MybatisPlus</strong> 提供给我们的，我们再来看下这个接口给我们提供了哪些方法。</p><h3 id="2-CRUD-基操"><a href="#2-CRUD-基操" class="headerlink" title="2. CRUD 基操"></a>2. CRUD 基操</h3><h4 id="1）insert"><a href="#1）insert" class="headerlink" title="1）insert"></a>1）insert</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insert</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="comment">//这里使用了 lombok 中的建造者模式构建对象</span></span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().deptId(<span class="number">1</span>).name(<span class="string">&quot;小华&quot;</span>).remark(<span class="string">&quot;小华爱学习&quot;</span>).build();</span><br><span class="line"> <span class="type">int</span> <span class="variable">insertFlag</span> <span class="operator">=</span> userMapper.insert(user);</span><br><span class="line"> log.info(<span class="string">&quot;插入影响行数,&#123;&#125; | 小华的ID: &#123;&#125;&quot;</span>, insertFlag, user.getId());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** OUTPUT:</span></span><br><span class="line"><span class="comment">插入影响行数,1 | 小华的ID: 8</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>可以看到我们不仅插入了数据，而且还获取到了插入数据的<strong>ID</strong>，但是值得注意的是这里的 <strong>ID</strong> 虽然是自增的，但并非是 <strong>MP</strong> 默认的 <strong>ID生成策略</strong>，而是我们在实体类中指定的：</p><p><img src="https://segmentfault.com/img/remote/1460000038393222" alt="img"></p><p>在 <strong>MP</strong> 中支持的主键生成策略有以下几种：</p><p><img src="https://segmentfault.com/img/remote/1460000038393225" alt="img"></p><p>我们既然已经看到了 <strong>@TableId</strong> 这个注解，那我们再来关注一个常用注解 <strong>@TableField</strong></p><p>从注解名上我们就可以看出，**@TableId** 是用来标记主键 <strong>ID</strong> 的，而 <strong>@TableField</strong> 是用来标记其他字段的。</p><p><img src="https://segmentfault.com/img/remote/1460000038393219" alt="img"></p><p>可以看得出来这个注解中存在的值还是比较多的，下面介绍几个常用的值：</p><ul><li><strong>value</strong></li></ul><p>用于解决字段名不一致问题和驼峰命名，比如实体类中属性名为 <strong>remark</strong>，但是表中的字段名为 <strong>describe</strong> ，这个时候就可以使用 <code>@TableField(value=&quot;describe&quot;)</code> 来进行转换。驼峰转换如果在全局中有配置驼峰命名，这个地方可不写。</p><ul><li><strong>exist</strong></li></ul><p>用于在数据表中不存在的字段，我们可以使用 <code>@TableField(exist = false)</code> 来进行标记</p><ul><li><strong>condition</strong></li></ul><p>用在预处理 <strong>WHERE</strong> 实体条件自定义运算规则，比如我配置了 <code>@TableField(condition = SqlCondition.LIKE)</code>，输出 <strong>SQL</strong> 为：<code>select 表 where name LIKE CONCAT(&#39;%&#39;,值,&#39;%&#39;)</code>，其中 <strong>SqlCondition</strong> 值如下：</p><p><img src="https://segmentfault.com/img/remote/1460000038393224" alt="img"></p><ul><li><strong>update</strong></li></ul><p>用在预处理 <strong>set</strong> 字段自定义注入，比如我配置了 <code>@TableField(update = &quot;%s+1&quot;)</code>，其中 <strong>%s</strong> 会填充字段，输出 <strong>SQL</strong> 为：<code>update 表名 set 字段 = 字段+1 where 条件</code></p><ul><li><strong>select</strong></li></ul><p>用于是否查询时约束，如果我们有个字段 <strong>remark</strong> 是 <strong>text</strong> 类型的，查询的时候不想查询该字段，那么就可以使用 <code>@TableField(select = false)</code> 来约束查询的时候不查询该字段</p><h4 id="2）update"><a href="#2）update" class="headerlink" title="2）update"></a>2）update</h4><p><strong>MybatisPlus</strong> 的更新操作存在两种：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">updateById</span><span class="params">(Param(<span class="string">&quot;et&quot;</span>)</span> T entity);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(&quot;et&quot;)</span> T entity, <span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br></pre></td></tr></table></figure><h5 id="根据-ID-更新"><a href="#根据-ID-更新" class="headerlink" title="根据 ID 更新"></a>根据 ID 更新</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().id(<span class="number">3</span>).name(<span class="string">&quot;小华&quot;</span>).remark(<span class="string">&quot;小华爱玩游戏&quot;</span>).build();</span><br><span class="line"> userMapper.updateById(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 更新结果:</span></span><br><span class="line"><span class="comment">User(id=3, deptId=1, name=小华, remark=小华爱玩游戏)</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据条件更新"><a href="#根据条件更新" class="headerlink" title="根据条件更新"></a>根据条件更新</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line"> UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line"> updateWrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小华&quot;</span>).set(<span class="string">&quot;remark&quot;</span>,<span class="string">&quot;小华爱下棋&quot;</span>);</span><br><span class="line"> userMapper.update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 更新结果:</span></span><br><span class="line"><span class="comment">User(id=3, deptId=1, name=小华, remark=小华爱下棋)</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>我们也可以将要更新的条件放进 <strong>user 对象</strong> 里面：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line"> UpdateWrapper&lt;User&gt; updateWrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line"> updateWrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小华&quot;</span>);</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().remark(<span class="string">&quot;小华爱游泳&quot;</span>).build();</span><br><span class="line"> userMapper.update(user, updateWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** 更新结果:</span></span><br><span class="line"><span class="comment">User(id=3, deptId=1, name=小华, remark=小华爱游泳)</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h4 id="3）delete"><a href="#3）delete" class="headerlink" title="3）delete"></a>3）delete</h4><p>在 <strong>MybatisPlus</strong> 中删除的方式相对于更新多，总共有四种：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteByMap</span><span class="params">(<span class="meta">@Param(&quot;cm&quot;)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(&quot;coll&quot;)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br></pre></td></tr></table></figure><h5 id="根据-ID-删除"><a href="#根据-ID-删除" class="headerlink" title="根据 ID 删除"></a>根据 ID 删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteById</span><span class="params">()</span> &#123;</span><br><span class="line"> userMapper.deleteById(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** SQL语句：</span></span><br><span class="line"><span class="comment">DELETE FROM student WHERE id = 3;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据-Map-删除"><a href="#根据-Map-删除" class="headerlink" title="根据 Map 删除"></a>根据 Map 删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteByMap</span><span class="params">()</span> &#123;</span><br><span class="line"> HashMap&lt;String, Object&gt; columnMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> columnMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小华&quot;</span>);</span><br><span class="line"> columnMap.put(<span class="string">&quot;remark&quot;</span>,<span class="string">&quot;小华爱游泳&quot;</span>);</span><br><span class="line"> userMapper.deleteByMap(columnMap);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** SQL语句：</span></span><br><span class="line"><span class="comment">DELETE FROM student WHRE name = &#x27;小华&#x27; AND remark = &#x27;小华爱游泳&#x27;;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据-Wrapper-删除"><a href="#根据-Wrapper-删除" class="headerlink" title="根据 Wrapper 删除"></a>根据 Wrapper 删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line"> UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;();</span><br><span class="line"> wrapper.eq(<span class="string">&quot;remark&quot;</span>,<span class="string">&quot;小华爱下棋&quot;</span>);</span><br><span class="line"> userMapper.delete(wrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** SQL语句：</span></span><br><span class="line"><span class="comment">DELETE FROM student WHRE remark = &#x27;小华爱下棋&#x27;;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>根据 <strong>Wrapper</strong> 删除还有另外一种方式，直接将实体类放入 <strong>Wrapper</strong> 中包装：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().remark(<span class="string">&quot;小华爱下棋&quot;</span>).build();</span><br><span class="line"> UpdateWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">UpdateWrapper</span>&lt;&gt;(user);</span><br><span class="line"> userMapper.delete(wrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** SQL语句：</span></span><br><span class="line"><span class="comment">DELETE FROM student WHRE remark = &#x27;小华爱下棋&#x27;;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据-ID-批量删除"><a href="#根据-ID-批量删除" class="headerlink" title="根据 ID 批量删除"></a>根据 ID 批量删除</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteBatchIds</span><span class="params">()</span> &#123;</span><br><span class="line"> List&lt;Integer&gt; idList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"> idList.add(<span class="number">4</span>);</span><br><span class="line"> idList.add(<span class="number">7</span>);</span><br><span class="line"> userMapper.deleteBatchIds(idList);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** SQL语句：</span></span><br><span class="line"><span class="comment">DELETE FROM student WHERE id In (4,7)</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h4 id="4）select"><a href="#4）select" class="headerlink" title="4）select"></a>4）select</h4><p>查询操作在我们开发中是最经常用到的，也是重中之重。<strong>MybatisPlus</strong> 中支持查询的方法也比较多，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(&quot;coll&quot;)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectByMap</span><span class="params">(<span class="meta">@Param(&quot;cm&quot;)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line">T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">Integer <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMaps</span><span class="params">(<span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">List&lt;Object&gt; <span class="title function_">selectObjs</span><span class="params">(<span class="meta">@aram(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">IPage&lt;T&gt; <span class="title function_">selectPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMapsPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(&quot;ew&quot;)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>可以看到总共有 <strong>10</strong> 个方法，我们接下来一个一个测试</p><h5 id="查询所有"><a href="#查询所有" class="headerlink" title="查询所有"></a>查询所有</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectList</span><span class="params">()</span> &#123;</span><br><span class="line"> List&lt;User&gt; users = userMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"> users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment">User(id=2, deptId=1, name=小明, remark=好好学习，天天向上！)</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment">SELECT id, dept_id, name, remark FROM student;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="查询数量"><a href="#查询数量" class="headerlink" title="查询数量"></a>查询数量</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectCount</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.like(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小&quot;</span>);</span><br><span class="line"> System.out.println(userMapper.selectCount(queryWrapper));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment">SELECT COUNT( 1 ) FROM student WHERE (name LIKE &#x27;%小%&#x27;);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据-ID-查询"><a href="#根据-ID-查询" class="headerlink" title="根据 ID 查询"></a>根据 ID 查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectById</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectById(<span class="number">1</span>);</span><br><span class="line"> System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment">SELECT id, dept_id, name, remark FROM student WHERE ID = 1;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据-ID-批量查询"><a href="#根据-ID-批量查询" class="headerlink" title="根据 ID 批量查询"></a>根据 ID 批量查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectBatchIds</span><span class="params">()</span> &#123;</span><br><span class="line"> List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"> users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment">User(id=2, deptId=1, name=小明, remark=好好学习，天天向上！)</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment">SELECT id, dept_id, name, remark FROM student WHERE ID IN (1, 2);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据条件查询单条"><a href="#根据条件查询单条" class="headerlink" title="根据条件查询单条"></a>根据条件查询单条</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectOne</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.eq(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectOne(queryWrapper);</span><br><span class="line"> System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment"> SELECT id, name, dept_id, remark FROM student WHERE (name = &#x27;小菜&#x27;);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="根据条件查询多条"><a href="#根据条件查询多条" class="headerlink" title="根据条件查询多条"></a>根据条件查询多条</h5><p>通过 <strong>map</strong> 传递参数，不是通过 <strong>LIKE</strong> 查询，而是通过 <strong>&#x3D;</strong> 查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectByMap</span><span class="params">()</span> &#123;</span><br><span class="line"> HashMap&lt;String, Object&gt; columnMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> columnMap.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小&quot;</span>);</span><br><span class="line"> List&lt;User&gt; users = userMapper.selectByMap(columnMap);</span><br><span class="line"> users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">null</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment">SELECT id, name, dept_id, remark FROM student WHERE name = &#x27;小&#x27;;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>如果我们没有新建实体类进行结果封装，我们还可以用 <strong>Map</strong> 来接收结果集：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectMaps</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.like(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小&quot;</span>);</span><br><span class="line"> List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(queryWrapper);</span><br><span class="line"> maps.forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">&#123;name=小菜, remark=关注小菜不迷路！, id=1, dept_id=1&#125;</span></span><br><span class="line"><span class="comment">&#123;name=小明, remark=好好学习，天天向上！, id=2, dept_id=1&#125;</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment">SELECT id, name, dept_id, remark FROM student WHERE (name LIKE &#x27;%小%&#x27;);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>也可以用 <strong>Object</strong> 对象来接收结果集：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectObjs</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小&quot;</span>);</span><br><span class="line"> List&lt;Object&gt; objects = userMapper.selectObjs(queryWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">&#123;name=小菜, remark=关注小菜不迷路！, id=1, dept_id=1&#125;</span></span><br><span class="line"><span class="comment">&#123;name=小明, remark=好好学习，天天向上！, id=2, dept_id=1&#125;</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment">SELECT id, name, dept_id, remark FROM student WHERE (name LIKE &#x27;%小%&#x27;);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h5 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectPage</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小&quot;</span>);</span><br><span class="line"> Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"> IPage&lt;User&gt; userIPage = userMapper.selectPage(page, queryWrapper);</span><br><span class="line"> System.out.println(<span class="string">&quot;数据总数:&quot;</span> + userIPage.getTotal());</span><br><span class="line"> System.out.println(<span class="string">&quot;总页数:&quot;</span> + userIPage.getPages());</span><br><span class="line"> System.out.println(<span class="string">&quot;当前页:&quot;</span> + userIPage.getCurrent());</span><br><span class="line"> System.out.println(<span class="string">&quot;页大小:&quot;</span> + userIPage.getSize());</span><br><span class="line"> userIPage.getRecords().forEach(System.out::println);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> OUTPUT:</span></span><br><span class="line"><span class="comment">数据总数:2</span></span><br><span class="line"><span class="comment">总页数:2</span></span><br><span class="line"><span class="comment">当前页:1</span></span><br><span class="line"><span class="comment">页大小:1</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment"> SELECT id, name, dept_id, remark</span></span><br><span class="line"><span class="comment"> FROM student</span></span><br><span class="line"><span class="comment"> WHERE (name LIKE &#x27;%小%&#x27;)</span></span><br><span class="line"><span class="comment"> LIMIT 0,1;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><h3 id="3-条件构造器"><a href="#3-条件构造器" class="headerlink" title="3. 条件构造器"></a>3. 条件构造器</h3><p><img src="https://segmentfault.com/img/remote/1460000038393223" alt="img"></p><p>在 <strong>CRUD</strong> 的基本操作中，我们想要通过条件查询都是通过 <strong>Wrapper</strong> 类进行封装的，上面只是简单的用到 <strong>eq</strong> 和 <strong>like</strong> 操作。事实上这个类十分强大，我们在下面会详细进行介绍。</p><h4 id="1）allEq"><a href="#1）allEq" class="headerlink" title="1）allEq"></a>1）allEq</h4><p>全部 <strong>eq</strong> 或个别 <strong>isNull</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">allEq(Map&lt;R, V&gt; params)</span><br><span class="line">allEq(Map&lt;R, V&gt; params, <span class="type">boolean</span> null2IsNull)</span><br><span class="line">allEq(<span class="type">boolean</span> condition, Map&lt;R, V&gt; params, <span class="type">boolean</span> null2IsNull)</span><br><span class="line"> </span><br><span class="line">allEq(BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params)</span><br><span class="line">allEq(BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params, <span class="type">boolean</span> null2IsNull)</span><br><span class="line">allEq(<span class="type">boolean</span> condition, BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params, <span class="type">boolean</span> null2IsNull) </span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><blockquote><p>param：</p><p>key 为数据库字段名，value 为字段值</p><p><strong>nullsIsNull：</strong>为 true 则在 map 的 value 为 null 时调用 <strong>isNull</strong> 方法，为 false 是则忽略 value 为 null 时不调用 <strong>isNull</strong> 方法</p><p><strong>filter：</strong> 过滤函数，判断是否允许字段传入比对条件中</p></blockquote><p><strong>使用示例：</strong></p><ul><li><code>allEq(Map&lt;R, V&gt; params)</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAllEq</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> Map&lt;String,Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> params.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> params.put(<span class="string">&quot;dept_id&quot;</span>,<span class="number">1</span>);</span><br><span class="line"> params.put(<span class="string">&quot;remark&quot;</span>,<span class="literal">null</span>);</span><br><span class="line"> queryWrapper.allEq(params); <span class="comment">//会调用 isNull 方法</span></span><br><span class="line"> userMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> 结果:</span></span><br><span class="line"><span class="comment">｛｝</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment"> SELECT id,name,dept_id,remark</span></span><br><span class="line"><span class="comment"> FROM student</span></span><br><span class="line"><span class="comment"> WHERE (name = &#x27;小菜&#x27; AND dept_id = 1 AND remark IS NULL);</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure><ul><li><code>allEq(Map&lt;R, V&gt; params, boolean null2IsNull)</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAllEq</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> Map&lt;String,Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> params.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> params.put(<span class="string">&quot;dept_id&quot;</span>,<span class="number">1</span>);</span><br><span class="line"> params.put(<span class="string">&quot;remark&quot;</span>,<span class="literal">null</span>);</span><br><span class="line"> queryWrapper.allEq(params, <span class="literal">false</span>); <span class="comment">//不会调用 isNull 方法</span></span><br><span class="line"> userMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> 结果:</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！)</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment"> SELECT id,name,dept_id,remark</span></span><br><span class="line"><span class="comment"> FROM student</span></span><br><span class="line"><span class="comment"> WHERE (name = &#x27;小菜&#x27; AND dept_id = 1);</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure><ul><li><code>allEq(boolean condition, Map&lt;R, V&gt; params, boolean null2IsNull)</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAllEq</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> Map&lt;String,Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> params.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> params.put(<span class="string">&quot;dept_id&quot;</span>,<span class="number">1</span>);</span><br><span class="line"> params.put(<span class="string">&quot;remark&quot;</span>,<span class="literal">null</span>);</span><br><span class="line"> queryWrapper.allEq(<span class="literal">false</span>,params,<span class="literal">false</span>); <span class="comment">//不会带入条件进行查询</span></span><br><span class="line"> userMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> 结果:</span></span><br><span class="line"><span class="comment">&#123;name=小菜, remark=关注小菜不迷路！, id=1, dept_id=1&#125;</span></span><br><span class="line"><span class="comment">&#123;name=小明, remark=好好学习，天天向上！, id=2, dept_id=1&#125;</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment"> SELECT id,name,dept_id,remark</span></span><br><span class="line"><span class="comment"> FROM student;</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure><ul><li><code>allEq(BiPredicate&lt;R, V&gt; filter, Map&lt;R, V&gt; params)</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAllEq</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"> params.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> params.put(<span class="string">&quot;dept_id&quot;</span>, <span class="number">1</span>);</span><br><span class="line"> params.put(<span class="string">&quot;remark&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"> <span class="comment">//只有 key 中含有 “m” 才会用作条件判断</span></span><br><span class="line"> queryWrapper.allEq((k, v) -&gt; (k.contains(<span class="string">&quot;m&quot;</span>)), params);</span><br><span class="line"> userMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> 结果:</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment"> SQL语句:</span></span><br><span class="line"><span class="comment"> SELECT id,name,dept_id,remark</span></span><br><span class="line"><span class="comment"> FROM student</span></span><br><span class="line"><span class="comment"> WHERE (name = &#x27;小菜&#x27; AND remark IS NULL);</span></span><br><span class="line"><span class="comment"> **/</span></span><br></pre></td></tr></table></figure><h4 id="2）比较操作"><a href="#2）比较操作" class="headerlink" title="2）比较操作"></a>2）比较操作</h4><ul><li><strong>eq：</strong> 相当于 <code>=</code></li><li><strong>ne：</strong> 相当于 <code>!=</code></li><li><strong>gt：</strong> 相当于 <code>&gt;</code></li><li><strong>ge：</strong> 相当于<code>&gt;=</code></li><li><strong>lt：</strong> 相当于 <code>&lt;</code></li><li><strong>le：</strong> 相当于<code>&lt;=</code></li><li><strong>between：</strong> 相当于<code>between ... and ...</code></li><li><strong>notBetween：</strong> 相当于<code>not between ... and ...</code></li><li><strong>in：</strong> 相当于<code>in(.., .., ..)</code></li><li><strong>notIn：</strong> 相当于<code>not in(.., .., ..)</code></li></ul><h4 id="3）模糊查询"><a href="#3）模糊查询" class="headerlink" title="3）模糊查询"></a>3）模糊查询</h4><ul><li><strong>like：</strong> <code>like(&quot;name&quot;,&quot;小菜&quot;) --&gt; name like &quot;%小菜%&quot;</code></li><li><strong>notLike：</strong> <code>notLike(&quot;name&quot;,&quot;小菜&quot;) --&gt; name not like &quot;%小菜%&quot;</code></li><li><strong>likeLeft：</strong> <code>like(&quot;name&quot;,&quot;小菜&quot;) --&gt; name like &quot;%小菜&quot;</code></li><li><strong>likeRight：</strong> <code>like(&quot;name&quot;,&quot;小菜&quot;) --&gt; name like &quot;小菜%&quot;</code></li></ul><h4 id="4）排序"><a href="#4）排序" class="headerlink" title="4）排序"></a>4）排序</h4><ul><li><strong>orderBy：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> orderBy(<span class="type">boolean</span> condition, <span class="type">boolean</span> isAsc, R... columns)</span><br><span class="line">orderBy(<span class="literal">true</span>, <span class="literal">true</span>, <span class="string">&quot;id&quot;</span>, <span class="string">&quot;name&quot;</span>) --&gt; order by id ASC, name ASC</span><br></pre></td></tr></table></figure><ul><li><strong>orderByAsc：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`orderByAsc(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;name&quot;</span>) --&gt; order by id ASC, name ASC`</span><br></pre></td></tr></table></figure><ul><li><strong>orderByDesc：</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orderByDesc(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;name) --&gt; order by id Desc, name Desc`</span></span><br></pre></td></tr></table></figure><h4 id="5）逻辑查询"><a href="#5）逻辑查询" class="headerlink" title="5）逻辑查询"></a>5）逻辑查询</h4><ul><li><strong>or：</strong></li></ul><p>拼接：主动调用 <strong>or</strong> 表示紧接着下一个方法不是用 <strong>and</strong> 连接!(不调用 <strong>or</strong> 则默认为使用 <strong>and</strong> 连接)， <code>eq(&quot;id&quot;,1).or().eq(&quot;name&quot;,&quot;老王&quot;)</code></p><p>嵌套：<code>or(i -&gt; i.eq(&quot;name&quot;, &quot;李白&quot;).ne(&quot;status&quot;, &quot;活着&quot;))</code></p><ul><li><strong>and：</strong></li></ul><p>嵌套：<code>and(i -&gt; i.eq(&quot;name&quot;, &quot;李白&quot;).ne(&quot;status&quot;, &quot;活着&quot;))</code></p><h4 id="6）select"><a href="#6）select" class="headerlink" title="6）select"></a>6）select</h4><p>在MP查询中，默认查询所有的字段，如果有需要也可以通过select方法进行指定字段，如<code>select(&quot;id&quot;, &quot;name&quot;)</code></p><h3 id="4-配置讲解"><a href="#4-配置讲解" class="headerlink" title="4. 配置讲解"></a>4. 配置讲解</h3><h4 id="1）基本配置"><a href="#1）基本配置" class="headerlink" title="1）基本配置"></a>1）基本配置</h4><ul><li><strong>configLocation</strong></li></ul><p>用于指明 <strong>MyBatis</strong> 配置文件的位置，如果我们有 <strong>MyBatis</strong> 的配置文件，需将配置文件的路径配置到 <strong>configLocation</strong> 中</p><p><strong>SpringBoot：</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus.config-<span class="keyword">location</span> <span class="title">= classpath</span>:mybatis-config.xml</span><br></pre></td></tr></table></figure><p><strong>SpringMvc：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">&lt;/bean</span><br></pre></td></tr></table></figure><ul><li><strong>mapperLocations</strong></li></ul><p>用于指明 <strong>Mapper</strong> 所对应的 <strong>XML</strong> 的文件位置，我们在 <strong>通用 CRUD</strong> 中用到的 <strong>Mapper</strong> 是直接继承 <strong>MP</strong> 提供的 <strong>BaseMapper</strong> ，我们也可以自定义方法，然后在 <strong>XML</strong> 文件中自定义 <strong>SQL</strong>，而这时我们需要告诉 <strong>Mapper</strong> 所对应 <strong>XML</strong> 文件的位置</p><p><strong>SpringBoot：</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus.mapper-locations = classpath*<span class="symbol">:mybatis/*</span>.xml</span><br></pre></td></tr></table></figure><p><strong>SpringMVC：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath*:mybatis/*.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>typeAliasesPackage</strong></li></ul><p>用于 <strong>MyBatis</strong> 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 <strong>Mapper</strong> 对应的 <strong>XML</strong> 文件中可以直接使用类名，而不用使用全限定的类名</p><p><strong>SpringBoot：</strong></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus.<span class="keyword">type</span>-aliases-<span class="keyword">package</span> <span class="title">= cbuc.life.bean</span></span><br></pre></td></tr></table></figure><p><strong>SpringMVC：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">&quot;com.baomidou.mybatisplus.samples.quickstart.entity&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2）进阶配置"><a href="#2）进阶配置" class="headerlink" title="2）进阶配置"></a>2）进阶配置</h4><ul><li><strong>mapUnderScoreToCamelCase</strong></li></ul><p>是否开启自动驼峰命名规则映射，这个配置的默认值是 <strong>true</strong>，但是这个属性在 <strong>MyBatis</strong> 中的默认值是 <strong>false</strong>，所以在我们平时的开发中都会将这个配置开启。</p><p> #关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在<br> mybatis-plus.configuration.map-underscore-to-camel-case &#x3D; false</p><ul><li><strong>cacheEnabled</strong></li></ul><p>全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 <strong>true</strong>。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus.configuration.cache-enabled</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="3）DB-策略配置"><a href="#3）DB-策略配置" class="headerlink" title="3）DB 策略配置"></a>3）DB 策略配置</h4><ul><li><strong>idType</strong></li></ul><p>全局默认主键类型，设置后，即可省略实体对象中的<code>@TableId(type = IdType.AUTO)</code>配置。该配置的默认值为 <strong>ID_WORKER</strong></p><p><strong>SpringBoot：</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus.global-config.db-config.id-type = <span class="keyword">auto</span></span><br></pre></td></tr></table></figure><p><strong>SpringMVC：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dbConfig&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">bean</span>         <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;idType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AUTO&quot;</span>/&gt;</span></span><br><span class="line">                 <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong>tablePrefix</strong></li></ul><p>表名前缀，全局配置后可省略<code>@TableName()</code>配置。该配置的默认值为 <strong>null</strong></p><p><strong>SpringBoot：</strong></p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mybatis-plus<span class="meta">.global</span>-<span class="built_in">config</span>.db-<span class="built_in">config</span>.table-<span class="keyword">prefix </span>= yq_</span><br></pre></td></tr></table></figure><p><strong>SpringMVC：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;globalConfig&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dbConfig&quot;</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">bean</span>            <span class="attr">class</span>=<span class="string">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;idType&quot;</span> <span class="attr">value</span>=<span class="string">&quot;AUTO&quot;</span>/&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;tablePrefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;yq_&quot;</span>/&gt;</span></span><br><span class="line">                 <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-其他扩展"><a href="#5-其他扩展" class="headerlink" title="5. 其他扩展"></a>5. 其他扩展</h3><h4 id="1）自动填充"><a href="#1）自动填充" class="headerlink" title="1）自动填充"></a>1）自动填充</h4><p>有时候我们在插入或更新数据的时候，希望有些字段可以自动填充。比如我们平时数据表里面会有个 <strong>插入时间</strong> 或者 <strong>更新时间</strong> 这种字段，我们会默认以当前时间填充，在 <strong>MP</strong> 中我们也可以进行配置。</p><p>首先我们需要借助 <code>@TableField(fill = FieldFill.INSERT)</code> 这个注解，在插入时进行填充。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> String remark;</span><br></pre></td></tr></table></figure><p>其中自动填充的模式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">FieldFill</span> &#123;</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认不处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> DEFAULT,</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 插入时填充字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> INSERT,</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新时填充字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> UPDATE,</span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 插入和更新时填充字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> INSERT_UPDATE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们再编写自定义的填充处理模式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line"> <span class="type">Object</span> <span class="variable">remark</span> <span class="operator">=</span> getFieldValByName(<span class="string">&quot;remark&quot;</span>, metaObject);</span><br><span class="line"> <span class="keyword">if</span> (<span class="literal">null</span> == remark) &#123;</span><br><span class="line"> setFieldValByName(<span class="string">&quot;remark&quot;</span>, <span class="string">&quot;好好学习&quot;</span>, metaObject);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line"> <span class="comment">//自定义更新时填充</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testObjectHandler</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> User.builder().deptId(<span class="number">1</span>).name(<span class="string">&quot;小明&quot;</span>).build();</span><br><span class="line"> userMapper.insert(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment">INSERT INTO student ( name, dept_id, remark )</span></span><br><span class="line"><span class="comment">VALUES ( &#x27;小明&#x27;, 1, &#x27;好好学习&#x27; );</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>可以看到插入时，已经自动将我们填充的字段合并进去。</p><h4 id="2）逻辑删除"><a href="#2）逻辑删除" class="headerlink" title="2）逻辑删除"></a>2）逻辑删除</h4><p>在开发中，很多时候我们删除数据并不需要真正意义上的物理删除，而是使用逻辑删除，这样子查询的时候需要状态条件，确保被标记的数据不被查询到。 <strong>MP</strong> 当然也支持这样的功能。</p><p>我们需要先为 <strong>student</strong> 表添加一个字段 <code>status</code> 来声明数据是否被删除，<strong>0 表示被删除，1表示未删除</strong>，然后也需要在实体类上增加这个属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer status;</span><br></pre></td></tr></table></figure><p>在 <code>application.yaml</code> 中配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line"> <span class="attr">global-config:</span></span><br><span class="line"> <span class="attr">db-config:</span></span><br><span class="line"> <span class="attr">logic-delete-value:</span> <span class="number">0</span></span><br><span class="line"> <span class="attr">logic-not-delete-value:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLogicDelete</span><span class="params">()</span> &#123;</span><br><span class="line"> userMapper.deleteById(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment">UPDATE student SET status=0</span></span><br><span class="line"><span class="comment">WHERE id=1 AND status=1;</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure><p>可以看出这段 <strong>SQL</strong> 并没有真正删除，而是进行了逻辑删除，只是更新了删除标识</p><h4 id="3）通用枚举"><a href="#3）通用枚举" class="headerlink" title="3）通用枚举"></a>3）通用枚举</h4><p>如果有性别之类的字段，我们通常会用 <strong>0</strong> 和 <strong>1</strong> 来表示，但是查出来我们得进行值转换，这个时候我们就可以使用枚举来解决这个问题：</p><p>首先为 <strong>student</strong> 表添加一个 <strong>sex</strong> 字段来表示性别，<strong>0 表示女性，1 表示男性</strong>，然后定义一个枚举类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">SexEnum</span> <span class="keyword">implements</span> <span class="title class_">IEnum</span>&lt;Integer&gt; &#123;</span><br><span class="line"> MAN(<span class="number">1</span>, <span class="string">&quot;男&quot;</span>),</span><br><span class="line"> WOMEN(<span class="number">0</span>, <span class="string">&quot;女&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> String value;</span><br><span class="line"></span><br><span class="line"> SexEnum(<span class="type">int</span> code, String value) &#123;</span><br><span class="line"> <span class="built_in">this</span>.code = code;</span><br><span class="line"> <span class="built_in">this</span>.value = value;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> Integer <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">this</span>.code;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//注意要重写此方法，不然会将值转换成 ‘MAN’，而不是 ‘男’</span></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">this</span>.value;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在实体类中添加对应属性：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SexEnum sex;</span><br></pre></td></tr></table></figure><p>在 <code>application.yaml</code> 中配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line"> <span class="attr">type-enums-package:</span> <span class="string">cbuc.life.enums</span></span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectOne</span><span class="params">()</span> &#123;</span><br><span class="line"> QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"> queryWrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;小菜&quot;</span>);</span><br><span class="line"> <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectOne(queryWrapper);</span><br><span class="line"> System.out.println(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 输出结果：</span></span><br><span class="line"><span class="comment">User(id=1, deptId=1, name=小菜, remark=关注小菜不迷路！, status=1, sex=男)</span></span><br><span class="line"><span class="comment"> SQL语句：</span></span><br><span class="line"><span class="comment"> SELECT id,sex,name,dept_id,remark,status</span></span><br><span class="line"><span class="comment"> FROM student</span></span><br><span class="line"><span class="comment"> WHERE status=1 AND (name = &#x27;小菜&#x27;);</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/&quot;&gt;&lt;img src=&quot;https://static.segmentfault.com/main_site/b9d296b0/static/logo-b.d865fc97.svg&quot; alt=&quot;segment</summary>
      
    
    
    
    
    <category term="提高生产力，最全 MyBatisPlus 讲解！" scheme="http://example.com/tags/%E6%8F%90%E9%AB%98%E7%94%9F%E4%BA%A7%E5%8A%9B%EF%BC%8C%E6%9C%80%E5%85%A8-MyBatisPlus-%E8%AE%B2%E8%A7%A3%EF%BC%81/"/>
    
  </entry>
  
  <entry>
    <title>sql加强2</title>
    <link href="http://example.com/2022/10/07/sql%E5%8A%A0%E5%BC%BA2/"/>
    <id>http://example.com/2022/10/07/sql%E5%8A%A0%E5%BC%BA2/</id>
    <published>2022-10-07T05:10:35.000Z</published>
    <updated>2022-10-07T05:11:19.963Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL强化"><a href="#SQL强化" class="headerlink" title="SQL强化"></a>SQL强化</h1><h2 id="SQL执行顺序"><a href="#SQL执行顺序" class="headerlink" title="SQL执行顺序"></a>SQL执行顺序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--举例：</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">       a.sex,</span><br><span class="line">       b.city,</span><br><span class="line">       <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt,</span><br><span class="line">       <span class="built_in">sum</span>(salary) <span class="keyword">as</span> sum1</span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b <span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line"><span class="keyword">having</span> cnt<span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line">limit <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--或者是</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span></span><br><span class="line">       a.sex,</span><br><span class="line">       b.city,</span><br><span class="line">       a.age</span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b <span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line">limit <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的SQL语句的执行顺序是: from (去加载table1 和 table2这2个表 )  -&gt; join -&gt; on -&gt; where  -&gt; group by-&gt;select 后面的聚合函数count,sum  -&gt; having -&gt; distinct -&gt; order by -&gt; limit</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--on 和where的先后顺序讨论</span></span><br><span class="line"><span class="comment">--下面用left join 各得到结果，结果不一样。</span></span><br><span class="line"><span class="comment">--下面可知，先执行on，再执行where</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"><span class="comment">--下面的条数可能会比上面多。</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">and</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"></span><br><span class="line"><span class="comment">--下面用inner join 各得到结果，结果是一样的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">and</span> a.name<span class="operator">=</span>b.name;</span><br></pre></td></tr></table></figure><blockquote><p>hivesql与sparkSQL的区别：</p><ul><li><p>子查询hive必须起别名，SparkSQL可以不用起别名</p></li><li><p>group by xx，yy，hive不用能用别名，spark可以用别名</p></li><li><p>hive不支持临时视图和缓存表，SparkSQL都支持</p><ul><li>&#96;&#96;&#96;sql<br>–用SparkSQL的临时视图<br> use interview_db;<br> create or replace temporary view t_view1 as<br> select *,<br> if(month&#x3D;1,amount,0) as a1,<br> if(month&#x3D;2,amount,0) as a2,<br> if(month&#x3D;3,amount,0) as a3,<br> if(month&#x3D;4,amount,0) as a4<br> from table2;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>select year,<br>sum(a1) as m1,<br>sum(a2) as m2,<br>sum(a3) as m3,<br>sum(a4) as m4<br>from t_view1<br>group by year;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><ul><li>&#96;&#96;&#96;sql</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>–使用SparkSQL的缓存表<br>cache table cached1 as<br>select *,<br>if(month&#x3D;1,amount,0) as a1,<br>if(month&#x3D;2,amount,0) as a2,<br>if(month&#x3D;3,amount,0) as a3,<br>if(month&#x3D;4,amount,0) as a4<br>from table2;</p><p>select * from cached1;<br>select year,<br>sum(a1) as m1,<br>sum(a2) as m2,<br>sum(a3) as m3,<br>sum(a4) as m4<br>from cached1<br>group by year;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 爆炸函数，hive不支持explode与普通字段联合使用，需要用侧视图分开，SparkSQL支持联合使用</span><br><span class="line"></span><br><span class="line">  * ```sql</span><br><span class="line">    sql</span><br><span class="line">     use interview_db;</span><br><span class="line">     select qq,game1 from tableB lateral view explode(split(game,&#x27;_&#x27;)) view1 as game1 ;</span><br><span class="line">     --spark还支持这样，但是hive不支持：</span><br><span class="line">     select qq,explode(split(game,&#x27;_&#x27;)) game1 from tableB ;</span><br></pre></td></tr></table></figure>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">* sparkSQL支持300多种函数，hiveSQL支持200多种函数。sparkSQL函数比hiveSQL要多。</span><br><span class="line"></span><br><span class="line">  * 比如SparkSQL有sequence函数，hive就没有</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></blockquote><h2 id="hive10题"><a href="#hive10题" class="headerlink" title="hive10题"></a>hive10题</h2><ul><li><p>先配置环境</p></li><li><p>在pycharm或datagrip或idea中配置hive数据源。也可以配置一个sparkSQL数据源，来加快速度。</p></li><li><p>如果配置hive数据源：</p><ul><li><p>需要提前启动hdfs和yarn，hive的metastore，hive的hiveserver2</p></li><li><p>&#96;&#96;&#96;shell<br>#启动hdfs和yarn<br>start-all.sh  </p><h1 id="hive的metastore"><a href="#hive的metastore" class="headerlink" title="hive的metastore"></a>hive的metastore</h1><p>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service metastore  2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-metastore.log &amp;</p><p>#hive的hiveserver2<br>#hiveserver2开启后，等过2分钟后才能生效。<br>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service hiveserver2 2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-hiveserver2.log &amp;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  ![1659774353515](E:\自研项目\sql资料\4\images\1659774353515.png)</span><br><span class="line"></span><br><span class="line">* 如果遇到下面的问题</span><br><span class="line"></span><br><span class="line">* ![1659749246129](E:\自研项目\sql资料\4\images\1659749246129.png)</span><br><span class="line"></span><br><span class="line">* 解决办法</span><br><span class="line"></span><br><span class="line">  * ```</span><br><span class="line">    hive/conf/hive-env.sh中加入</span><br><span class="line">    export HADOOP_CLIENT_OPTS=&quot; -Xmx512m&quot;</span><br><span class="line">    export HADOOP_HEAPSIZE=1024</span><br><span class="line">    改完重启hiveserver2</span><br></pre></td></tr></table></figure></li></ul></li><li><p>如果配置SparkSQL数据源</p><ul><li><p>需要提前启动hdfs，hive的metastore，Spark的Thriftserver服务。</p></li><li><p>&#96;&#96;&#96;shell<br>#启动hdfs和yarn<br>start-all.sh  </p><h1 id="hive的metastore-1"><a href="#hive的metastore-1" class="headerlink" title="hive的metastore"></a>hive的metastore</h1><p>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service metastore  2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-metastore.log &amp;</p><p>#Spark的Thriftserver服务<br>&#x2F;export&#x2F;server&#x2F;spark&#x2F;sbin&#x2F;start-thriftserver.sh <br>  –hiveconf hive.server2.thrift.port&#x3D;10001 <br>  –hiveconf hive.server2.thrift.bind.host&#x3D;node1 <br>  –master local[*]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  * 下面是spark3集成hive3需要的jar包，如果是spark2集成hive2，则jar包不一样。![1659774447157](E:\自研项目\sql资料\4\images\1659774447157.png)</span><br><span class="line"></span><br><span class="line">  * ![1659774468920](E:\自研项目\sql资料\4\images\1659774468920.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">show databases ;</span><br><span class="line">create database if not exists test_sql;</span><br><span class="line">use test_sql;</span><br><span class="line">-- 一些语句会走 MapReduce，所以慢。 可以开启本地化执行的优化。</span><br><span class="line">set hive.exec.mode.local.auto=true;-- (默认为false)</span><br><span class="line">--第1题：访问量统计</span><br><span class="line">CREATE TABLE test_sql.test1 (</span><br><span class="line">userId string,</span><br><span class="line">visitDate string,</span><br><span class="line">visitCount INT )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &quot;\t&quot;;</span><br><span class="line"></span><br><span class="line">INSERT overwrite TABLE test_sql.test1</span><br><span class="line">VALUES</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/1/21&#x27;, 5 ),</span><br><span class="line">    ( &#x27;u02&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u03&#x27;, &#x27;2017/1/22&#x27;, 8 ),</span><br><span class="line">    ( &#x27;u04&#x27;, &#x27;2017/1/20&#x27;, 3 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/2/21&#x27;, 8 ),</span><br><span class="line">    ( &#x27;u02&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/2/22&#x27;, 4 );</span><br><span class="line"></span><br><span class="line">select *,</span><br><span class="line">       sum(sum1) over(partition by userid order by month1 /*rows between unbounded preceding and current row*/ ) as `累积`</span><br><span class="line"> from</span><br><span class="line">(select userid,</span><br><span class="line">       date_format(replace(visitdate,&#x27;/&#x27;,&#x27;-&#x27;),&#x27;yyyy-MM&#x27;) as month1,</span><br><span class="line">       sum(visitcount) sum1</span><br><span class="line">from test_sql.test1</span><br><span class="line">group by userid,</span><br><span class="line">         date_format(replace(visitdate,&#x27;/&#x27;,&#x27;-&#x27;),&#x27;yyyy-MM&#x27;)) as t;</span><br><span class="line"></span><br><span class="line">-- 第2题：电商场景TopK统计</span><br><span class="line">CREATE TABLE test_sql.test2 (</span><br><span class="line"> user_id string,</span><br><span class="line"> shop string )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &#x27;\t&#x27;;</span><br><span class="line">INSERT INTO TABLE test_sql.test2 VALUES</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u3&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u4&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u4&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u6&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u3&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; );</span><br><span class="line">--（1）每个店铺的UV（访客数）</span><br><span class="line">-- UV和PV</span><br><span class="line">-- PV是访问当前网站所有的次数</span><br><span class="line">-- UV是访问当前网站的客户数(需要去重)</span><br><span class="line">--(2)每个店铺访问次数top3的访客信息。输出店铺名称、访客id、访问次数</span><br><span class="line">select shop,</span><br><span class="line">       count(distinct user_id) as uv</span><br><span class="line">from test_sql.test2 group by shop ;</span><br><span class="line">--上面的拆解来看，等价于</span><br><span class="line">--distinct后可以接多个字段，表示联合去重</span><br><span class="line">select shop,</span><br><span class="line">       count(user_id) as uv</span><br><span class="line">from</span><br><span class="line">(select distinct shop,</span><br><span class="line">        user_id</span><br><span class="line">from test_sql.test2  ) as t</span><br><span class="line">group by shop ;</span><br><span class="line">--也等价于</span><br><span class="line">select shop,</span><br><span class="line">       count(user_id) as uv</span><br><span class="line">from</span><br><span class="line">(select shop,</span><br><span class="line">        user_id</span><br><span class="line">from test_sql.test2 group by shop, user_id) as t</span><br><span class="line">group by shop ;</span><br><span class="line"></span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by shop order by cnt desc) as rn</span><br><span class="line">from</span><br><span class="line">(select shop,user_id,count(1) as cnt from test_sql.test2 group by  shop,user_id ) as t) t2</span><br><span class="line">where t2.rn&lt;=3;</span><br><span class="line"></span><br><span class="line">-- 第3题：订单量统计</span><br><span class="line">CREATE TABLE test_sql.test3 (</span><br><span class="line">dt string,</span><br><span class="line">order_id string,</span><br><span class="line">user_id string,</span><br><span class="line">amount DECIMAL ( 10, 2 ) )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &#x27;\t&#x27;;</span><br><span class="line"></span><br><span class="line">INSERT overwrite TABLE test_sql.test3 VALUES</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;10029028&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;10029029&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;100290288&#x27;,&#x27;1000003252&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;10029088&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;100290281&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;100290282&#x27;,&#x27;1000003253&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-11-02&#x27;,&#x27;10290282&#x27;,&#x27;100003253&#x27;,234),</span><br><span class="line"> (&#x27;2018-11-02&#x27;,&#x27;10290284&#x27;,&#x27;100003243&#x27;,234);</span><br><span class="line"></span><br><span class="line">-- (1)给出 2017年每个月的订单数、用户数、总成交金额。</span><br><span class="line">-- (2)给出2017年11月的新客数(指在11月才有第一笔订单)</span><br><span class="line">select date_format(dt,&#x27;yyyy-MM&#x27;) as month1,</span><br><span class="line">       count(distinct order_id) as cnt1,</span><br><span class="line">       count(distinct user_id) as cnt2,</span><br><span class="line">       sum(amount) as amt</span><br><span class="line">  from test_sql.test3</span><br><span class="line">  where year(dt)=2017</span><br><span class="line">group by date_format(dt,&#x27;yyyy-MM&#x27;);</span><br><span class="line"></span><br><span class="line">select count(user_id) cnt from</span><br><span class="line">(select user_id,</span><br><span class="line">       min(date_format(dt,&#x27;yyyy-MM&#x27;)) min_month</span><br><span class="line">from test3 group by user_id) as t where min_month=&#x27;2017-11&#x27;;</span><br><span class="line"></span><br><span class="line">--统计每个月的新客户数</span><br><span class="line">select min_month,</span><br><span class="line">       count(user_id) cnt</span><br><span class="line">from (select user_id,</span><br><span class="line">             min(date_format(dt, &#x27;yyyy-MM&#x27;)) min_month</span><br><span class="line">      from test3</span><br><span class="line">      group by user_id) as t</span><br><span class="line">group by min_month;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 第4题：大数据排序统计</span><br><span class="line">CREATE TABLE test_sql.test4user</span><br><span class="line">(user_id string,name string,age int);</span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.test4log</span><br><span class="line">(user_id string,url string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test4user VALUES(&#x27;001&#x27;,&#x27;u1&#x27;,10),</span><br><span class="line">(&#x27;002&#x27;,&#x27;u2&#x27;,15),</span><br><span class="line">(&#x27;003&#x27;,&#x27;u3&#x27;,15),</span><br><span class="line">(&#x27;004&#x27;,&#x27;u4&#x27;,20),</span><br><span class="line">(&#x27;005&#x27;,&#x27;u5&#x27;,25),</span><br><span class="line">(&#x27;006&#x27;,&#x27;u6&#x27;,35),</span><br><span class="line">(&#x27;007&#x27;,&#x27;u7&#x27;,40),</span><br><span class="line">(&#x27;008&#x27;,&#x27;u8&#x27;,45),</span><br><span class="line">(&#x27;009&#x27;,&#x27;u9&#x27;,50),</span><br><span class="line">(&#x27;0010&#x27;,&#x27;u10&#x27;,65);</span><br><span class="line">INSERT INTO TABLE test_sql.test4log VALUES(&#x27;001&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;002&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;003&#x27;,&#x27;url2&#x27;),</span><br><span class="line">(&#x27;004&#x27;,&#x27;url3&#x27;),</span><br><span class="line">(&#x27;005&#x27;,&#x27;url3&#x27;),</span><br><span class="line">(&#x27;006&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;007&#x27;,&#x27;url5&#x27;),</span><br><span class="line">(&#x27;008&#x27;,&#x27;url7&#x27;),</span><br><span class="line">(&#x27;009&#x27;,&#x27;url5&#x27;),</span><br><span class="line">(&#x27;0010&#x27;,&#x27;url1&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from test_sql.test4user ;</span><br><span class="line">select * from test_sql.test4log ;</span><br><span class="line"></span><br><span class="line">--有一个5000万的用户文件(user_id，name，age)，</span><br><span class="line">-- 一个2亿记录的用户看电影的记录文件(user_id，url)，根据年龄段观看电影的次数进行排序？</span><br><span class="line">--取整函数有 round，floor，ceil</span><br><span class="line">select *,</span><br><span class="line">       round(x,0) as r,--四舍五入</span><br><span class="line">       floor(x) as f,--向下取整</span><br><span class="line">       ceil(x) as c--向上取整</span><br><span class="line">  from</span><br><span class="line">(select 15/10 as x union all</span><br><span class="line">select 18/10 as x union all</span><br><span class="line">select 24/10 as x union all</span><br><span class="line">select 27/10 as x ) as t;</span><br><span class="line"></span><br><span class="line">select type,</span><br><span class="line">       sum(cnt) as sum1</span><br><span class="line">from</span><br><span class="line">(select *,</span><br><span class="line">       concat(floor(age/10)*10,&#x27;-&#x27;,floor(age/10)*10+10) as type</span><br><span class="line">from test_sql.test4user as a</span><br><span class="line">-- join前最好提前减小数据量</span><br><span class="line">join (select user_id,count(url) as cnt from test_sql.test4log group by user_id) as b</span><br><span class="line">on a.user_id=b.user_id) as t</span><br><span class="line">group by type</span><br><span class="line">order by sum(cnt) desc;</span><br><span class="line"></span><br><span class="line">-- 第5题：活跃用户统计</span><br><span class="line">CREATE TABLE test5(</span><br><span class="line">dt string,</span><br><span class="line">user_id string,</span><br><span class="line">age int)</span><br><span class="line">ROW format delimited fields terminated BY &#x27;,&#x27;;</span><br><span class="line">INSERT overwrite TABLE test_sql.test5 VALUES (&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_3&#x27;,39),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_3&#x27;,39),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-12&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-13&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-15&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-16&#x27;,&#x27;test_2&#x27;,19);</span><br><span class="line">select * from test_sql.test5 order by dt,user_id;</span><br><span class="line">--有日志如下，请写出代码求得所有用户和活跃用户的总数及平均年龄。（活跃用户指连续两天都有访问记录的用户）</span><br><span class="line">-- type     总数   平均年龄</span><br><span class="line">-- &#x27;所有用户&#x27;  3    27</span><br><span class="line">-- &#x27;活跃用户&#x27;  1    19</span><br><span class="line">with t1 as (select distinct dt, user_id,age from test_sql.test5),</span><br><span class="line">     t2 as (select *,row_number() over (partition by user_id order by dt) as rn from t1 ),</span><br><span class="line">     t3 as (select *,date_sub(dt,rn) as dt2 from t2),</span><br><span class="line">     t4 as (select dt2,user_id,age,count(1) cnt from t3 group by dt2,user_id,age),</span><br><span class="line">     t5 as (select * from t4 where cnt&gt;=2),</span><br><span class="line">     t6 as (select distinct user_id,age from t5)</span><br><span class="line">select &#x27;所有用户&#x27; as type, count(user_id) cnt,avg(age) as avg_age</span><br><span class="line">from (select distinct user_id,age from test_sql.test5) t union all</span><br><span class="line">select &#x27;活跃用户&#x27; as type, count(user_id) cnt,avg(age) as avg_age from t6;</span><br><span class="line"></span><br><span class="line">-- 用思路2来分析连续2天登录</span><br><span class="line">with t1 as (select distinct dt, user_id from test_sql.test5),</span><br><span class="line">     t2 as (select *,</span><br><span class="line">                   date_add(dt,1) as dt2,</span><br><span class="line">                   lead(dt,1)over(partition by user_id order by dt) as dt3</span><br><span class="line">              from t1)</span><br><span class="line">select count(distinct user_id) from t2 where dt2=dt3;</span><br><span class="line"></span><br><span class="line">-- 第6题：电商购买金额统计实战</span><br><span class="line">CREATE TABLE test_sql.test6 (</span><br><span class="line">userid string,</span><br><span class="line">money decimal(10,2),</span><br><span class="line">paymenttime string,</span><br><span class="line">orderid string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test6 VALUES(&#x27;001&#x27;,100,&#x27;2017-10-01&#x27;,&#x27;123&#x27;),</span><br><span class="line">(&#x27;001&#x27;,200,&#x27;2017-10-02&#x27;,&#x27;124&#x27;),</span><br><span class="line">(&#x27;002&#x27;,500,&#x27;2017-10-01&#x27;,&#x27;125&#x27;),</span><br><span class="line">(&#x27;001&#x27;,100,&#x27;2017-11-01&#x27;,&#x27;126&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test6 order by userid,paymenttime;</span><br><span class="line">--请用sql写出所有用户中在今年10月份第一次购买商品的金额，</span><br><span class="line">select userid,paymenttime,money</span><br><span class="line">from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by userid order by paymenttime) as rn</span><br><span class="line">       from test_sql.test6 where date_format(paymenttime,&#x27;yyyy-MM&#x27;)=&#x27;2017-10&#x27; ) as t</span><br><span class="line">where t.rn=1</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">-- 第7题：教育领域SQL实战</span><br><span class="line">CREATE TABLE test_sql.book(book_id string,</span><br><span class="line">`SORT` string,</span><br><span class="line">book_name string,</span><br><span class="line"> writer string,</span><br><span class="line"> OUTPUT string,</span><br><span class="line"> price decimal(10,2));</span><br><span class="line">INSERT INTO TABLE test_sql.book VALUES</span><br><span class="line">(&#x27;001&#x27;,&#x27;TP391&#x27;,&#x27;信息处理&#x27;,&#x27;author1&#x27;,&#x27;机械工业出版社&#x27;,&#x27;20&#x27;),</span><br><span class="line">(&#x27;002&#x27;,&#x27;TP392&#x27;,&#x27;数据库&#x27;,&#x27;author12&#x27;,&#x27;科学出版社&#x27;,&#x27;15&#x27;),</span><br><span class="line">(&#x27;003&#x27;,&#x27;TP393&#x27;,&#x27;计算机网络&#x27;,&#x27;author3&#x27;,&#x27;机械工业出版社&#x27;,&#x27;29&#x27;),</span><br><span class="line">(&#x27;004&#x27;,&#x27;TP399&#x27;,&#x27;微机原理&#x27;,&#x27;author4&#x27;,&#x27;科学出版社&#x27;,&#x27;39&#x27;),</span><br><span class="line">(&#x27;005&#x27;,&#x27;C931&#x27;,&#x27;管理信息系统&#x27;,&#x27;author5&#x27;,&#x27;机械工业出版社&#x27;,&#x27;40&#x27;),</span><br><span class="line">(&#x27;006&#x27;,&#x27;C932&#x27;,&#x27;运筹学&#x27;,&#x27;author6&#x27;,&#x27;科学出版社&#x27;,&#x27;55&#x27;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.reader (reader_id string,</span><br><span class="line">company string,</span><br><span class="line">name string,</span><br><span class="line">sex string,</span><br><span class="line">grade string,</span><br><span class="line">addr string);</span><br><span class="line">INSERT INTO TABLE test_sql.reader VALUES</span><br><span class="line">(&#x27;0001&#x27;,&#x27;阿里巴巴&#x27;,&#x27;jack&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr1&#x27;),</span><br><span class="line">(&#x27;0002&#x27;,&#x27;百度&#x27;,&#x27;robin&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr2&#x27;),</span><br><span class="line">(&#x27;0003&#x27;,&#x27;腾讯&#x27;,&#x27;tony&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr3&#x27;),</span><br><span class="line">(&#x27;0004&#x27;,&#x27;京东&#x27;,&#x27;jasper&#x27;,&#x27;男&#x27;,&#x27;cfo&#x27;,&#x27;addr4&#x27;),</span><br><span class="line">(&#x27;0005&#x27;,&#x27;网易&#x27;,&#x27;zhangsan&#x27;,&#x27;女&#x27;,&#x27;ceo&#x27;,&#x27;addr5&#x27;),</span><br><span class="line">(&#x27;0006&#x27;,&#x27;搜狐&#x27;,&#x27;lisi&#x27;,&#x27;女&#x27;,&#x27;ceo&#x27;,&#x27;addr6&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.borrow_log(reader_id string,</span><br><span class="line">book_id string,</span><br><span class="line">borrow_date string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.borrow_log VALUES (&#x27;0001&#x27;,&#x27;002&#x27;,&#x27;2019-10-14&#x27;),</span><br><span class="line">(&#x27;0002&#x27;,&#x27;001&#x27;,&#x27;2019-10-13&#x27;),</span><br><span class="line">(&#x27;0003&#x27;,&#x27;005&#x27;,&#x27;2019-09-14&#x27;),</span><br><span class="line">(&#x27;0004&#x27;,&#x27;006&#x27;,&#x27;2019-08-15&#x27;),</span><br><span class="line">(&#x27;0005&#x27;,&#x27;003&#x27;,&#x27;2019-10-10&#x27;),</span><br><span class="line">(&#x27;0006&#x27;,&#x27;004&#x27;,&#x27;2019-17-13&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.book;</span><br><span class="line">select * from test_sql.reader;</span><br><span class="line">select * from test_sql.borrow_log;</span><br><span class="line"></span><br><span class="line">--（8）考虑到数据安全的需要，需定时将“借阅记录”中数据进行备份，请使用一条SQL语句，</span><br><span class="line">-- 在备份用户bak下创建与“借阅记录”表结构完全一致的数据表BORROW_LOG_BAK.</span><br><span class="line">-- 井且将“借阅记录”中现有数据全部复制到BORROW_L0G_ BAK中。</span><br><span class="line">create table test_sql.BORROW_LOG_BAK as select * from test_sql.borrow_log;</span><br><span class="line">select * from test_sql.BORROW_LOG_BAK;</span><br><span class="line"></span><br><span class="line">--（9）现在需要将原Oracle数据库中数据迁移至Hive仓库，</span><br><span class="line">-- 请写出“图书”在Hive中的建表语句（Hive实现，提示：列分隔符|；</span><br><span class="line">-- 数据表数据需要外部导入：分区分别以month＿part、day＿part 命名）</span><br><span class="line">CREATE TABLE test_sql.book2</span><br><span class="line">(</span><br><span class="line">    book_id   string,</span><br><span class="line">    `SORT`    string,</span><br><span class="line">    book_name string,</span><br><span class="line">    writer    string,</span><br><span class="line">    OUTPUT    string,</span><br><span class="line">    price     decimal(10, 2)</span><br><span class="line">)partitioned by (month_part string,day_part string )</span><br><span class="line">    row format delimited fields terminated by &#x27;|&#x27;;</span><br><span class="line"></span><br><span class="line">--（10）Hive中有表A，现在需要将表A的月分区　201505　中　</span><br><span class="line">-- user＿id为20000的user＿dinner字段更新为bonc8920，其他用户user＿dinner字段数据不变，</span><br><span class="line">-- 请列出更新的方法步骤。（Hive实现，提示：Hive中无update语法，请通过其他办法进行数据更新）</span><br><span class="line">--A</span><br><span class="line">-- user_id   user_dinner  part</span><br><span class="line">-- 20000        aaaaa     201505</span><br><span class="line">-- 30000        bbbbb     201505</span><br><span class="line"></span><br><span class="line">create table A (user_id int,user_dinner string) partitioned by (part string);</span><br><span class="line">insert overwrite table A partition (part = &#x27;201505&#x27;)</span><br><span class="line">values (20000, &#x27;aaaaa&#x27;),</span><br><span class="line">       (30000, &#x27;bbbbb&#x27;),</span><br><span class="line">       (40000, &#x27;ccccc&#x27;);</span><br><span class="line">select * from A;</span><br><span class="line">--update A set user_dinner=&#x27;bonc8920&#x27; where user_id=20000;</span><br><span class="line"></span><br><span class="line">insert overwrite table A partition  (part = &#x27;201505&#x27;)</span><br><span class="line">select user_id, &#x27;bonc8920&#x27; as user_dinner from A where user_id=20000 and part = &#x27;201505&#x27; union all</span><br><span class="line">select user_id, user_dinner from A where user_id!=20000 and part = &#x27;201505&#x27;  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 第8题：服务日志SQL统计</span><br><span class="line">CREATE TABLE test_sql.test8(`date` string,</span><br><span class="line">interface string,</span><br><span class="line">ip string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test8 VALUES</span><br><span class="line">(&#x27;2016-11-09 11:22:05&#x27;,&#x27;/api/user/login&#x27;,&#x27;110.23.5.23&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:23:10&#x27;,&#x27;/api/user/detail&#x27;,&#x27;57.3.2.16&#x27;),</span><br><span class="line">(&#x27;2016-11-09 23:59:40&#x27;,&#x27;/api/user/login&#x27;,&#x27;200.6.5.166&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;136.79.47.70&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:15:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;94.144.143.141&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:16:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;197.161.8.206&#x27;),</span><br><span class="line">(&#x27;2016-11-09 12:14:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;240.227.107.145&#x27;),</span><br><span class="line">(&#x27;2016-11-09 13:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;79.130.122.205&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:14:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;65.228.251.189&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:15:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;245.23.122.44&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:17:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;22.74.142.137&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:19:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;54.93.212.87&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:20:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;218.15.167.248&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:24:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;20.117.19.75&#x27;),</span><br><span class="line">(&#x27;2016-11-09 15:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;183.162.66.97&#x27;),</span><br><span class="line">(&#x27;2016-11-09 16:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;108.181.245.147&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:17:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;22.74.142.137&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:19:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;22.74.142.137&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test8;</span><br><span class="line">--求11月9号下午14点（14-15点），访问/api/user/login接口的top10的ip地址</span><br><span class="line">select ip, count(1) cnt</span><br><span class="line">from test_sql.test8</span><br><span class="line">where date_format(`date`, &#x27;yyyy-MM-dd HH&#x27;) = &#x27;2016-11-09 14&#x27;</span><br><span class="line">  and interface = &#x27;/api/user/login&#x27;</span><br><span class="line">group by ip</span><br><span class="line">order by cnt desc</span><br><span class="line">limit 10</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">-- 第9题：充值日志SQL实战</span><br><span class="line">CREATE TABLE test_sql.test9(</span><br><span class="line">dist_id string COMMENT &#x27;区组id&#x27;,</span><br><span class="line">account string COMMENT &#x27;账号&#x27;,</span><br><span class="line">   `money` decimal(10,2) COMMENT &#x27;充值金额&#x27;,</span><br><span class="line">create_time string COMMENT &#x27;订单时间&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test9 VALUES (&#x27;1&#x27;,&#x27;11&#x27;,100006,&#x27;2019-01-02 13:00:01&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;22&#x27;,110000,&#x27;2019-01-02 13:00:02&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;33&#x27;,102000,&#x27;2019-01-02 13:00:03&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;44&#x27;,100300,&#x27;2019-01-02 13:00:04&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;55&#x27;,100040,&#x27;2019-01-02 13:00:05&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;66&#x27;,100005,&#x27;2019-01-02 13:00:06&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;77&#x27;,180000,&#x27;2019-01-03 13:00:07&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;88&#x27;,106000,&#x27;2019-01-02 13:00:08&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;99&#x27;,100400,&#x27;2019-01-02 13:00:09&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;12&#x27;,100030,&#x27;2019-01-02 13:00:10&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;13&#x27;,100003,&#x27;2019-01-02 13:00:20&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;14&#x27;,100020,&#x27;2019-01-02 13:00:30&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;15&#x27;,100500,&#x27;2019-01-02 13:00:40&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;16&#x27;,106000,&#x27;2019-01-02 13:00:50&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;17&#x27;,100800,&#x27;2019-01-02 13:00:59&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;18&#x27;,100800,&#x27;2019-01-02 13:00:11&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;19&#x27;,100030,&#x27;2019-01-02 13:00:12&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;10&#x27;,100000,&#x27;2019-01-02 13:00:13&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;45&#x27;,100010,&#x27;2019-01-02 13:00:14&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;78&#x27;,100070,&#x27;2019-01-02 13:00:15&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test9 order by dist_id , money desc;</span><br><span class="line">--请写出SQL语句，查询充值日志表2019年01月02号每个区组下充值额最大的账号，要求结果：</span><br><span class="line">--区组id，账号，金额，充值时间</span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by dist_id order by money desc) rn</span><br><span class="line">from  test_sql.test9 where to_date(create_time)=&#x27;2019-01-02&#x27;) t</span><br><span class="line">where t.rn=1;</span><br><span class="line"></span><br><span class="line">-- 第10题：电商分组TopK实战</span><br><span class="line">CREATE TABLE test_sql.test10(</span><br><span class="line">`dist_id` string COMMENT &#x27;区组id&#x27;,</span><br><span class="line">`account` string COMMENT &#x27;账号&#x27;,</span><br><span class="line">`gold` int COMMENT &#x27;金币&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test10 VALUES (&#x27;1&#x27;,&#x27;77&#x27;,18),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;88&#x27;,106),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;99&#x27;,10),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;12&#x27;,13),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;13&#x27;,14),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;14&#x27;,25),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;15&#x27;,36),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;16&#x27;,12),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;17&#x27;,158),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;18&#x27;,12),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;19&#x27;,44),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;10&#x27;,66),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;45&#x27;,80),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;78&#x27;,98);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test10;</span><br><span class="line"></span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by dist_id order by gold desc) rn</span><br><span class="line">from  test_sql.test10  ) t</span><br><span class="line">where t.rn&lt;=10;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="行转列-转置"><a href="#行转列-转置" class="headerlink" title="行转列(转置)"></a>行转列(转置)</h2><ul><li>行转列的常规做法是，group by+sum(if())【或count(if())】</li></ul><h3 id="华泰证券1"><a href="#华泰证券1" class="headerlink" title="华泰证券1"></a>华泰证券1</h3><p>已知</p><table><thead><tr><th>year</th><th>month</th><th>amount</th></tr></thead><tbody><tr><td>1991</td><td>1</td><td>1.1</td></tr><tr><td>1991</td><td>2</td><td>1.2</td></tr><tr><td>1991</td><td>3</td><td>1.3</td></tr><tr><td>1991</td><td>4</td><td>1.4</td></tr><tr><td>1992</td><td>1</td><td>2.1</td></tr><tr><td>1992</td><td>2</td><td>2.2</td></tr><tr><td>1992</td><td>3</td><td>2.3</td></tr><tr><td>1992</td><td>4</td><td>2.4</td></tr></tbody></table><p>查成这样一个结果</p><table><thead><tr><th>year</th><th>m1</th><th>m2</th><th>m3</th><th>m4</th></tr></thead><tbody><tr><td>1991</td><td>1.1</td><td>1.2</td><td>1.3</td><td>1.4</td></tr><tr><td>1992</td><td>2.1</td><td>2.2</td><td>2.3</td><td>2.4</td></tr></tbody></table><p>解答</p><ul><li><p>&#96;&#96;&#96;sql<br>use test_sql;<br>set hive.exec.mode.local.auto&#x3D;true;<br>create table table2(year int,month int ,amount double) ;<br> insert overwrite table table2 values<br>       (1991,1,1.1),<br>       (1991,2,1.2),<br>       (1991,3,1.3),<br>       (1991,4,1.4),<br>       (1992,1,2.1),<br>       (1992,2,2.2),<br>       (1992,3,2.3),<br>       (1992,4,2.4);<br>select * from table2;</p><p>–行转列<br>–常规做法是，group by+sum(if())<br>–原始写法<br>select year,<br>   sum(a) as m1,<br>   sum(b) as m2,<br>   sum(c) as m3,<br>   sum(d) as m4<br>from<br>(select *,<br>        if(month&#x3D;1,amount,0) a,<br>        if(month&#x3D;2,amount,0) b,<br>        if(month&#x3D;3,amount,0) c,<br>        if(month&#x3D;4,amount,0) d<br> from table2) t<br>group by t.year<br>;<br>–简化写法<br>select year,<br>   sum(if(month&#x3D;1,amount,0)) m1,<br>   sum(if(month&#x3D;2,amount,0)) m2,<br>   sum(if(month&#x3D;3,amount,0)) m3,<br>   sum(if(month&#x3D;4,amount,0)) m4<br>from table2<br>group by year;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 华泰证券2</span><br><span class="line"></span><br><span class="line">* 查询课程编号“2”的成绩比课程编号“1”低的所有同学的学号、姓名。</span><br><span class="line"></span><br><span class="line">* 【这是行转列的衍生题】</span><br><span class="line"></span><br><span class="line">* ```sql</span><br><span class="line">  create table student(sid int, sname string, gender string, class_id int);</span><br><span class="line">  insert overwrite table student</span><br><span class="line">  values (1, &#x27;张三&#x27;, &#x27;女&#x27;, 1),</span><br><span class="line">         (2, &#x27;李四&#x27;, &#x27;女&#x27;, 1),</span><br><span class="line">         (3, &#x27;王五&#x27;, &#x27;男&#x27;, 2);</span><br><span class="line">  </span><br><span class="line">  select * from student;</span><br><span class="line">  </span><br><span class="line">  create table  course (cid int, cname string, teacher_id int);</span><br><span class="line">  insert overwrite table course</span><br><span class="line">  values (1, &#x27;生物&#x27;, 1),</span><br><span class="line">         (2, &#x27;体育&#x27;, 1),</span><br><span class="line">         (3, &#x27;物理&#x27;, 2);</span><br><span class="line">  select * from course;</span><br><span class="line">  </span><br><span class="line">  create table score (sid int, student_id int, course_id int, number int);</span><br><span class="line">  insert overwrite table score</span><br><span class="line">  values (1, 1, 1, 58),</span><br><span class="line">         (4, 1, 2, 50),</span><br><span class="line">         (2, 1, 2, 68),</span><br><span class="line">         (3, 2, 2, 89);</span><br><span class="line">  select * from score;</span><br><span class="line">  </span><br><span class="line">  with t1 as(</span><br><span class="line">      select student_id,</span><br><span class="line">         sum(if(course_id=2,number,0)) as pe, --体育</span><br><span class="line">         sum(if(course_id=1,number,0)) as bio --生物</span><br><span class="line">  from score</span><br><span class="line">  group by student_id</span><br><span class="line">  having pe&lt;bio)</span><br><span class="line">  select sid, sname</span><br><span class="line">  from t1</span><br><span class="line">  join student</span><br><span class="line">  on t1.student_id = sid</span><br><span class="line">  ;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="腾讯游戏"><a href="#腾讯游戏" class="headerlink" title="腾讯游戏"></a>腾讯游戏</h3><p>表table如下：</p><table><thead><tr><th>DDate</th><th>shengfu</th></tr></thead><tbody><tr><td>2015-05-09</td><td>胜</td></tr><tr><td>2015-05-09</td><td>胜</td></tr><tr><td>2015-05-09</td><td>负</td></tr><tr><td>2015-05-09</td><td>负</td></tr><tr><td>2015-05-10</td><td>胜</td></tr><tr><td>2015-05-10</td><td>负</td></tr><tr><td>2015-05-10</td><td>负</td></tr></tbody></table><p>如果要生成下列结果, 该如何写sql语句?</p><table><thead><tr><th>DDate</th><th>胜</th><th>负</th></tr></thead><tbody><tr><td>2015-05-09</td><td>2</td><td>2</td></tr><tr><td>2015-05-10</td><td>1</td><td>2</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table1(DDate string, shengfu string) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> table1 <span class="keyword">values</span> (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;负&quot;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DDate,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> shengfu <span class="operator">=</span> <span class="string">&#x27;胜&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) `胜`,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> shengfu <span class="operator">=</span> <span class="string">&#x27;负&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) `负`</span><br><span class="line"><span class="keyword">from</span> table1</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> DDate;</span><br></pre></td></tr></table></figure><h3 id="腾讯QQ"><a href="#腾讯QQ" class="headerlink" title="腾讯QQ"></a>腾讯QQ</h3><p>假设tableA如表5, tableB如表6,</p><p>表5</p><table><thead><tr><th>qq号（字段名：qq）</th><th>游戏（字段名：game）</th></tr></thead><tbody><tr><td>10000</td><td>a</td></tr><tr><td>10000</td><td>b</td></tr><tr><td>10000</td><td>c</td></tr><tr><td>20000</td><td>c</td></tr><tr><td>20000</td><td>d</td></tr></tbody></table><p>表6</p><table><thead><tr><th>qq号（字段名：qq）</th><th>游戏（字段名：game）</th></tr></thead><tbody><tr><td>10000</td><td>a_b_c</td></tr><tr><td>20000</td><td>c_d</td></tr></tbody></table><p> 请写出以下sql逻辑：</p><p>a,将tableA输出为tableB的格式； 【行转列】</p><p>b,将tableB输出为tableA的格式;   【列转行】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableA(qq string, game string) </span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tableA <span class="keyword">values</span> </span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;a&#x27;</span>),</span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;c&#x27;</span>),</span><br><span class="line">       (<span class="number">20000</span>, <span class="string">&#x27;c&#x27;</span>),</span><br><span class="line">       (<span class="number">20000</span>, <span class="string">&#x27;d&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableB(qq string, game string) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tableB <span class="keyword">values</span> </span><br><span class="line">(<span class="number">10000</span>, <span class="string">&#x27;a_b_c&#x27;</span>),</span><br><span class="line">(<span class="number">20000</span>, <span class="string">&#x27;c_d&#x27;</span>);</span><br><span class="line">       </span><br><span class="line"><span class="comment">--将tableA输出为tableB的格式；  </span></span><br><span class="line"><span class="keyword">select</span> qq,</span><br><span class="line">       concat_ws(<span class="string">&#x27;_&#x27;</span>, collect_list(game)) game</span><br><span class="line"><span class="keyword">from</span> tableA</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> qq;   </span><br><span class="line">       </span><br><span class="line"><span class="comment">--将tableB输出为tableA的格式;    </span></span><br><span class="line"><span class="keyword">select</span> qq,</span><br><span class="line">       tmp.game</span><br><span class="line"><span class="keyword">from</span> tableB <span class="keyword">lateral</span> <span class="keyword">view</span> explode(split(game, <span class="string">&#x27;_&#x27;</span>)) tmp <span class="keyword">as</span> game;</span><br></pre></td></tr></table></figure><h2 id="连续N天登陆"><a href="#连续N天登陆" class="headerlink" title="连续N天登陆"></a>连续N天登陆</h2><ul><li><p>思路分析过程</p><ul><li><p><img src="E:\自研项目\sql资料\4\images\1659757393656.png" alt="1659757393656"></p></li><li><p>&#96;&#96;&#96;sql<br>–核心代码<br>-&gt;distinct<br>-&gt; row_number<br>-&gt; date_sub(dt,rn) as dt2<br>-&gt; group by dt2,name<br>-&gt; having count(1)&gt;&#x3D;N天<br>-&gt; distinct name<br>-&gt; count(name)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 思路2</span><br><span class="line"></span><br><span class="line">* ![1659759179547](E:\自研项目\sql资料\4\images\1659759179547.png)</span><br><span class="line"></span><br><span class="line">* ```sql</span><br><span class="line">  --核心代码</span><br><span class="line">  -&gt;distinct</span><br><span class="line">  -&gt;date_add(dt,N-1) as date2</span><br><span class="line">  -&gt;lead(dt,N-1) over(partition by userid order by dt) as date3</span><br><span class="line">  -&gt;where date2=date3</span><br><span class="line">  -&gt;distinct</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="OPPO"><a href="#OPPO" class="headerlink" title="OPPO"></a>OPPO</h3><p>3、以下为用户登陆游戏的日期，用一条sQL语句查询出连续三天登录的人员姓名</p><table><thead><tr><th>name</th><th>date</th></tr></thead><tbody><tr><td>张三</td><td>2021-01-01</td></tr><tr><td>张三</td><td>2021-01-02</td></tr><tr><td>张三</td><td>2021-01-03</td></tr><tr><td>张三</td><td>2021-01-02</td></tr><tr><td>李四</td><td>2021-01-01</td></tr><tr><td>李四</td><td>2021-01-02</td></tr><tr><td>王五</td><td>2021-01-03</td></tr><tr><td>王五</td><td>2021-01-02</td></tr><tr><td>王五</td><td>2021-01-02</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> game(name string,  `<span class="type">date</span>` string);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> game <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-03&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-07&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-08&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-09&#x27;</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-03&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>);</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="keyword">distinct</span>  name,<span class="type">date</span> <span class="keyword">from</span> game),</span><br><span class="line">     t2 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">                    <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> <span class="type">date</span>) rn</span><br><span class="line">         <span class="keyword">from</span> t1),</span><br><span class="line">     t3 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,date_sub(<span class="type">date</span>,rn) date2 <span class="keyword">from</span> t2 )</span><br><span class="line">     <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t3 <span class="keyword">group</span> <span class="keyword">by</span> name,date2 <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;=</span><span class="number">3</span>;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">--方案二</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> game;</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> name,`<span class="type">date</span>` <span class="keyword">from</span> game</span><br><span class="line">),</span><br><span class="line">    t2 <span class="keyword">as</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">               date_add(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">as</span> date2,</span><br><span class="line">               <span class="built_in">lead</span>(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> `<span class="type">date</span>`) <span class="keyword">as</span> date3</span><br><span class="line">          <span class="keyword">from</span> t1</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t2 <span class="keyword">where</span> date2<span class="operator">=</span>date3;</span><br><span class="line"><span class="comment">--方案二的写法2</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> name,`<span class="type">date</span>` <span class="keyword">from</span> game</span><br><span class="line">),</span><br><span class="line">    t2 <span class="keyword">as</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">               <span class="built_in">lead</span>(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> `<span class="type">date</span>`) <span class="keyword">as</span> date3</span><br><span class="line">          <span class="keyword">from</span> t1</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t2 <span class="keyword">where</span> datediff(date3,`<span class="type">date</span>`)<span class="operator">=</span><span class="number">2</span> ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="脉脉"><a href="#脉脉" class="headerlink" title="脉脉"></a>脉脉</h3><p>用户每日登陆脉脉会访问app不同的模块，现有两个表</p><p>表1记录了每日脉脉活跃用户的uid和不同模块的活跃时长</p><p>表2记录了脉脉所有注册用户的一些属性</p><p>表1：maimai.dau</p><table><thead><tr><th>d</th><th>uid</th><th>module</th><th>active_duration</th><th>列说明</th></tr></thead><tbody><tr><td>2020-01-01</td><td>1</td><td>jobs</td><td>324</td><td>d：活跃的日期uid：用户的唯一编码module：用户活跃模块actre.duration：该模块下对应的活跃时长（单位：s）</td></tr><tr><td>2020-01-01</td><td>2</td><td>feeds</td><td>445</td><td></td></tr><tr><td>2020-01-01</td><td>3</td><td>im</td><td>345</td><td></td></tr><tr><td>2020-01-02</td><td>2</td><td>network</td><td>765</td><td></td></tr><tr><td>2020-01-02</td><td>3</td><td>jobs</td><td>342</td><td></td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td></td></tr></tbody></table><p> 在过去一个月内,曾连续两天活跃的用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="comment">-- 表1 dau   记录了每日脉脉活跃用户的uid和不同模块的活跃时长</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dau(d string, uid <span class="type">int</span>, <span class="keyword">module</span> string, active_duration <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> dau</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;jobs&#x27;</span>, <span class="number">324</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;feeds&#x27;</span>, <span class="number">445</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;im&#x27;</span>, <span class="number">345</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-02&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;network&#x27;</span>, <span class="number">765</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-02&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;jobs&#x27;</span>, <span class="number">342</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> dau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">DISTINCT</span> d, uid <span class="keyword">from</span> dau),</span><br><span class="line">     t2 <span class="keyword">as</span> (</span><br><span class="line">         <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">                date_sub(d, (<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> uid <span class="keyword">order</span> <span class="keyword">by</span> d))) dis</span><br><span class="line">         <span class="keyword">from</span> t1</span><br><span class="line">         <span class="keyword">where</span> d <span class="operator">&lt;=</span> `<span class="built_in">current_date</span>`()</span><br><span class="line">           <span class="keyword">and</span> d <span class="operator">&gt;=</span> date_sub((`<span class="built_in">current_date</span>`()), <span class="number">30</span>)),</span><br><span class="line">t3 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> uid,</span><br><span class="line">           <span class="built_in">min</span>(d)   `开始日期`,</span><br><span class="line">           <span class="built_in">max</span>(d)   `结束日期`,</span><br><span class="line">           <span class="built_in">count</span>(<span class="number">1</span>) `连续登入天数`</span><br><span class="line">    <span class="keyword">from</span> t2</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> uid,dis</span><br><span class="line">    <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">2</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> uid <span class="keyword">from</span> t3 ;</span><br></pre></td></tr></table></figure><h3 id="广州银行"><a href="#广州银行" class="headerlink" title="广州银行"></a>广州银行</h3><p>有一张表C_T（列举了部分数据）表示持卡人消费记录，表结构如下：</p><table><thead><tr><th>CARD NER</th><th>VARCHAR2</th><th>卡号，</th></tr></thead><tbody><tr><td>C_MONTH</td><td>NUMBER</td><td>消费月份，</td></tr><tr><td>C_DATE</td><td>DATE</td><td>消费日期，</td></tr><tr><td>C_TYPEVAR</td><td>CHAR2</td><td>消费类型</td></tr><tr><td>C_ATM</td><td>NUMBER</td><td>消费金额</td></tr></tbody></table><p> 每个月每张卡连续消费的最大天数（如卡在当月只有一次消费则为1）。</p><p>连续消费天数：指一楼时间内连续每天都有消费，同一天有多笔消费算一天消费，不能跨月份统计。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> c_t</span><br><span class="line">(</span><br><span class="line">    card_nbr string,</span><br><span class="line">    c_month  string,</span><br><span class="line">    c_date   string,</span><br><span class="line">    c_type   string,</span><br><span class="line">    c_atm    <span class="type">decimal</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> c_t <span class="keyword">values</span></span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-01&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-02&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-03&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">300</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-15&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-16&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-06&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">500</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-07&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">800</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-01&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-02&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-03&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">300</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-06&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">500</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-07&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">800</span>);</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> card_nbr,c_month,c_date <span class="keyword">from</span> c_t),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>,<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> card_nbr,c_month <span class="keyword">order</span> <span class="keyword">by</span> c_date) rn <span class="keyword">from</span> t1  ),</span><br><span class="line">     t3 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>,date_sub(c_date,rn) dt2 <span class="keyword">from</span> t2  ),</span><br><span class="line">     t4 <span class="keyword">as</span> (<span class="keyword">select</span>  dt2,card_nbr,c_month,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> t3 <span class="keyword">group</span> <span class="keyword">by</span> dt2,card_nbr,c_month),</span><br><span class="line">     t5 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> card_nbr,c_month <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) <span class="keyword">as</span> rn <span class="keyword">from</span> t4)</span><br><span class="line"><span class="keyword">select</span> card_nbr,c_month,cnt <span class="keyword">from</span> t5 <span class="keyword">where</span> rn<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="N日留存率"><a href="#N日留存率" class="headerlink" title="N日留存率"></a>N日留存率</h2><ul><li><div align="left"><img src="images/1661067330554.png" style="zoom:60%;" /></div></li><li><p>核心代码</p></li><li><pre><code class="sql">-&gt; where 日期 in (首日,1天后,7天后)-&gt; group by 用户-&gt;count(if(日期=首日,1,null))  as cnt  count(if(日期=1天后,1,null)) as cnt2  count(if(日期=7天后,1,null)) as cnt8-&gt;having cnt&gt;0-&gt;count(user_id) as 首日总数  count(if(cnt2&gt;0,1,null)) as 次日留存数  count(if(cnt8&gt;0,1,null)) as 7日留存数-&gt;次日留存数/首日总数 as 次日留存率  7日留存数/首日总数 as 7日留存率<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 先按用户分组，得到每个用户的各相关日期的登录情况。</span><br><span class="line"></span><br><span class="line">  * ```sql</span><br><span class="line">    select cuid,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-01&#x27;,1,null)) as cnt,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-02&#x27;,1,null)) as cnt2,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-08&#x27;,1,null)) as cnt8</span><br><span class="line">      from tb_cuid_1d</span><br><span class="line">      --提前过滤数据</span><br><span class="line">      where event_day in (&#x27;2020-04-01&#x27;,&#x27;2020-04-02&#x27;,&#x27;2020-04-08&#x27;)</span><br><span class="line">    group by cuid</span><br><span class="line">    -- 2020-04-01必须登录，剔除掉2020-04-01没登录的</span><br><span class="line">    having cnt&gt;0</span><br></pre></td></tr></table></figure>  效果如下  &lt;div align=&quot;left&quot;&gt;&lt;img src=&quot;images/1659841600894.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;/div&gt;</code></pre></li><li><p>再对上面的用户汇总</p><ul><li>&#96;&#96;&#96;sql<br>select count(cnt) as uv,<br>   count(if(cnt2!&#x3D;0,1,null)) as uv2,<br>   count(if(cnt8!&#x3D;0,1,null)) as uv8<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  * &lt;div align=&quot;left&quot;&gt;&lt;img src=&quot;images/1659841614840.png&quot; style=&quot;zoom:60%;&quot; /&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">* 最后再用 【后续日期的留存数】除以【首日总数】，就是【留存率】</span><br><span class="line"></span><br><span class="line">* 方案二</span><br><span class="line"></span><br><span class="line">  ```sql</span><br><span class="line">  select count(a.cuid) uv,</span><br><span class="line">         count(b.cuid) uv2,</span><br><span class="line">         count(c.cuid) uv7</span><br><span class="line">  from (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;首日&#x27;) as a</span><br><span class="line">  left join (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;次日&#x27;) as b on a.cuid=b.cuid</span><br><span class="line">  left join (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;7日后&#x27;) as c on a.cuid=c.cuid;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="腾讯视频号游戏直播"><a href="#腾讯视频号游戏直播" class="headerlink" title="腾讯视频号游戏直播"></a>腾讯视频号游戏直播</h3><p>表：tableA </p><table><thead><tr><th>ds(日期)</th><th>device</th><th>user_id</th><th>is_active</th></tr></thead><tbody><tr><td>2020-03-01</td><td>ios</td><td>0001</td><td>0</td></tr><tr><td>2020–0301</td><td>ios</td><td>0002</td><td>1</td></tr><tr><td>2020-03-01</td><td>android</td><td>0003</td><td>1</td></tr><tr><td>2020-03-02</td><td>ios</td><td>0001</td><td>0</td></tr><tr><td>2020-03-02</td><td>ios</td><td>0002</td><td>0</td></tr><tr><td>2020-03-02</td><td>android</td><td>0003</td><td>1</td></tr></tbody></table><p> 20200301的ios设备用户活跃的次日留存率是多少？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">use test_sql;</span><br><span class="line"><span class="keyword">set</span> hive.exec.mode.local.auto<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"><span class="comment">--腾讯视频号游戏直播</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tableA;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableA</span><br><span class="line">(ds string comment <span class="string">&#x27;(日期)&#x27;</span>  ,device string,user_id string,is_active <span class="type">int</span>) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span>  tableA <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0001&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0002&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0004&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;android&#x27;</span>,<span class="string">&#x27;0003&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0001&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0002&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;android&#x27;</span>,<span class="string">&#x27;0003&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0005&#x27;</span>,<span class="number">1</span>) ,</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0004&#x27;</span>,<span class="number">1</span>) ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--方案1，过程见下面的顺序编号</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> user_id,</span><br><span class="line">           <span class="comment">--3-一个用户如果在&#x27;2020-03-01&#x27;活跃，则cnt1&gt;0</span></span><br><span class="line">           <span class="built_in">count</span>(if(ds <span class="operator">=</span> <span class="string">&#x27;2020-03-01&#x27;</span>, <span class="number">1</span>, <span class="keyword">null</span>)) cnt1,</span><br><span class="line">           <span class="comment">--4-一个用户如果在&#x27;2020-03-02&#x27;活跃，则cnt2&gt;0</span></span><br><span class="line">           <span class="built_in">count</span>(if(ds <span class="operator">=</span> <span class="string">&#x27;2020-03-02&#x27;</span>, <span class="number">1</span>, <span class="keyword">null</span>)) cnt2</span><br><span class="line">    <span class="keyword">from</span> tableA</span><br><span class="line">    <span class="comment">--1-预先全局过滤</span></span><br><span class="line">    <span class="keyword">where</span> device <span class="operator">=</span> <span class="string">&#x27;ios&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> is_active <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">      <span class="keyword">and</span> ds <span class="keyword">in</span> (<span class="string">&#x27;2020-03-01&#x27;</span>, <span class="string">&#x27;2020-03-02&#x27;</span>)</span><br><span class="line">    <span class="comment">--2-按用户分组</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> user_id</span><br><span class="line">    <span class="comment">--6-只筛选&#x27;2020-03-01&#x27;活跃的用户，他在&#x27;2020-03-02&#x27;是否活跃，看cnt2=0则不活跃，&gt;0则活跃</span></span><br><span class="line">    <span class="keyword">having</span> cnt1 <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(cnt1)                               sum1,<span class="comment">--&#x27;2020-03-01&#x27;的活跃数</span></span><br><span class="line">       <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, user_id, <span class="keyword">null</span>))        sum2,<span class="comment">----并且在次日依然活跃的用户数</span></span><br><span class="line">       <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, user_id, <span class="keyword">null</span>)) <span class="operator">/</span> <span class="built_in">count</span>(cnt1) rate<span class="comment">--次日留存率</span></span><br><span class="line"><span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p>有两张表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> tb_cuid_1d</span><br><span class="line">(</span><br><span class="line">    cuid         string comment <span class="string">&#x27;用户的唯一标识&#x27;</span>,</span><br><span class="line">    os           string comment <span class="string">&#x27;平台&#x27;</span>,</span><br><span class="line">    soft_version string comment <span class="string">&#x27;版本&#x27;</span>,</span><br><span class="line">    event_day    string comment <span class="string">&#x27;日期&#x27;</span>,</span><br><span class="line">    <span class="type">timestamp</span>    <span class="type">int</span> comment <span class="string">&#x27;用户访问时间戳&#x27;</span>,</span><br><span class="line">    duration     <span class="type">decimal</span> comment <span class="string">&#x27;用户访问时长&#x27;</span>,</span><br><span class="line">    ext          <span class="keyword">array</span><span class="operator">&lt;</span>string<span class="operator">&gt;</span> comment <span class="string">&#x27;扩展字段&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tb_cuid_1d <span class="keyword">values</span></span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-08&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">2</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">3</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"> </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> tb_account_1d</span><br><span class="line">(</span><br><span class="line">    cuid      string comment <span class="string">&#x27;用户的唯一标识&#x27;</span>,</span><br><span class="line">    uid       string comment <span class="string">&#x27;登入用户账号名&#x27;</span>,</span><br><span class="line">    event_day string comment <span class="string">&#x27;日期&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>写出用户表 tb_cuid_1d的 20200401 的次日、次7日留存的具体HQL ：</p><p>一条sql统计出以下指标 （4.1号uv，4.1号在4.2号的留存uv，4.1号在4.8号的留存uv）;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一个理解简单，但是性能不快的做法</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(a.cuid) uv,</span><br><span class="line">       <span class="built_in">count</span>(b.cuid) uv2,</span><br><span class="line">       <span class="built_in">count</span>(c.cuid) uv7</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-01&#x27;</span>) <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-02&#x27;</span>) <span class="keyword">as</span> b <span class="keyword">on</span> a.cuid<span class="operator">=</span>b.cuid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-08&#x27;</span>) <span class="keyword">as</span> c <span class="keyword">on</span> a.cuid<span class="operator">=</span>c.cuid;</span><br><span class="line"><span class="comment">--另一个理解稍微复杂，但是性能快的做法</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> cuid,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt1,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt2,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-08&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt8</span><br><span class="line">     <span class="keyword">from</span> tb_cuid_1d</span><br><span class="line">     <span class="keyword">where</span> event_day <span class="keyword">in</span> (<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="string">&#x27;2020-04-08&#x27;</span>)</span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> cuid</span><br><span class="line">     <span class="keyword">having</span> cnt1 <span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line">),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="built_in">count</span>(cuid)                  <span class="keyword">as</span> uv1,</span><br><span class="line">                   <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">null</span>)) <span class="keyword">as</span> uv2,</span><br><span class="line">                   <span class="built_in">count</span>(if(cnt8 <span class="operator">&gt;</span> <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">null</span>)) <span class="keyword">as</span> uv7</span><br><span class="line">            <span class="keyword">from</span> t1</span><br><span class="line">            )</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">       uv2 <span class="operator">/</span> uv1 <span class="keyword">as</span> `次日留存率`,</span><br><span class="line">       uv7 <span class="operator">/</span> uv1 <span class="keyword">as</span> `<span class="number">7</span>日留存率`</span><br><span class="line"><span class="keyword">from</span> t2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分组内top前几"><a href="#分组内top前几" class="headerlink" title="分组内top前几"></a>分组内top前几</h2><ul><li><p>需求常见词： </p><ul><li><p>【每组xxx内按yyy排序的前n个zzz】</p></li><li><p>【每组xxx内按yyy排序的第1个zzz】</p></li><li><p>【每组xxx内按yyy排序的最后1个zzz】</p></li><li><p>特点是yyy和zzz是不同的字段。</p></li><li><p>比如：班内按性别分组，组内按身高排序，的前3个学生姓名</p></li></ul></li><li><p>公式：row_number() over(partition by 组名 order by yyy)  as rn，再筛选rn&lt;&#x3D;N名</p></li></ul><h3 id="跨越物流"><a href="#跨越物流" class="headerlink" title="跨越物流"></a>跨越物流</h3><p>员工表结构</p><div align="left"><img src="images/1659691092883.png" style="zoom:40%;" /></div> <p>员工表数据</p><div align="left"><img src="images/1659691114602.png" style="zoom:40%;" /></div> <p>题目描述</p><p>求出每个部门工资最高的前三名员工，并计算这些员工的工资占所属部门总工资的百分比。</p><p>结果</p><p><img src="E:\自研项目\sql资料\4\images\1659691126801.png" alt="1659691126801"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(empno string ,ename string,hiredate string,sal <span class="type">int</span> ,deptno string);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;7521&#x27;</span>, <span class="string">&#x27;WARD&#x27;</span>, <span class="string">&#x27;1981-2-22&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7566&#x27;</span>, <span class="string">&#x27;JONES&#x27;</span>, <span class="string">&#x27;1981-4-2&#x27;</span>, <span class="number">2975</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7876&#x27;</span>, <span class="string">&#x27;ADAMS&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">1100</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7369&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>, <span class="string">&#x27;1980-12-17&#x27;</span>, <span class="number">800</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7934&#x27;</span>, <span class="string">&#x27;MILLER&#x27;</span>, <span class="string">&#x27;1982-1-23&#x27;</span>, <span class="number">1300</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7844&#x27;</span>, <span class="string">&#x27;TURNER&#x27;</span>, <span class="string">&#x27;1981-9-8&#x27;</span>, <span class="number">1500</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7782&#x27;</span>, <span class="string">&#x27;CLARK&#x27;</span>, <span class="string">&#x27;1981-6-9&#x27;</span>, <span class="number">2450</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7839&#x27;</span>, <span class="string">&#x27;KING&#x27;</span>, <span class="string">&#x27;1981-11-17&#x27;</span>, <span class="number">5000</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7902&#x27;</span>, <span class="string">&#x27;FORD&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7499&#x27;</span>, <span class="string">&#x27;ALLEN&#x27;</span>, <span class="string">&#x27;1981-2-20&#x27;</span>, <span class="number">1600</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7654&#x27;</span>, <span class="string">&#x27;MARTIN&#x27;</span>, <span class="string">&#x27;1981-9-28&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7900&#x27;</span>, <span class="string">&#x27;JAMES&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">950</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7788&#x27;</span>, <span class="string">&#x27;SCOTT&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7698&#x27;</span>, <span class="string">&#x27;BLAKE&#x27;</span>, <span class="string">&#x27;1981-5-1&#x27;</span>, <span class="number">2850</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--求出每个部门工资最高的前三名员工，并计算这些员工的工资占所属部门总工资的百分比。</span></span><br><span class="line"><span class="keyword">select</span> a.empno,</span><br><span class="line">       a.sal,</span><br><span class="line">       a.deptno,</span><br><span class="line">       a.rn,</span><br><span class="line">       a.sum_sal,</span><br><span class="line">       round(a.sal<span class="operator">/</span>a.sum_sal,<span class="number">2</span>) <span class="keyword">as</span> rate</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line"><span class="comment">--每个部门工资排名</span></span><br><span class="line">         <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">as</span> rn, </span><br><span class="line"><span class="comment">--每个部门的总工资</span></span><br><span class="line">         <span class="built_in">sum</span>(sal) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno ) <span class="keyword">as</span> sum_sal </span><br><span class="line"><span class="keyword">from</span> emp) a</span><br><span class="line"><span class="keyword">where</span> rn<span class="operator">&lt;=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="小米电商"><a href="#小米电商" class="headerlink" title="小米电商"></a>小米电商</h3><p>订单表，torder.  字段，user_id, order_id, ctime(10位时间戳)，city id，sale_num，sku_id(商品)</p><p>问题：20201201至今每日订单量top10的城市及其订单量(订单量对order id去重)(在线写)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_order (user_id string, </span><br><span class="line">                      order_id string, </span><br><span class="line">                      ctime string, </span><br><span class="line">                      city_id string, </span><br><span class="line">                      sale_num <span class="type">int</span> , </span><br><span class="line">                      sku_id string) ;</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> to_date(ctime) cdate, city_id, <span class="built_in">count</span>(<span class="keyword">distinct</span> order_id) cnt</span><br><span class="line">            <span class="keyword">from</span> t_order</span><br><span class="line">            <span class="keyword">where</span> to_date(ctime) <span class="operator">&gt;=</span> <span class="string">&#x27;2020-12-01&#x27;</span></span><br><span class="line">              <span class="keyword">and</span> to_date(ctime) <span class="operator">&lt;=</span> `<span class="built_in">current_date</span>`()</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> to_date(ctime), city_id),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>, <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> cdate <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) rn <span class="keyword">from</span> t1)</span><br><span class="line"><span class="keyword">select</span> cdate, city_id, cnt</span><br><span class="line"><span class="keyword">from</span> t2</span><br><span class="line"><span class="keyword">where</span> rn <span class="operator">&lt;=</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h2 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h2><ul><li><p>窗口函数的最大特点是有over()关键字</p></li><li><p>聚合类的窗口函数</p><ul><li>sum() over()</li><li>count&#x2F;avg&#x2F;max&#x2F;min</li></ul></li><li><p>排序类的窗口函数</p><ul><li>row_number，rank，dense_rank</li></ul></li><li><p>偏移类的，跨行的</p><ul><li>lag &#x2F; lead</li></ul></li><li><p>first_value&#x2F;last_value</p></li><li><p>ntile</p></li></ul><h3 id="交通银行"><a href="#交通银行" class="headerlink" title="交通银行"></a>交通银行</h3><p>Emp表的表数据如下：</p><table><thead><tr><th>NAME</th><th>MONTH</th><th>AMT</th></tr></thead><tbody><tr><td>张三</td><td>01</td><td>100</td></tr><tr><td>李四</td><td>02</td><td>120</td></tr><tr><td>王五</td><td>03</td><td>150</td></tr><tr><td>赵六</td><td>04</td><td>500</td></tr><tr><td>张三</td><td>05</td><td>400</td></tr><tr><td>李四</td><td>06</td><td>350</td></tr><tr><td>王五</td><td>07</td><td>180</td></tr><tr><td>赵六</td><td>08</td><td>400</td></tr></tbody></table><p>问题：请写出可以得到以下的结果SQL</p><table><thead><tr><th>NAME</th><th>总金额</th><th>排名</th><th>占比</th></tr></thead><tbody><tr><td>赵六</td><td>900</td><td>1</td><td>40.91%</td></tr><tr><td>张三</td><td>500</td><td>2</td><td>22.73%</td></tr><tr><td>李四</td><td>470</td><td>3</td><td>21.36%</td></tr><tr><td>王五</td><td>330</td><td>4</td><td>15.00%</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(name string , <span class="keyword">month</span> string, amt <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp <span class="keyword">values</span> (<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;01&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">       (<span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="number">120</span>),</span><br><span class="line">       (<span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;03&#x27;</span>, <span class="number">150</span>),</span><br><span class="line">       (<span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;04&#x27;</span>, <span class="number">500</span>),</span><br><span class="line">       (<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;05&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">       (<span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;06&#x27;</span>, <span class="number">350</span>),</span><br><span class="line">       (<span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;07&#x27;</span>, <span class="number">180</span>),</span><br><span class="line">       (<span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;08&#x27;</span>, <span class="number">400</span>);</span><br><span class="line"><span class="comment">--rank 1224</span></span><br><span class="line"><span class="comment">--dense_rank 1223</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> name,</span><br><span class="line">                   <span class="built_in">sum</span>(amt) <span class="keyword">as</span> sum_amt</span><br><span class="line">            <span class="keyword">from</span> emp</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> name),</span><br><span class="line">     t2 <span class="keyword">as</span> (</span><br><span class="line">         <span class="keyword">select</span> name,</span><br><span class="line">                sum_amt,</span><br><span class="line">                <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> sum_amt <span class="keyword">desc</span>) rn,</span><br><span class="line">                sum_amt<span class="operator">/</span><span class="built_in">sum</span>(sum_amt) <span class="keyword">over</span> () <span class="keyword">as</span> rate</span><br><span class="line">         <span class="keyword">from</span> t1</span><br><span class="line">     )</span><br><span class="line"><span class="keyword">select</span> name, sum_amt, rn, concat(round(rate<span class="operator">*</span><span class="number">100</span>,<span class="number">2</span>),<span class="string">&#x27;%&#x27;</span>) rate <span class="keyword">from</span> t2</span><br></pre></td></tr></table></figure><h3 id="跨越物流-1"><a href="#跨越物流-1" class="headerlink" title="跨越物流"></a>跨越物流</h3><p>题目描述</p><p>在第一题员工表的基础上，统计每年入职总数以及截至本年累计入职总人数。</p><p>截至本年累计入职总人数&#x3D;本年总入职人数 + 本年之前所有年的总入职人数之和</p><p>结果</p><div align="left"><img src="images/1659701581524.png" style="zoom:40%;" /></div> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">       <span class="built_in">sum</span>(cnt) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> year1) cnt2</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">year</span>(hiredate) <span class="keyword">as</span> year1,</span><br><span class="line">       <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">year</span>(hiredate)) a;</span><br></pre></td></tr></table></figure><h2 id="带条件的聚合统计"><a href="#带条件的聚合统计" class="headerlink" title="带条件的聚合统计"></a>带条件的聚合统计</h2><ul><li>一般的做法是group by xx,yy  再多次的sum(if(……))</li><li>好处是避免多次加载表，一次性得到多个指标，可以只加载一次表就得到多个指标。</li></ul><h3 id="腾讯数据提取"><a href="#腾讯数据提取" class="headerlink" title="腾讯数据提取"></a>腾讯数据提取</h3><p>用户行为表：t_user_video_action_d分区：ds（格式 yyyyMMdd）</p><p>主键：user_id、video_id</p><p>含义：一个 user 对一个视频的所有行为聚合，每天增量字段：</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th></tr></thead><tbody><tr><td>user_id</td><td>用户 id</td><td>string</td></tr><tr><td>video_id</td><td>视频 id</td><td>string</td></tr><tr><td>expose_cnt</td><td>曝光次数</td><td>int</td></tr><tr><td>like_cnt</td><td>点赞次数</td><td>int</td></tr></tbody></table><p>视频表：t_video_d</p><p>分区：ds（格式 yyyyMMdd）主键：video_id</p><p>含义：当天全量视频数据字段：</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th><th>枚举</th></tr></thead><tbody><tr><td>video_id</td><td>视频 id</td><td>string</td><td></td></tr><tr><td>video_type</td><td>视频类型</td><td>string</td><td>娱乐、新闻、搞笑</td></tr><tr><td>video_user_id</td><td>视频创建者 user_id</td><td>string</td><td></td></tr><tr><td>video_create_time</td><td>视频创建时间</td><td>bigint</td><td></td></tr></tbody></table><p>​</p><p>作者表：t_video_user_d</p><p>分区：ds（格式 yyyyMMdd）主键：video_user_id</p><p>含义：当天全量视频创建者数据</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th><th>枚举</th></tr></thead><tbody><tr><td>video_user_id</td><td>视频创建者 user_id</td><td>string</td><td></td></tr><tr><td>video_user_name</td><td>名称</td><td>string</td><td></td></tr><tr><td>video_user_type</td><td>视频创建者类型</td><td>string</td><td>娱乐、新闻、搞笑</td></tr></tbody></table><p>需求方需要视频号搞笑类型视频的曝光点赞时长等数据，请提供一张 ads 表。搞笑类型视频定义：视频类型为搞笑或者视频创建者类型为搞笑</p><p>需要产出字段：视频 id，视频创建者 user_id，视频创建者名称、当天曝光次数、当天点赞次数、近 30 天曝光次数、近 30 天点赞次数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_user_video_action_d</span><br><span class="line">(</span><br><span class="line">    user_id    string comment &quot;用户id&quot;,</span><br><span class="line">    video_id   string comment &quot;视频id&quot;,</span><br><span class="line">    expose_cnt <span class="type">int</span> comment &quot;曝光次数&quot;,</span><br><span class="line">    like_cnt   <span class="type">int</span> comment &quot;点赞次数&quot;</span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_video_d;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_video_d</span><br><span class="line">(</span><br><span class="line">    video_id          string comment <span class="string">&#x27;视频id&#x27;</span>,</span><br><span class="line">    video_type        string comment <span class="string">&#x27;视频类型&#x27;</span>,</span><br><span class="line">    video_user_id     string comment <span class="string">&#x27;视频创建者user_id&#x27;</span>,</span><br><span class="line">    video_create_time <span class="type">bigint</span> comment <span class="string">&#x27;视频创建时间&#x27;</span></span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_video_user_d</span><br><span class="line">(</span><br><span class="line">    video_user_id   string comment <span class="string">&#x27;视频创建者user_id&#x27;</span>,</span><br><span class="line">    video_user_name string comment <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">    video_user_type string comment <span class="string">&#x27;视频创建者类型&#x27;</span></span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--假设当天是2022-07-31</span></span><br><span class="line"><span class="keyword">select</span> t1.<span class="operator">*</span>,</span><br><span class="line">       t2.video_user_id,</span><br><span class="line">       t2.video_user_name</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> video_id,</span><br><span class="line">             <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span> <span class="keyword">then</span> expose_cnt <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="comment">--当天曝光次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span> <span class="keyword">then</span> like_cnt <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="comment">-- 当天点赞次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(expose_cnt) <span class="keyword">as</span> sum_expose,<span class="comment">-- 近 30 天曝光次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(like_cnt)<span class="comment">-- 近 30 天点赞次数</span></span><br><span class="line">      <span class="keyword">from</span> t_user_video_action_d</span><br><span class="line">      <span class="keyword">where</span> ds <span class="keyword">between</span> <span class="string">&#x27;2022-07-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2022-07-30&#x27;</span></span><br><span class="line">      <span class="keyword">group</span> <span class="keyword">by</span> video_id) <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">join</span> (<span class="keyword">select</span> d.video_id, d.video_user_id, u.video_user_name</span><br><span class="line">   <span class="keyword">from</span> t_video_d d</span><br><span class="line">   <span class="keyword">join</span> t_video_user_d u <span class="keyword">on</span> d.video_user_id <span class="operator">=</span> u.video_user_id</span><br><span class="line">   <span class="keyword">where</span> (d.video_type <span class="keyword">like</span> <span class="string">&#x27;%搞笑%&#x27;</span> <span class="keyword">or</span> u.video_user_type <span class="keyword">like</span> <span class="string">&#x27;%搞笑%&#x27;</span>)</span><br><span class="line">     <span class="keyword">and</span> d.ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span></span><br><span class="line">     <span class="keyword">and</span> u.ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span>) <span class="keyword">as</span> t2 <span class="keyword">on</span> t1.video_id <span class="operator">=</span> t2.video_id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="小米电商-1"><a href="#小米电商-1" class="headerlink" title="小米电商"></a>小米电商</h3><p>要求：编写SQL能运行，数据正确且符合规范，如遇到自定义函数或不记得的函数可以用XX代替</p><p>1.已知有如下两个表表sale：字段如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> sale_order(</span><br><span class="line">    Order_id <span class="type">bigint</span> comment <span class="string">&#x27;订单ID&#x27;</span>,</span><br><span class="line">    User_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">    Order_status <span class="type">int</span>,</span><br><span class="line">    Create_time string,</span><br><span class="line">    Last_update_time string,</span><br><span class="line">    Product_id <span class="type">bigint</span>,</span><br><span class="line">    Product_num <span class="type">bigint</span> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>用户注册表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    user_id <span class="type">bigint</span> comment<span class="string">&#x27;用户ID，唯一主键&#x27;</span>,</span><br><span class="line">    sex string.</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>问题：用一条SQL生成完整的用户画像表，包含如下字段：</p><p>user_id,  sex,  age,  d7order_num,   d14_order_num，后面两个字段分别为近7天订单数量，近14天订单数量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sale_order(</span><br><span class="line">    order_id <span class="type">bigint</span> comment <span class="string">&#x27;订单ID&#x27;</span>,</span><br><span class="line">    user_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">    order_status <span class="type">int</span> ,</span><br><span class="line">    create_time string,</span><br><span class="line">    last_update_time string,</span><br><span class="line">    product_id <span class="type">bigint</span>,</span><br><span class="line">    product_num <span class="type">bigint</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    user_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID,唯一主键&#x27;</span>,</span><br><span class="line">    sex string,</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> u.user_id,</span><br><span class="line">       s.d7order_num,</span><br><span class="line">       s.d14order_num</span><br><span class="line"><span class="keyword">from</span> user_info u</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> user_id,</span><br><span class="line">                  <span class="built_in">count</span>(if(create_time <span class="operator">&gt;=</span> <span class="string">&#x27;7天前&#x27;</span>  <span class="keyword">and</span> create_time <span class="operator">&lt;=</span> <span class="string">&#x27;今天&#x27;</span>, order_id,<span class="keyword">null</span>)) <span class="keyword">as</span> d7order_num,</span><br><span class="line">                  <span class="built_in">count</span>(if(create_time <span class="operator">&gt;=</span> <span class="string">&#x27;14天前&#x27;</span> <span class="keyword">and</span> create_time <span class="operator">&lt;=</span> <span class="string">&#x27;今天&#x27;</span>, order_id,<span class="keyword">null</span>)) <span class="keyword">as</span> d14order_num</span><br><span class="line">           <span class="keyword">from</span> sale_order</span><br><span class="line">           <span class="keyword">where</span> create_time <span class="operator">&gt;=</span> <span class="string">&#x27;14天前&#x27;</span></span><br><span class="line">           <span class="keyword">group</span> <span class="keyword">by</span> user_id) s <span class="keyword">on</span> u.user_id <span class="operator">=</span> s.user_id;</span><br></pre></td></tr></table></figure><h2 id="join系列"><a href="#join系列" class="headerlink" title="join系列"></a>join系列</h2><p>【区分 inner &#x2F;left &#x2F; right &#x2F; full &#x2F; left semi &#x2F; left anti join 的特点】</p><p>有以下银行信息表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">use interview_db;</span><br><span class="line"><span class="keyword">set</span> hive.exec.mode.local.auto<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> all_users;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> all_users(</span><br><span class="line">    id <span class="type">int</span> comment <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">    name string comment <span class="string">&#x27;用户姓名&#x27;</span>,</span><br><span class="line">    sex string comment <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">    age <span class="type">int</span> comment <span class="string">&#x27;年龄&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;银行用户信息表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> all_users <span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">29</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">21</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">28</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="string">&#x27;田七&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">22</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> black_list;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> black_list(</span><br><span class="line">    user_id <span class="type">int</span> comment <span class="string">&#x27;用户编号&#x27;</span>,</span><br><span class="line">    type string comment <span class="string">&#x27;风控类型&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;银行黑名单信息表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> black_list <span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;诈骗&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;逾期&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;套现&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="left-join"><a href="#left-join" class="headerlink" title="left join"></a>left join</h3><p>使用left join对所有用户，如果也在黑名单中，则标记为YES，否则标记为NO。</p><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">sex</th><th align="left">age</th><th align="left">flag</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">张三</td><td align="left">男</td><td align="left">20</td><td align="left">YES</td></tr><tr><td align="left">2</td><td align="left">李四</td><td align="left">男</td><td align="left">29</td><td align="left">YES</td></tr><tr><td align="left">3</td><td align="left">王五</td><td align="left">男</td><td align="left">21</td><td align="left">YES</td></tr><tr><td align="left">4</td><td align="left">赵六</td><td align="left">女</td><td align="left">28</td><td align="left">NO</td></tr><tr><td align="left">5</td><td align="left">田七</td><td align="left">女</td><td align="left">22</td><td align="left">NO</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span>,</span><br><span class="line">       if(b.user_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;NO&#x27;</span>) flag</span><br><span class="line"><span class="keyword">from</span> all_users a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> black_list b</span><br><span class="line"><span class="keyword">on</span> a.id <span class="operator">=</span> b.user_id;</span><br></pre></td></tr></table></figure><h3 id="right-join"><a href="#right-join" class="headerlink" title="right join"></a>right join</h3><p>对上面的问题，使用right join再做一次。</p><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">sex</th><th align="left">age</th><th align="left">flag</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">张三</td><td align="left">男</td><td align="left">20</td><td align="left">YES</td></tr><tr><td align="left">2</td><td align="left">李四</td><td align="left">男</td><td align="left">29</td><td align="left">YES</td></tr><tr><td align="left">3</td><td align="left">王五</td><td align="left">男</td><td align="left">21</td><td align="left">YES</td></tr><tr><td align="left">4</td><td align="left">赵六</td><td align="left">女</td><td align="left">28</td><td align="left">NO</td></tr><tr><td align="left">5</td><td align="left">田七</td><td align="left">女</td><td align="left">22</td><td align="left">NO</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> b.<span class="operator">*</span>,</span><br><span class="line">       if(a.user_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>, <span class="string">&#x27;YES&#x27;</span>, <span class="string">&#x27;NO&#x27;</span>) flag</span><br><span class="line"><span class="keyword">from</span> black_list a</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> all_users b</span><br><span class="line"><span class="keyword">on</span> a.user_id <span class="operator">=</span> b.id;</span><br></pre></td></tr></table></figure><h3 id="left-semi-join"><a href="#left-semi-join" class="headerlink" title="left semi join"></a>left semi join</h3><p>使用left semi join对所有用户，如果也在黑名单中，则挑选出来。</p><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">sex</th><th align="left">age</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">张三</td><td align="left">男</td><td align="left">20</td></tr><tr><td align="left">2</td><td align="left">李四</td><td align="left">男</td><td align="left">29</td></tr><tr><td align="left">3</td><td align="left">王五</td><td align="left">男</td><td align="left">21</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> all_users a</span><br><span class="line"><span class="keyword">left</span> semi <span class="keyword">join</span> black_list b</span><br><span class="line"><span class="keyword">on</span> a.id <span class="operator">=</span> b.user_id;</span><br></pre></td></tr></table></figure><h3 id="left-anti-join"><a href="#left-anti-join" class="headerlink" title="left anti join"></a>left anti join</h3><p>使用left anti join对所有用户，如果不在黑名单中，则挑选出来。</p><table><thead><tr><th align="left">id</th><th align="left">name</th><th align="left">sex</th><th align="left">age</th></tr></thead><tbody><tr><td align="left">4</td><td align="left">赵六</td><td align="left">女</td><td align="left">28</td></tr><tr><td align="left">5</td><td align="left">田七</td><td align="left">女</td><td align="left">22</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.<span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> all_users a</span><br><span class="line"><span class="keyword">left</span> anti <span class="keyword">join</span> black_list b</span><br><span class="line"><span class="keyword">on</span> a.id <span class="operator">=</span> b.user_id;</span><br></pre></td></tr></table></figure><h3 id="full-join"><a href="#full-join" class="headerlink" title="full join"></a>full join</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--用户的存款金额。</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> deposit;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> deposit (</span><br><span class="line">    user_id <span class="type">int</span> comment <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">    amount <span class="type">int</span> comment <span class="string">&#x27;存款金额&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;用户最新银行存款信息表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> deposit <span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="number">2000</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="number">2900</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="number">2100</span>);</span><br><span class="line"><span class="comment">--用户的负债金额。</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> debt;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> debt (</span><br><span class="line">    user_id <span class="type">int</span> comment <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">    amount <span class="type">int</span> comment <span class="string">&#x27;负债金额&#x27;</span></span><br><span class="line">)comment <span class="string">&#x27;用户最新银行负债信息表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> debt <span class="keyword">values</span></span><br><span class="line">(<span class="number">3</span>,<span class="number">3400</span>),</span><br><span class="line">(<span class="number">4</span>,<span class="number">2800</span>),</span><br><span class="line">(<span class="number">5</span>,<span class="number">2200</span>);</span><br></pre></td></tr></table></figure><p>使用full join，展示用户的存款金额和负债金额。</p><table><thead><tr><th align="left">user_id</th><th align="left">deposit_amount</th><th align="left">debt_amount</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">2000</td><td align="left">0</td></tr><tr><td align="left">2</td><td align="left">2900</td><td align="left">0</td></tr><tr><td align="left">3</td><td align="left">2100</td><td align="left">3400</td></tr><tr><td align="left">4</td><td align="left">0</td><td align="left">2800</td></tr><tr><td align="left">5</td><td align="left">0</td><td align="left">2200</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">coalesce</span>(a.user_id, b.user_id) <span class="keyword">as</span> user_id,</span><br><span class="line">       <span class="built_in">coalesce</span>(a.amount, <span class="number">0</span>)          <span class="keyword">as</span> deposit_amount,</span><br><span class="line">       <span class="built_in">coalesce</span>(b.amount, <span class="number">0</span>)          <span class="keyword">as</span> debt_amount</span><br><span class="line"><span class="keyword">from</span> deposit a</span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span> debt b</span><br><span class="line"><span class="keyword">on</span> a.user_id <span class="operator">=</span> b.user_id;</span><br></pre></td></tr></table></figure><h3 id="字节跳动"><a href="#字节跳动" class="headerlink" title="字节跳动"></a>字节跳动</h3><p>【考察full join】</p><p>1、某个游戏中的元宝分为，付费元宝和免费元宝。玩家购买商城道具时候，可以使用付费元宝也可以使用免费元宝。请使用HIve SQL语句计算出2021-01-01至2021-01-07期间各个角色当日消耗元宝的付费免费比例（付费免费比 &#x3D; 付费元宝消耗量 &#x2F; 免费元宝消耗量）。</p><p>现有表结构如下：</p><table><thead><tr><th>desc</th><th>dm_paid_buy;</th></tr></thead><tbody><tr><td>#dm_paid_buy</td><td>角色使用付费元宝购买商城道具时候记录一条</td></tr></tbody></table><table><thead><tr><th>time</th><th>bigint</th><th>#购买的时间戳</th></tr></thead><tbody><tr><td>server_id</td><td>string</td><td>#服务器ID</td></tr><tr><td>role_id</td><td>int</td><td>#角色ID</td></tr><tr><td>cost</td><td>int</td><td>#购买对应道具消耗的付费元宝数量</td></tr><tr><td>item_id</td><td>int</td><td>#购买对应道具的id</td></tr><tr><td>amount</td><td>int</td><td>#购买对应道具的数量</td></tr><tr><td>p_date</td><td>string</td><td>#登录日期,yyyy-MM-dd</td></tr></tbody></table><table><thead><tr><th>desc</th><th>dm_free_buy;</th></tr></thead><tbody><tr><td>#dm_free_buy</td><td>角色使用免费元宝购买商城道具时候记录一条</td></tr></tbody></table><table><thead><tr><th>time</th><th>bigint</th><th>#购买的时间戳</th></tr></thead><tbody><tr><td>server_id</td><td>string</td><td>#服务器ID</td></tr><tr><td>role_id</td><td>int</td><td>#角色ID</td></tr><tr><td>cost</td><td>int</td><td>#购买对应道具消耗的免费元宝数量</td></tr><tr><td>item_id</td><td>int</td><td>#购买对应道具的id</td></tr><tr><td>amount</td><td>int</td><td>#购买对应道具的数量</td></tr><tr><td>p_date</td><td>string</td><td>#登录日期,yyyy-MM-dd</td></tr></tbody></table><p>示例：</p><p>结果输出</p><table><thead><tr><th>p_date</th><th>server_id</th><th>role_id</th><th>付费免费比</th></tr></thead><tbody><tr><td>2021-01-01</td><td>123</td><td>10098</td><td>0</td></tr><tr><td>2021-01-01</td><td>120</td><td>10098</td><td>0.4</td></tr><tr><td>2021-01-02</td><td>123</td><td>10098</td><td>0.2</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">use interview_db;</span><br><span class="line"><span class="keyword">set</span> hive.exec.mode.local.auto<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> dm_paid_buy</span><br><span class="line">(</span><br><span class="line">    `<span class="type">time</span>`    <span class="type">bigint</span> comment <span class="string">&#x27;#购买的时间戳&#x27;</span>,</span><br><span class="line">    server_id string comment <span class="string">&#x27;#服务器ID&#x27;</span>,</span><br><span class="line">    role_id   <span class="type">int</span> comment <span class="string">&#x27;#角色ID&#x27;</span>,</span><br><span class="line">    cost      <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具消耗的付费元宝数量&#x27;</span>,</span><br><span class="line">    item_id   <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具的id&#x27;</span>,</span><br><span class="line">    amount    <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具的数量&#x27;</span>,</span><br><span class="line">    p_date    string comment <span class="string">&#x27;#登录日期, yyyy-MM-dd&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;角色使用付费元宝购买商城道具时候记录一条&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> dm_paid_buy <span class="keyword">values</span></span><br><span class="line">(<span class="number">1234567</span>,<span class="number">120</span>,<span class="number">10098</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">120</span>,<span class="number">10098</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;2021-01-02&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> dm_paid_buy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> dm_free_buy</span><br><span class="line">(</span><br><span class="line">    `<span class="type">time</span>`    <span class="type">bigint</span> comment <span class="string">&#x27;#购买的时间戳&#x27;</span>,</span><br><span class="line">    server_id string comment <span class="string">&#x27;#服务器ID&#x27;</span>,</span><br><span class="line">    role_id   <span class="type">int</span> comment <span class="string">&#x27;#角色ID&#x27;</span>,</span><br><span class="line">    cost      <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具消耗的免费元宝数量&#x27;</span>,</span><br><span class="line">    item_id   <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具的id&#x27;</span>,</span><br><span class="line">    amount    <span class="type">int</span> comment <span class="string">&#x27;#购买对应道具的数量&#x27;</span>,</span><br><span class="line">    p_date    string comment <span class="string">&#x27;#登录日期, yyyy-MM-dd&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;角色使用免费元宝购买商城道具时候记录一条&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> dm_free_buy <span class="keyword">values</span></span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">120</span>,<span class="number">10098</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">120</span>,<span class="number">10098</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="number">1234567</span>,<span class="number">123</span>,<span class="number">10098</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;2021-01-02&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">coalesce</span>(a.p_date, b.p_date)         p_date,</span><br><span class="line">       <span class="built_in">coalesce</span>(a.server_id, b.server_id)   server_id,</span><br><span class="line">       <span class="built_in">coalesce</span>(a.role_id, b.role_id)       role_id,</span><br><span class="line">       round(nvl(a.cost, <span class="number">0</span>) <span class="operator">/</span> b.cost, <span class="number">3</span>) <span class="keyword">as</span> rate</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> p_date, server_id, role_id, <span class="built_in">sum</span>(cost) cost</span><br><span class="line">      <span class="keyword">from</span> dm_paid_buy</span><br><span class="line">      <span class="keyword">where</span> p_date <span class="operator">&gt;=</span> <span class="string">&#x27;2021-01-01&#x27;</span></span><br><span class="line">        <span class="keyword">and</span> p_date <span class="operator">&lt;=</span> <span class="string">&#x27;2021-01-07&#x27;</span></span><br><span class="line">      <span class="keyword">group</span> <span class="keyword">by</span> p_date, server_id, role_id) a</span><br><span class="line"><span class="keyword">full</span> <span class="keyword">join</span> (<span class="keyword">select</span> p_date, server_id, role_id, <span class="built_in">sum</span>(cost) cost</span><br><span class="line">      <span class="keyword">from</span> dm_free_buy</span><br><span class="line">      <span class="keyword">where</span> p_date <span class="operator">&gt;=</span> <span class="string">&#x27;2021-01-01&#x27;</span></span><br><span class="line">        <span class="keyword">and</span> p_date <span class="operator">&lt;=</span> <span class="string">&#x27;2021-01-07&#x27;</span></span><br><span class="line">      <span class="keyword">group</span> <span class="keyword">by</span> p_date, server_id, role_id) b</span><br><span class="line">    <span class="keyword">on</span> a.p_date<span class="operator">=</span>b.p_date <span class="keyword">and</span> a.server_id<span class="operator">=</span>b.server_id <span class="keyword">and</span> a.role_id<span class="operator">=</span>b.role_id;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="join优化"><a href="#join优化" class="headerlink" title="join优化"></a>join优化</h2><h3 id="交通银行-1"><a href="#交通银行-1" class="headerlink" title="交通银行"></a>交通银行</h3><p>数据模型如下：</p><p>表T1的数据结构：</p><table><thead><tr><th>字段英文名</th><th>字段中文名</th><th>类型</th><th>主键标志</th><th>注释</th></tr></thead><tbody><tr><td>Rec_no</td><td>记录号</td><td>CHAR(3)</td><td>Y</td><td></td></tr><tr><td>Ci_no</td><td>客户号</td><td>CHAR(6)</td><td>N</td><td></td></tr><tr><td>Cust_Type</td><td>客户类型</td><td>CHAR(2)</td><td>N</td><td></td></tr><tr><td>Cre_dt</td><td>开户日期</td><td>Date</td><td>N</td><td></td></tr><tr><td>Cus_sts</td><td>客户状态</td><td>Char(1)</td><td>N</td><td>Y-正常 N-无效</td></tr></tbody></table><p>表T1的数据</p><table><thead><tr><th>Rec_no</th><th>ci_no</th><th>cust_type</th><th>cre_dt</th><th>cus_sts</th></tr></thead><tbody><tr><td>123</td><td>111111</td><td>01</td><td>2010-11-15</td><td>Y</td></tr><tr><td>234</td><td>222222</td><td>02</td><td>2011-09-01</td><td>Y</td></tr><tr><td>345</td><td>333333</td><td>02</td><td>2012-01-09</td><td>Y</td></tr><tr><td>456</td><td>444444</td><td>01</td><td>2012-09-08</td><td>Y</td></tr></tbody></table><p>表T2的数据结构：</p><table><thead><tr><th>字段英文名</th><th>字段中文名</th><th>类型</th><th>主键标志</th><th>注释</th></tr></thead><tbody><tr><td>Ci_no</td><td>客户号</td><td>CHAR(6)</td><td>Y</td><td></td></tr><tr><td>AC_no</td><td>客户账号</td><td>CHAR(9)</td><td>Y</td><td></td></tr><tr><td>Bal</td><td>账号余额</td><td>DECIMAL(15，2)</td><td>N</td><td></td></tr></tbody></table><p>表T2的数据：</p><table><thead><tr><th>Ci_no char(6)</th><th>Ac_no char(9)</th><th>Bal decimal(15,2)</th></tr></thead><tbody><tr><td>222222</td><td>123456888</td><td>1000.28</td></tr><tr><td>222222</td><td>123456999</td><td>886</td></tr><tr><td>333333</td><td>123454321</td><td>5000</td></tr></tbody></table><p>请编写sql统计在9月份开户且账户余额不为0的有效客户数。（8分）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T1</span><br><span class="line">(</span><br><span class="line">    rec_no    <span class="type">int</span>,</span><br><span class="line">    ci_no     <span class="type">int</span>,</span><br><span class="line">    cust_type string,</span><br><span class="line">    cre_dt    string,</span><br><span class="line">    cus_sts   string</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> T1 <span class="keyword">values</span></span><br><span class="line">(<span class="number">123</span>,<span class="number">111111</span>,<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;2010-11-15&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>),</span><br><span class="line">(<span class="number">234</span>,<span class="number">222222</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;2011-09-01&#x27;</span>,<span class="string">&#x27;N&#x27;</span>),</span><br><span class="line">(<span class="number">345</span>,<span class="number">333333</span>,<span class="string">&#x27;02&#x27;</span>,<span class="string">&#x27;2012-01-09&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>),</span><br><span class="line">(<span class="number">456</span>,<span class="number">444444</span>,<span class="string">&#x27;01&#x27;</span>,<span class="string">&#x27;2012-09-08&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> T1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T2</span><br><span class="line">(</span><br><span class="line">    ci_no     <span class="type">int</span>,</span><br><span class="line">    ac_no string,</span><br><span class="line">    bal    <span class="type">decimal</span>(<span class="number">7</span>,<span class="number">2</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> T2 <span class="keyword">values</span></span><br><span class="line">(<span class="number">222222</span>,<span class="string">&#x27;123456789&#x27;</span>,<span class="number">1000.28</span>),</span><br><span class="line">(<span class="number">333333</span>,<span class="string">&#x27;123454321&#x27;</span>,<span class="number">5000.00</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> T2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 传统的写法。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> t1.ci_no) <span class="keyword">as</span> cnt</span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">join</span> t2 <span class="keyword">on</span> t1.ci_no<span class="operator">=</span>t2.ci_no</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">month</span>(t1.cre_dt)<span class="operator">=</span><span class="number">9</span></span><br><span class="line"><span class="keyword">and</span> t1.cus_sts<span class="operator">=</span><span class="string">&#x27;Y&#x27;</span></span><br><span class="line"><span class="keyword">and</span> bal<span class="operator">&gt;</span><span class="number">0</span>;</span><br><span class="line"><span class="comment">-- 方案2</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(t1.ci_no) <span class="keyword">as</span> cnt</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> <span class="keyword">month</span>(cre_dt)<span class="operator">=</span><span class="number">9</span> <span class="keyword">and</span> cus_sts<span class="operator">=</span><span class="string">&#x27;Y&#x27;</span>) t1</span><br><span class="line"><span class="keyword">join</span> (<span class="keyword">select</span> ci_no <span class="keyword">from</span> t2 <span class="keyword">group</span> <span class="keyword">by</span> ci_no <span class="keyword">having</span> <span class="built_in">sum</span>(bal)<span class="operator">&gt;</span><span class="number">0</span>) t2</span><br><span class="line"><span class="keyword">on</span> t1.ci_no<span class="operator">=</span>t2.ci_no;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL强化&quot;&gt;&lt;a href=&quot;#SQL强化&quot; class=&quot;headerlink&quot; title=&quot;SQL强化&quot;&gt;&lt;/a&gt;SQL强化&lt;/h1&gt;&lt;h2 id=&quot;SQL执行顺序&quot;&gt;&lt;a href=&quot;#SQL执行顺序&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="SQL强化2" scheme="http://example.com/tags/SQL%E5%BC%BA%E5%8C%962/"/>
    
  </entry>
  
  <entry>
    <title>sql加强1</title>
    <link href="http://example.com/2022/10/07/sql%E5%8A%A0%E5%BC%BA1/"/>
    <id>http://example.com/2022/10/07/sql%E5%8A%A0%E5%BC%BA1/</id>
    <published>2022-10-07T05:10:29.000Z</published>
    <updated>2022-10-07T05:11:05.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL强化"><a href="#SQL强化" class="headerlink" title="SQL强化"></a>SQL强化</h1><h2 id="SQL执行顺序"><a href="#SQL执行顺序" class="headerlink" title="SQL执行顺序"></a>SQL执行顺序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--举例：</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">       a.sex,</span><br><span class="line">       b.city,</span><br><span class="line">       <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt,</span><br><span class="line">       <span class="built_in">sum</span>(salary) <span class="keyword">as</span> sum1</span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b <span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line"><span class="keyword">having</span> cnt<span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line">limit <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--或者是</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span></span><br><span class="line">       a.sex,</span><br><span class="line">       b.city,</span><br><span class="line">       a.age</span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b <span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.sex,b.city</span><br><span class="line">limit <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的SQL语句的执行顺序是: from (去加载table1 和 table2这2个表 )  -&gt; join -&gt; on -&gt; where  -&gt; group by-&gt;select 后面的聚合函数count,sum  -&gt; having -&gt; distinct -&gt; order by -&gt; limit</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--on 和where的先后顺序讨论</span></span><br><span class="line"><span class="comment">--下面用left join 各得到结果，结果不一样。</span></span><br><span class="line"><span class="comment">--下面可知，先执行on，再执行where</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"><span class="comment">--下面的条数可能会比上面多。</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">and</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"></span><br><span class="line"><span class="comment">--下面用inner join 各得到结果，结果是一样的</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">where</span> a.name<span class="operator">=</span>b.name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> table1 a</span><br><span class="line"><span class="keyword">join</span> table2 b </span><br><span class="line"><span class="keyword">on</span> a.id<span class="operator">=</span>b.id</span><br><span class="line"><span class="keyword">and</span> a.name<span class="operator">=</span>b.name;</span><br></pre></td></tr></table></figure><blockquote><p>hivesql与sparkSQL的区别：</p><ul><li><p>子查询hive必须起别名，SparkSQL可以不用起别名</p></li><li><p>group by xx，yy，hive不用能用别名，spark可以用别名</p></li><li><p>hive不支持临时视图和缓存表，SparkSQL都支持</p><ul><li>&#96;&#96;&#96;sql<br>–用SparkSQL的临时视图<br>use interview_db;<br>create or replace temporary view t_view1 as<br>select *,<br>if(month&#x3D;1,amount,0) as a1,<br>if(month&#x3D;2,amount,0) as a2,<br>if(month&#x3D;3,amount,0) as a3,<br>if(month&#x3D;4,amount,0) as a4<br>from table2;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>select year,<br>  sum(a1) as m1,<br>  sum(a2) as m2,<br>  sum(a3) as m3,<br>  sum(a4) as m4<br>from t_view1<br>group by year;</p><p>–使用SparkSQL的缓存表<br>cache table cached1 as<br>select *,<br>  if(month&#x3D;1,amount,0) as a1,<br>  if(month&#x3D;2,amount,0) as a2,<br>  if(month&#x3D;3,amount,0) as a3,<br>  if(month&#x3D;4,amount,0) as a4<br>from table2;</p><p>select * from cached1;<br>select year,<br>  sum(a1) as m1,<br>  sum(a2) as m2,<br>  sum(a3) as m3,<br>  sum(a4) as m4<br>from cached1<br>group by year;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* 爆炸函数，hive不支持explode与普通字段联合使用，需要用侧视图分开，SparkSQL支持联合使用</span><br><span class="line"></span><br><span class="line">  * ```sql</span><br><span class="line">    use interview_db;</span><br><span class="line">    select qq,game1 from tableB lateral view explode(split(game,&#x27;_&#x27;)) view1 as game1 ;</span><br><span class="line">    --spark还支持这样，但是hive不支持：</span><br><span class="line">    select qq,explode(split(game,&#x27;_&#x27;)) game1 from tableB ;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* sparkSQL支持300多种函数，hiveSQL支持200多种函数。sparkSQL函数比hiveSQL要多。</span><br><span class="line"></span><br><span class="line">  * 比如SparkSQL有sequence函数，hive就没有</span><br></pre></td></tr></table></figure></blockquote><ul><li><p>先配置环境</p></li><li><p>在pycharm或datagrip或idea中配置hive数据源。也可以配置一个sparkSQL数据源，来加快速度。</p></li><li><p>如果配置hive数据源：</p><ul><li><p>需要提前启动hdfs和yarn，hive的metastore，hive的hiveserver2</p></li><li><p>&#96;&#96;&#96;shell<br>#启动hdfs和yarn<br>start-all.sh  </p><h1 id="hive的metastore"><a href="#hive的metastore" class="headerlink" title="hive的metastore"></a>hive的metastore</h1><p>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service metastore  2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-metastore.log &amp;</p><p>#hive的hiveserver2<br>#hiveserver2开启后，等过2分钟后才能生效。<br>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service hiveserver2 2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-hiveserver2.log &amp;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  ![1659774353515](E:\自研项目\sql资料\3\images\1659774353515.png)</span><br><span class="line"></span><br><span class="line">* 如果遇到下面的问题</span><br><span class="line"></span><br><span class="line">* ![1659749246129](E:\自研项目\sql资料\3\images\1659749246129.png)</span><br><span class="line"></span><br><span class="line">* 解决办法</span><br><span class="line"></span><br><span class="line">  * ```</span><br><span class="line">    hive/conf/hive-env.sh中加入</span><br><span class="line">    export HADOOP_CLIENT_OPTS=&quot; -Xmx512m&quot;</span><br><span class="line">    export HADOOP_HEAPSIZE=1024</span><br><span class="line">    改完重启hiveserver2</span><br></pre></td></tr></table></figure></li></ul></li><li><p>如果配置SparkSQL数据源</p><ul><li><p>需要提前启动hdfs，hive的metastore，Spark的Thriftserver服务。</p></li><li><p>&#96;&#96;&#96;shell<br>#启动hdfs和yarn<br>start-all.sh  </p><h1 id="hive的metastore-1"><a href="#hive的metastore-1" class="headerlink" title="hive的metastore"></a>hive的metastore</h1><p>nohup &#x2F;export&#x2F;server&#x2F;hive&#x2F;bin&#x2F;hive –service metastore  2&gt;&amp;1 &gt; &#x2F;tmp&#x2F;hive-metastore.log &amp;</p><p>#Spark的Thriftserver服务<br>&#x2F;export&#x2F;server&#x2F;spark&#x2F;sbin&#x2F;start-thriftserver.sh <br>  –hiveconf hive.server2.thrift.port&#x3D;10001 <br>  –hiveconf hive.server2.thrift.bind.host&#x3D;node1 <br>  –master local[*]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  * 下面是spark3集成hive3需要的jar包，如果是spark2集成hive2，则jar包不一样。![1659774447157](E:\自研项目\sql资料\3\images\1659774447157.png)</span><br><span class="line"></span><br><span class="line">  * ![1659774468920](E:\自研项目\sql资料\3\images\1659774468920.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">show databases ;</span><br><span class="line">create database if not exists test_sql;</span><br><span class="line">use test_sql;</span><br><span class="line">-- 一些语句会走 MapReduce，所以慢。 可以开启本地化执行的优化。</span><br><span class="line">set hive.exec.mode.local.auto=true;-- (默认为false)</span><br><span class="line">--第1题：访问量统计</span><br><span class="line">CREATE TABLE test_sql.test1 (</span><br><span class="line">userId string,</span><br><span class="line">visitDate string,</span><br><span class="line">visitCount INT )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &quot;\t&quot;;</span><br><span class="line"></span><br><span class="line">INSERT overwrite TABLE test_sql.test1</span><br><span class="line">VALUES</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/1/21&#x27;, 5 ),</span><br><span class="line">    ( &#x27;u02&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u03&#x27;, &#x27;2017/1/22&#x27;, 8 ),</span><br><span class="line">    ( &#x27;u04&#x27;, &#x27;2017/1/20&#x27;, 3 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/2/21&#x27;, 8 ),</span><br><span class="line">    ( &#x27;u02&#x27;, &#x27;2017/1/23&#x27;, 6 ),</span><br><span class="line">    ( &#x27;u01&#x27;, &#x27;2017/2/22&#x27;, 4 );</span><br><span class="line"></span><br><span class="line">select *,</span><br><span class="line">       sum(sum1) over(partition by userid order by month1 /*rows between unbounded preceding and current row*/ ) as `累积`</span><br><span class="line"> from</span><br><span class="line">(select userid,</span><br><span class="line">       date_format(replace(visitdate,&#x27;/&#x27;,&#x27;-&#x27;),&#x27;yyyy-MM&#x27;) as month1,</span><br><span class="line">       sum(visitcount) sum1</span><br><span class="line">from test_sql.test1</span><br><span class="line">group by userid,</span><br><span class="line">         date_format(replace(visitdate,&#x27;/&#x27;,&#x27;-&#x27;),&#x27;yyyy-MM&#x27;)) as t;</span><br><span class="line"></span><br><span class="line">-- 第2题：电商场景TopK统计</span><br><span class="line">CREATE TABLE test_sql.test2 (</span><br><span class="line"> user_id string,</span><br><span class="line"> shop string )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &#x27;\t&#x27;;</span><br><span class="line">INSERT INTO TABLE test_sql.test2 VALUES</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u3&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u4&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u4&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u6&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;c&#x27; ),</span><br><span class="line">( &#x27;u1&#x27;, &#x27;b&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u2&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u3&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; ),</span><br><span class="line">( &#x27;u5&#x27;, &#x27;a&#x27; );</span><br><span class="line">--（1）每个店铺的UV（访客数）</span><br><span class="line">-- UV和PV</span><br><span class="line">-- PV是访问当前网站所有的次数</span><br><span class="line">-- UV是访问当前网站的客户数(需要去重)</span><br><span class="line">--(2)每个店铺访问次数top3的访客信息。输出店铺名称、访客id、访问次数</span><br><span class="line">select shop,</span><br><span class="line">       count(distinct user_id) as uv</span><br><span class="line">from test_sql.test2 group by shop ;</span><br><span class="line">--上面的拆解来看，等价于</span><br><span class="line">--distinct后可以接多个字段，表示联合去重</span><br><span class="line">select shop,</span><br><span class="line">       count(user_id) as uv</span><br><span class="line">from</span><br><span class="line">(select distinct shop,</span><br><span class="line">        user_id</span><br><span class="line">from test_sql.test2  ) as t</span><br><span class="line">group by shop ;</span><br><span class="line">--也等价于</span><br><span class="line">select shop,</span><br><span class="line">       count(user_id) as uv</span><br><span class="line">from</span><br><span class="line">(select shop,</span><br><span class="line">        user_id</span><br><span class="line">from test_sql.test2 group by shop, user_id) as t</span><br><span class="line">group by shop ;</span><br><span class="line"></span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by shop order by cnt desc) as rn</span><br><span class="line">from</span><br><span class="line">(select shop,user_id,count(1) as cnt from test_sql.test2 group by  shop,user_id ) as t) t2</span><br><span class="line">where t2.rn&lt;=3;</span><br><span class="line"></span><br><span class="line">-- 第3题：订单量统计</span><br><span class="line">CREATE TABLE test_sql.test3 (</span><br><span class="line">dt string,</span><br><span class="line">order_id string,</span><br><span class="line">user_id string,</span><br><span class="line">amount DECIMAL ( 10, 2 ) )</span><br><span class="line">ROW format delimited FIELDS TERMINATED BY &#x27;\t&#x27;;</span><br><span class="line"></span><br><span class="line">INSERT overwrite TABLE test_sql.test3 VALUES</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;10029028&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;10029029&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-01-01&#x27;,&#x27;100290288&#x27;,&#x27;1000003252&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;10029088&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;100290281&#x27;,&#x27;1000003251&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-02-02&#x27;,&#x27;100290282&#x27;,&#x27;1000003253&#x27;,33.57),</span><br><span class="line"> (&#x27;2017-11-02&#x27;,&#x27;10290282&#x27;,&#x27;100003253&#x27;,234),</span><br><span class="line"> (&#x27;2018-11-02&#x27;,&#x27;10290284&#x27;,&#x27;100003243&#x27;,234);</span><br><span class="line"></span><br><span class="line">-- (1)给出 2017年每个月的订单数、用户数、总成交金额。</span><br><span class="line">-- (2)给出2017年11月的新客数(指在11月才有第一笔订单)</span><br><span class="line">select date_format(dt,&#x27;yyyy-MM&#x27;) as month1,</span><br><span class="line">       count(distinct order_id) as cnt1,</span><br><span class="line">       count(distinct user_id) as cnt2,</span><br><span class="line">       sum(amount) as amt</span><br><span class="line">  from test_sql.test3</span><br><span class="line">  where year(dt)=2017</span><br><span class="line">group by date_format(dt,&#x27;yyyy-MM&#x27;);</span><br><span class="line"></span><br><span class="line">select count(user_id) cnt from</span><br><span class="line">(select user_id,</span><br><span class="line">       min(date_format(dt,&#x27;yyyy-MM&#x27;)) min_month</span><br><span class="line">from test3 group by user_id) as t where min_month=&#x27;2017-11&#x27;;</span><br><span class="line"></span><br><span class="line">--统计每个月的新客户数</span><br><span class="line">select min_month,</span><br><span class="line">       count(user_id) cnt</span><br><span class="line">from (select user_id,</span><br><span class="line">             min(date_format(dt, &#x27;yyyy-MM&#x27;)) min_month</span><br><span class="line">      from test3</span><br><span class="line">      group by user_id) as t</span><br><span class="line">group by min_month;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 第4题：大数据排序统计</span><br><span class="line">CREATE TABLE test_sql.test4user</span><br><span class="line">(user_id string,name string,age int);</span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.test4log</span><br><span class="line">(user_id string,url string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test4user VALUES(&#x27;001&#x27;,&#x27;u1&#x27;,10),</span><br><span class="line">(&#x27;002&#x27;,&#x27;u2&#x27;,15),</span><br><span class="line">(&#x27;003&#x27;,&#x27;u3&#x27;,15),</span><br><span class="line">(&#x27;004&#x27;,&#x27;u4&#x27;,20),</span><br><span class="line">(&#x27;005&#x27;,&#x27;u5&#x27;,25),</span><br><span class="line">(&#x27;006&#x27;,&#x27;u6&#x27;,35),</span><br><span class="line">(&#x27;007&#x27;,&#x27;u7&#x27;,40),</span><br><span class="line">(&#x27;008&#x27;,&#x27;u8&#x27;,45),</span><br><span class="line">(&#x27;009&#x27;,&#x27;u9&#x27;,50),</span><br><span class="line">(&#x27;0010&#x27;,&#x27;u10&#x27;,65);</span><br><span class="line">INSERT INTO TABLE test_sql.test4log VALUES(&#x27;001&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;002&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;003&#x27;,&#x27;url2&#x27;),</span><br><span class="line">(&#x27;004&#x27;,&#x27;url3&#x27;),</span><br><span class="line">(&#x27;005&#x27;,&#x27;url3&#x27;),</span><br><span class="line">(&#x27;006&#x27;,&#x27;url1&#x27;),</span><br><span class="line">(&#x27;007&#x27;,&#x27;url5&#x27;),</span><br><span class="line">(&#x27;008&#x27;,&#x27;url7&#x27;),</span><br><span class="line">(&#x27;009&#x27;,&#x27;url5&#x27;),</span><br><span class="line">(&#x27;0010&#x27;,&#x27;url1&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">select * from test_sql.test4user ;</span><br><span class="line">select * from test_sql.test4log ;</span><br><span class="line"></span><br><span class="line">--有一个5000万的用户文件(user_id，name，age)，</span><br><span class="line">-- 一个2亿记录的用户看电影的记录文件(user_id，url)，根据年龄段观看电影的次数进行排序？</span><br><span class="line">--取整函数有 round，floor，ceil</span><br><span class="line">select *,</span><br><span class="line">       round(x,0) as r,--四舍五入</span><br><span class="line">       floor(x) as f,--向下取整</span><br><span class="line">       ceil(x) as c--向上取整</span><br><span class="line">  from</span><br><span class="line">(select 15/10 as x union all</span><br><span class="line">select 18/10 as x union all</span><br><span class="line">select 24/10 as x union all</span><br><span class="line">select 27/10 as x ) as t;</span><br><span class="line"></span><br><span class="line">select type,</span><br><span class="line">       sum(cnt) as sum1</span><br><span class="line">from</span><br><span class="line">(select *,</span><br><span class="line">       concat(floor(age/10)*10,&#x27;-&#x27;,floor(age/10)*10+10) as type</span><br><span class="line">from test_sql.test4user as a</span><br><span class="line">-- join前最好提前减小数据量</span><br><span class="line">join (select user_id,count(url) as cnt from test_sql.test4log group by user_id) as b</span><br><span class="line">on a.user_id=b.user_id) as t</span><br><span class="line">group by type</span><br><span class="line">order by sum(cnt) desc;</span><br><span class="line"></span><br><span class="line">-- 第5题：活跃用户统计</span><br><span class="line">CREATE TABLE test5(</span><br><span class="line">dt string,</span><br><span class="line">user_id string,</span><br><span class="line">age int)</span><br><span class="line">ROW format delimited fields terminated BY &#x27;,&#x27;;</span><br><span class="line">INSERT overwrite TABLE test_sql.test5 VALUES (&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_3&#x27;,39),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_3&#x27;,39),</span><br><span class="line">(&#x27;2019-02-11&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-12&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-13&#x27;,&#x27;test_1&#x27;,23),</span><br><span class="line">(&#x27;2019-02-15&#x27;,&#x27;test_2&#x27;,19),</span><br><span class="line">(&#x27;2019-02-16&#x27;,&#x27;test_2&#x27;,19);</span><br><span class="line">select * from test_sql.test5 order by dt,user_id;</span><br><span class="line">--有日志如下，请写出代码求得所有用户和活跃用户的总数及平均年龄。（活跃用户指连续两天都有访问记录的用户）</span><br><span class="line">-- type     总数   平均年龄</span><br><span class="line">-- &#x27;所有用户&#x27;  3    27</span><br><span class="line">-- &#x27;活跃用户&#x27;  1    19</span><br><span class="line">with t1 as (select distinct dt, user_id,age from test_sql.test5),</span><br><span class="line">     t2 as (select *,row_number() over (partition by user_id order by dt) as rn from t1 ),</span><br><span class="line">     t3 as (select *,date_sub(dt,rn) as dt2 from t2),</span><br><span class="line">     t4 as (select dt2,user_id,age,count(1) cnt from t3 group by dt2,user_id,age),</span><br><span class="line">     t5 as (select * from t4 where cnt&gt;=2),</span><br><span class="line">     t6 as (select distinct user_id,age from t5)</span><br><span class="line">select &#x27;所有用户&#x27; as type, count(user_id) cnt,avg(age) as avg_age</span><br><span class="line">from (select distinct user_id,age from test_sql.test5) t union all</span><br><span class="line">select &#x27;活跃用户&#x27; as type, count(user_id) cnt,avg(age) as avg_age from t6;</span><br><span class="line"></span><br><span class="line">-- 用思路2来分析连续2天登录</span><br><span class="line">with t1 as (select distinct dt, user_id from test_sql.test5),</span><br><span class="line">     t2 as (select *,</span><br><span class="line">                   date_add(dt,1) as dt2,</span><br><span class="line">                   lead(dt,1)over(partition by user_id order by dt) as dt3</span><br><span class="line">              from t1)</span><br><span class="line">select count(distinct user_id) from t2 where dt2=dt3;</span><br><span class="line"></span><br><span class="line">-- 第6题：电商购买金额统计实战</span><br><span class="line">CREATE TABLE test_sql.test6 (</span><br><span class="line">userid string,</span><br><span class="line">money decimal(10,2),</span><br><span class="line">paymenttime string,</span><br><span class="line">orderid string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test6 VALUES(&#x27;001&#x27;,100,&#x27;2017-10-01&#x27;,&#x27;123&#x27;),</span><br><span class="line">(&#x27;001&#x27;,200,&#x27;2017-10-02&#x27;,&#x27;124&#x27;),</span><br><span class="line">(&#x27;002&#x27;,500,&#x27;2017-10-01&#x27;,&#x27;125&#x27;),</span><br><span class="line">(&#x27;001&#x27;,100,&#x27;2017-11-01&#x27;,&#x27;126&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test6 order by userid,paymenttime;</span><br><span class="line">--请用sql写出所有用户中在今年10月份第一次购买商品的金额，</span><br><span class="line">select userid,paymenttime,money</span><br><span class="line">from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by userid order by paymenttime) as rn</span><br><span class="line">       from test_sql.test6 where date_format(paymenttime,&#x27;yyyy-MM&#x27;)=&#x27;2017-10&#x27; ) as t</span><br><span class="line">where t.rn=1</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">-- 第7题：教育领域SQL实战</span><br><span class="line">CREATE TABLE test_sql.book(book_id string,</span><br><span class="line">`SORT` string,</span><br><span class="line">book_name string,</span><br><span class="line"> writer string,</span><br><span class="line"> OUTPUT string,</span><br><span class="line"> price decimal(10,2));</span><br><span class="line">INSERT INTO TABLE test_sql.book VALUES</span><br><span class="line">(&#x27;001&#x27;,&#x27;TP391&#x27;,&#x27;信息处理&#x27;,&#x27;author1&#x27;,&#x27;机械工业出版社&#x27;,&#x27;20&#x27;),</span><br><span class="line">(&#x27;002&#x27;,&#x27;TP392&#x27;,&#x27;数据库&#x27;,&#x27;author12&#x27;,&#x27;科学出版社&#x27;,&#x27;15&#x27;),</span><br><span class="line">(&#x27;003&#x27;,&#x27;TP393&#x27;,&#x27;计算机网络&#x27;,&#x27;author3&#x27;,&#x27;机械工业出版社&#x27;,&#x27;29&#x27;),</span><br><span class="line">(&#x27;004&#x27;,&#x27;TP399&#x27;,&#x27;微机原理&#x27;,&#x27;author4&#x27;,&#x27;科学出版社&#x27;,&#x27;39&#x27;),</span><br><span class="line">(&#x27;005&#x27;,&#x27;C931&#x27;,&#x27;管理信息系统&#x27;,&#x27;author5&#x27;,&#x27;机械工业出版社&#x27;,&#x27;40&#x27;),</span><br><span class="line">(&#x27;006&#x27;,&#x27;C932&#x27;,&#x27;运筹学&#x27;,&#x27;author6&#x27;,&#x27;科学出版社&#x27;,&#x27;55&#x27;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.reader (reader_id string,</span><br><span class="line">company string,</span><br><span class="line">name string,</span><br><span class="line">sex string,</span><br><span class="line">grade string,</span><br><span class="line">addr string);</span><br><span class="line">INSERT INTO TABLE test_sql.reader VALUES</span><br><span class="line">(&#x27;0001&#x27;,&#x27;阿里巴巴&#x27;,&#x27;jack&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr1&#x27;),</span><br><span class="line">(&#x27;0002&#x27;,&#x27;百度&#x27;,&#x27;robin&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr2&#x27;),</span><br><span class="line">(&#x27;0003&#x27;,&#x27;腾讯&#x27;,&#x27;tony&#x27;,&#x27;男&#x27;,&#x27;vp&#x27;,&#x27;addr3&#x27;),</span><br><span class="line">(&#x27;0004&#x27;,&#x27;京东&#x27;,&#x27;jasper&#x27;,&#x27;男&#x27;,&#x27;cfo&#x27;,&#x27;addr4&#x27;),</span><br><span class="line">(&#x27;0005&#x27;,&#x27;网易&#x27;,&#x27;zhangsan&#x27;,&#x27;女&#x27;,&#x27;ceo&#x27;,&#x27;addr5&#x27;),</span><br><span class="line">(&#x27;0006&#x27;,&#x27;搜狐&#x27;,&#x27;lisi&#x27;,&#x27;女&#x27;,&#x27;ceo&#x27;,&#x27;addr6&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE TABLE test_sql.borrow_log(reader_id string,</span><br><span class="line">book_id string,</span><br><span class="line">borrow_date string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.borrow_log VALUES (&#x27;0001&#x27;,&#x27;002&#x27;,&#x27;2019-10-14&#x27;),</span><br><span class="line">(&#x27;0002&#x27;,&#x27;001&#x27;,&#x27;2019-10-13&#x27;),</span><br><span class="line">(&#x27;0003&#x27;,&#x27;005&#x27;,&#x27;2019-09-14&#x27;),</span><br><span class="line">(&#x27;0004&#x27;,&#x27;006&#x27;,&#x27;2019-08-15&#x27;),</span><br><span class="line">(&#x27;0005&#x27;,&#x27;003&#x27;,&#x27;2019-10-10&#x27;),</span><br><span class="line">(&#x27;0006&#x27;,&#x27;004&#x27;,&#x27;2019-17-13&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.book;</span><br><span class="line">select * from test_sql.reader;</span><br><span class="line">select * from test_sql.borrow_log;</span><br><span class="line"></span><br><span class="line">--（8）考虑到数据安全的需要，需定时将“借阅记录”中数据进行备份，请使用一条SQL语句，</span><br><span class="line">-- 在备份用户bak下创建与“借阅记录”表结构完全一致的数据表BORROW_LOG_BAK.</span><br><span class="line">-- 井且将“借阅记录”中现有数据全部复制到BORROW_L0G_ BAK中。</span><br><span class="line">create table test_sql.BORROW_LOG_BAK as select * from test_sql.borrow_log;</span><br><span class="line">select * from test_sql.BORROW_LOG_BAK;</span><br><span class="line"></span><br><span class="line">--（9）现在需要将原Oracle数据库中数据迁移至Hive仓库，</span><br><span class="line">-- 请写出“图书”在Hive中的建表语句（Hive实现，提示：列分隔符|；</span><br><span class="line">-- 数据表数据需要外部导入：分区分别以month＿part、day＿part 命名）</span><br><span class="line">CREATE TABLE test_sql.book2</span><br><span class="line">(</span><br><span class="line">    book_id   string,</span><br><span class="line">    `SORT`    string,</span><br><span class="line">    book_name string,</span><br><span class="line">    writer    string,</span><br><span class="line">    OUTPUT    string,</span><br><span class="line">    price     decimal(10, 2)</span><br><span class="line">)partitioned by (month_part string,day_part string )</span><br><span class="line">    row format delimited fields terminated by &#x27;|&#x27;;</span><br><span class="line"></span><br><span class="line">--（10）Hive中有表A，现在需要将表A的月分区　201505　中　</span><br><span class="line">-- user＿id为20000的user＿dinner字段更新为bonc8920，其他用户user＿dinner字段数据不变，</span><br><span class="line">-- 请列出更新的方法步骤。（Hive实现，提示：Hive中无update语法，请通过其他办法进行数据更新）</span><br><span class="line">--A</span><br><span class="line">-- user_id   user_dinner  part</span><br><span class="line">-- 20000        aaaaa     201505</span><br><span class="line">-- 30000        bbbbb     201505</span><br><span class="line"></span><br><span class="line">create table A (user_id int,user_dinner string) partitioned by (part string);</span><br><span class="line">insert overwrite table A partition (part = &#x27;201505&#x27;)</span><br><span class="line">values (20000, &#x27;aaaaa&#x27;),</span><br><span class="line">       (30000, &#x27;bbbbb&#x27;),</span><br><span class="line">       (40000, &#x27;ccccc&#x27;);</span><br><span class="line">select * from A;</span><br><span class="line">--update A set user_dinner=&#x27;bonc8920&#x27; where user_id=20000;</span><br><span class="line"></span><br><span class="line">insert overwrite table A partition  (part = &#x27;201505&#x27;)</span><br><span class="line">select user_id, &#x27;bonc8920&#x27; as user_dinner from A where user_id=20000 and part = &#x27;201505&#x27; union all</span><br><span class="line">select user_id, user_dinner from A where user_id!=20000 and part = &#x27;201505&#x27;  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 第8题：服务日志SQL统计</span><br><span class="line">CREATE TABLE test_sql.test8(`date` string,</span><br><span class="line">interface string,</span><br><span class="line">ip string);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test8 VALUES</span><br><span class="line">(&#x27;2016-11-09 11:22:05&#x27;,&#x27;/api/user/login&#x27;,&#x27;110.23.5.23&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:23:10&#x27;,&#x27;/api/user/detail&#x27;,&#x27;57.3.2.16&#x27;),</span><br><span class="line">(&#x27;2016-11-09 23:59:40&#x27;,&#x27;/api/user/login&#x27;,&#x27;200.6.5.166&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;136.79.47.70&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:15:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;94.144.143.141&#x27;),</span><br><span class="line">(&#x27;2016-11-09 11:16:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;197.161.8.206&#x27;),</span><br><span class="line">(&#x27;2016-11-09 12:14:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;240.227.107.145&#x27;),</span><br><span class="line">(&#x27;2016-11-09 13:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;79.130.122.205&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:14:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;65.228.251.189&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:15:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;245.23.122.44&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:17:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;22.74.142.137&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:19:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;54.93.212.87&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:20:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;218.15.167.248&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:24:23&#x27;,&#x27;/api/user/detail&#x27;,&#x27;20.117.19.75&#x27;),</span><br><span class="line">(&#x27;2016-11-09 15:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;183.162.66.97&#x27;),</span><br><span class="line">(&#x27;2016-11-09 16:14:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;108.181.245.147&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:17:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;22.74.142.137&#x27;),</span><br><span class="line">(&#x27;2016-11-09 14:19:23&#x27;,&#x27;/api/user/login&#x27;,&#x27;22.74.142.137&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test8;</span><br><span class="line">--求11月9号下午14点（14-15点），访问/api/user/login接口的top10的ip地址</span><br><span class="line">select ip, count(1) cnt</span><br><span class="line">from test_sql.test8</span><br><span class="line">where date_format(`date`, &#x27;yyyy-MM-dd HH&#x27;) = &#x27;2016-11-09 14&#x27;</span><br><span class="line">  and interface = &#x27;/api/user/login&#x27;</span><br><span class="line">group by ip</span><br><span class="line">order by cnt desc</span><br><span class="line">limit 10</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line">-- 第9题：充值日志SQL实战</span><br><span class="line">CREATE TABLE test_sql.test9(</span><br><span class="line">dist_id string COMMENT &#x27;区组id&#x27;,</span><br><span class="line">account string COMMENT &#x27;账号&#x27;,</span><br><span class="line">   `money` decimal(10,2) COMMENT &#x27;充值金额&#x27;,</span><br><span class="line">create_time string COMMENT &#x27;订单时间&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test9 VALUES (&#x27;1&#x27;,&#x27;11&#x27;,100006,&#x27;2019-01-02 13:00:01&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;22&#x27;,110000,&#x27;2019-01-02 13:00:02&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;33&#x27;,102000,&#x27;2019-01-02 13:00:03&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;44&#x27;,100300,&#x27;2019-01-02 13:00:04&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;55&#x27;,100040,&#x27;2019-01-02 13:00:05&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;66&#x27;,100005,&#x27;2019-01-02 13:00:06&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;77&#x27;,180000,&#x27;2019-01-03 13:00:07&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;88&#x27;,106000,&#x27;2019-01-02 13:00:08&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;99&#x27;,100400,&#x27;2019-01-02 13:00:09&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;12&#x27;,100030,&#x27;2019-01-02 13:00:10&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;13&#x27;,100003,&#x27;2019-01-02 13:00:20&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;14&#x27;,100020,&#x27;2019-01-02 13:00:30&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;15&#x27;,100500,&#x27;2019-01-02 13:00:40&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;16&#x27;,106000,&#x27;2019-01-02 13:00:50&#x27;),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;17&#x27;,100800,&#x27;2019-01-02 13:00:59&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;18&#x27;,100800,&#x27;2019-01-02 13:00:11&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;19&#x27;,100030,&#x27;2019-01-02 13:00:12&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;10&#x27;,100000,&#x27;2019-01-02 13:00:13&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;45&#x27;,100010,&#x27;2019-01-02 13:00:14&#x27;),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;78&#x27;,100070,&#x27;2019-01-02 13:00:15&#x27;);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test9 order by dist_id , money desc;</span><br><span class="line">--请写出SQL语句，查询充值日志表2019年01月02号每个区组下充值额最大的账号，要求结果：</span><br><span class="line">--区组id，账号，金额，充值时间</span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by dist_id order by money desc) rn</span><br><span class="line">from  test_sql.test9 where to_date(create_time)=&#x27;2019-01-02&#x27;) t</span><br><span class="line">where t.rn=1;</span><br><span class="line"></span><br><span class="line">-- 第10题：电商分组TopK实战</span><br><span class="line">CREATE TABLE test_sql.test10(</span><br><span class="line">`dist_id` string COMMENT &#x27;区组id&#x27;,</span><br><span class="line">`account` string COMMENT &#x27;账号&#x27;,</span><br><span class="line">`gold` int COMMENT &#x27;金币&#x27;);</span><br><span class="line"></span><br><span class="line">INSERT INTO TABLE test_sql.test10 VALUES (&#x27;1&#x27;,&#x27;77&#x27;,18),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;88&#x27;,106),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;99&#x27;,10),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;12&#x27;,13),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;13&#x27;,14),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;14&#x27;,25),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;15&#x27;,36),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;16&#x27;,12),</span><br><span class="line"> (&#x27;1&#x27;,&#x27;17&#x27;,158),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;18&#x27;,12),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;19&#x27;,44),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;10&#x27;,66),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;45&#x27;,80),</span><br><span class="line"> (&#x27;2&#x27;,&#x27;78&#x27;,98);</span><br><span class="line"></span><br><span class="line">select * from test_sql.test10;</span><br><span class="line"></span><br><span class="line">select * from</span><br><span class="line">(select *,</span><br><span class="line">       row_number() over (partition by dist_id order by gold desc) rn</span><br><span class="line">from  test_sql.test10  ) t</span><br><span class="line">where t.rn&lt;=10;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="行转列-转置"><a href="#行转列-转置" class="headerlink" title="行转列(转置)"></a>行转列(转置)</h2><ul><li>行转列的常规做法是，group by+sum(if())【或count(if())】</li></ul><h3 id="华泰证券1"><a href="#华泰证券1" class="headerlink" title="华泰证券1"></a>华泰证券1</h3><p>已知</p><table><thead><tr><th>year</th><th>month</th><th>amount</th></tr></thead><tbody><tr><td>1991</td><td>1</td><td>1.1</td></tr><tr><td>1991</td><td>2</td><td>1.2</td></tr><tr><td>1991</td><td>3</td><td>1.3</td></tr><tr><td>1991</td><td>4</td><td>1.4</td></tr><tr><td>1992</td><td>1</td><td>2.1</td></tr><tr><td>1992</td><td>2</td><td>2.2</td></tr><tr><td>1992</td><td>3</td><td>2.3</td></tr><tr><td>1992</td><td>4</td><td>2.4</td></tr></tbody></table><p>查成这样一个结果</p><table><thead><tr><th>year</th><th>m1</th><th>m2</th><th>m3</th><th>m4</th></tr></thead><tbody><tr><td>1991</td><td>1.1</td><td>1.2</td><td>1.3</td><td>1.4</td></tr><tr><td>1992</td><td>2.1</td><td>2.2</td><td>2.3</td><td>2.4</td></tr></tbody></table><p>解答</p><ul><li><p>&#96;&#96;&#96;sql<br>use test_sql;<br>set hive.exec.mode.local.auto&#x3D;true;<br>create table table2(year int,month int ,amount double) ;<br> insert overwrite table table2 values<br>       (1991,1,1.1),<br>       (1991,2,1.2),<br>       (1991,3,1.3),<br>       (1991,4,1.4),<br>       (1992,1,2.1),<br>       (1992,2,2.2),<br>       (1992,3,2.3),<br>       (1992,4,2.4);<br>select * from table2;</p><p>–行转列<br>–常规做法是，group by+sum(if())<br>–SQLserver中有pivot专门用来行转列<br>–原始写法<br>select year,<br>   sum(a) as m1,<br>   sum(b) as m2,<br>   sum(c) as m3,<br>   sum(d) as m4<br>from<br>(select *,<br>        if(month&#x3D;1,amount,0) a,<br>        if(month&#x3D;2,amount,0) b,<br>        if(month&#x3D;3,amount,0) c,<br>        if(month&#x3D;4,amount,0) d<br> from table2) t<br>group by t.year<br>;<br>–简化写法<br>select year,<br>   sum(if(month&#x3D;1,amount,0)) m1,<br>   sum(if(month&#x3D;2,amount,0)) m2,<br>   sum(if(month&#x3D;3,amount,0)) m3,<br>   sum(if(month&#x3D;4,amount,0)) m4<br>from table2<br>group by year;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 华泰证券2</span><br><span class="line"></span><br><span class="line">* 查询课程编号“2”的成绩比课程编号“1”低的所有同学的学号、姓名。</span><br><span class="line"></span><br><span class="line">* 【这是行转列的衍生题】</span><br><span class="line"></span><br><span class="line">* ```sql</span><br><span class="line">  create table student(sid int, sname string, gender string, class_id int);</span><br><span class="line">  insert overwrite table student</span><br><span class="line">  values (1, &#x27;张三&#x27;, &#x27;女&#x27;, 1),</span><br><span class="line">         (2, &#x27;李四&#x27;, &#x27;女&#x27;, 1),</span><br><span class="line">         (3, &#x27;王五&#x27;, &#x27;男&#x27;, 2);</span><br><span class="line">  </span><br><span class="line">  select * from student;</span><br><span class="line">  </span><br><span class="line">  create table  course (cid int, cname string, teacher_id int);</span><br><span class="line">  insert overwrite table course</span><br><span class="line">  values (1, &#x27;生物&#x27;, 1),</span><br><span class="line">         (2, &#x27;体育&#x27;, 1),</span><br><span class="line">         (3, &#x27;物理&#x27;, 2);</span><br><span class="line">  select * from course;</span><br><span class="line">  </span><br><span class="line">  create table score (sid int, student_id int, course_id int, number int);</span><br><span class="line">  insert overwrite table score</span><br><span class="line">  values (1, 1, 1, 58),</span><br><span class="line">         (4, 1, 2, 50),</span><br><span class="line">         (2, 1, 2, 68),</span><br><span class="line">         (3, 2, 2, 89);</span><br><span class="line">  select * from score;</span><br><span class="line">  </span><br><span class="line">  with t1 as(</span><br><span class="line">      select student_id,</span><br><span class="line">         sum(if(course_id=2,number,0)) as pe, --体育</span><br><span class="line">         sum(if(course_id=1,number,0)) as bio --生物</span><br><span class="line">  from score</span><br><span class="line">  group by student_id</span><br><span class="line">  having pe&lt;bio)</span><br><span class="line">  select sid, sname</span><br><span class="line">  from t1</span><br><span class="line">  join student</span><br><span class="line">  on t1.student_id = sid</span><br><span class="line">  ;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><h3 id="腾讯游戏"><a href="#腾讯游戏" class="headerlink" title="腾讯游戏"></a>腾讯游戏</h3><p>表table如下：</p><table><thead><tr><th>DDate</th><th>shengfu</th></tr></thead><tbody><tr><td>2015-05-09</td><td>胜</td></tr><tr><td>2015-05-09</td><td>胜</td></tr><tr><td>2015-05-09</td><td>负</td></tr><tr><td>2015-05-09</td><td>负</td></tr><tr><td>2015-05-10</td><td>胜</td></tr><tr><td>2015-05-10</td><td>负</td></tr><tr><td>2015-05-10</td><td>负</td></tr></tbody></table><p>如果要生成下列结果, 该如何写sql语句?</p><table><thead><tr><th>DDate</th><th>胜</th><th>负</th></tr></thead><tbody><tr><td>2015-05-09</td><td>2</td><td>2</td></tr><tr><td>2015-05-10</td><td>1</td><td>2</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table1(DDate string, shengfu string) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> table1 <span class="keyword">values</span> (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-09&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;胜&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;负&quot;),</span><br><span class="line">       (<span class="string">&#x27;2015-05-10&#x27;</span>, &quot;负&quot;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DDate,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> shengfu <span class="operator">=</span> <span class="string">&#x27;胜&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) `胜`,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> shengfu <span class="operator">=</span> <span class="string">&#x27;负&#x27;</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) `负`</span><br><span class="line"><span class="keyword">from</span> table1</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> DDate;</span><br></pre></td></tr></table></figure><h3 id="腾讯QQ"><a href="#腾讯QQ" class="headerlink" title="腾讯QQ"></a>腾讯QQ</h3><p>假设tableA如表5, tableB如表6,</p><p>表5</p><table><thead><tr><th>qq号（字段名：qq）</th><th>游戏（字段名：game）</th></tr></thead><tbody><tr><td>10000</td><td>a</td></tr><tr><td>10000</td><td>b</td></tr><tr><td>10000</td><td>c</td></tr><tr><td>20000</td><td>c</td></tr><tr><td>20000</td><td>d</td></tr></tbody></table><p>表6</p><table><thead><tr><th>qq号（字段名：qq）</th><th>游戏（字段名：game）</th></tr></thead><tbody><tr><td>10000</td><td>a_b_c</td></tr><tr><td>20000</td><td>c_d</td></tr></tbody></table><p> 请写出以下sql逻辑：</p><p>a,将tableA输出为tableB的格式； 【行转列】</p><p>b,将tableB输出为tableA的格式;   【列转行】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableA(qq string, game string) </span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tableA <span class="keyword">values</span> </span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;a&#x27;</span>),</span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">       (<span class="number">10000</span>, <span class="string">&#x27;c&#x27;</span>),</span><br><span class="line">       (<span class="number">20000</span>, <span class="string">&#x27;c&#x27;</span>),</span><br><span class="line">       (<span class="number">20000</span>, <span class="string">&#x27;d&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableB(qq string, game string) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tableB <span class="keyword">values</span> </span><br><span class="line">(<span class="number">10000</span>, <span class="string">&#x27;a_b_c&#x27;</span>),</span><br><span class="line">(<span class="number">20000</span>, <span class="string">&#x27;c_d&#x27;</span>);</span><br><span class="line">       </span><br><span class="line"><span class="comment">--将tableA输出为tableB的格式；  </span></span><br><span class="line"><span class="keyword">select</span> qq,</span><br><span class="line">       concat_ws(<span class="string">&#x27;_&#x27;</span>, collect_list(game)) game</span><br><span class="line"><span class="keyword">from</span> tableA</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> qq;   </span><br><span class="line">       </span><br><span class="line"><span class="comment">--将tableB输出为tableA的格式;    </span></span><br><span class="line"><span class="keyword">select</span> qq,</span><br><span class="line">       tmp.game</span><br><span class="line"><span class="keyword">from</span> tableB <span class="keyword">lateral</span> <span class="keyword">view</span> explode(split(game, <span class="string">&#x27;_&#x27;</span>)) tmp <span class="keyword">as</span> game;</span><br></pre></td></tr></table></figure><h2 id="连续N天登陆"><a href="#连续N天登陆" class="headerlink" title="连续N天登陆"></a>连续N天登陆</h2><ul><li><p>思路分析过程</p><ul><li><p><img src="E:\自研项目\sql资料\3\images\1659757393656.png" alt="1659757393656"></p></li><li><p>&#96;&#96;&#96;sql<br>–核心代码<br>-&gt;distinct<br>-&gt; row_number<br>-&gt; date_sub(dt,rn) as dt2<br>-&gt; group by dt2,name<br>-&gt; where count(1)&gt;&#x3D;N天<br>-&gt; distinct name<br>-&gt; count(name)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">* 思路2</span><br><span class="line"></span><br><span class="line">* ![1659759179547](E:\自研项目\sql资料\3\images\1659759179547.png)</span><br><span class="line"></span><br><span class="line">* ```sql</span><br><span class="line">  --核心代码</span><br><span class="line">  -&gt;distinct</span><br><span class="line">  -&gt;date_add(dt,N-1) as date2</span><br><span class="line">  -&gt;lead(dt,N-1) over(partition by userid order by dt) as date3</span><br><span class="line">  -&gt;where date2=date3</span><br><span class="line">  -&gt;distinct</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="OPPO"><a href="#OPPO" class="headerlink" title="OPPO"></a>OPPO</h3><p>3、以下为用户登陆游戏的日期，用一条sQL语句查询出连续三天登录的人员姓名</p><table><thead><tr><th>name</th><th>date</th></tr></thead><tbody><tr><td>张三</td><td>2021-01-01</td></tr><tr><td>张三</td><td>2021-01-02</td></tr><tr><td>张三</td><td>2021-01-03</td></tr><tr><td>张三</td><td>2021-01-02</td></tr><tr><td>李四</td><td>2021-01-01</td></tr><tr><td>李四</td><td>2021-01-02</td></tr><tr><td>王五</td><td>2021-01-03</td></tr><tr><td>王五</td><td>2021-01-02</td></tr><tr><td>王五</td><td>2021-01-02</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> game(name string,  `<span class="type">date</span>` string);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> game <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-03&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-07&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-08&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;2021-01-09&#x27;</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;2021-01-01&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-03&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;2021-01-02&#x27;</span>);</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="keyword">distinct</span>  name,<span class="type">date</span> <span class="keyword">from</span> game),</span><br><span class="line">     t2 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">                    <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> <span class="type">date</span>) rn</span><br><span class="line">         <span class="keyword">from</span> t1),</span><br><span class="line">     t3 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,date_sub(<span class="type">date</span>,rn) date2 <span class="keyword">from</span> t2 )</span><br><span class="line">     <span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t3 <span class="keyword">group</span> <span class="keyword">by</span> name,date2 <span class="keyword">having</span> <span class="built_in">count</span>(<span class="number">1</span>)<span class="operator">&gt;=</span><span class="number">3</span>;</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line"><span class="comment">--方案二</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> game;</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> name,`<span class="type">date</span>` <span class="keyword">from</span> game</span><br><span class="line">),</span><br><span class="line">    t2 <span class="keyword">as</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">               date_add(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">as</span> date2,</span><br><span class="line">               <span class="built_in">lead</span>(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> `<span class="type">date</span>`) <span class="keyword">as</span> date3</span><br><span class="line">          <span class="keyword">from</span> t1</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t2 <span class="keyword">where</span> date2<span class="operator">=</span>date3;</span><br><span class="line"><span class="comment">--方案二的写法2</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> name,`<span class="type">date</span>` <span class="keyword">from</span> game</span><br><span class="line">),</span><br><span class="line">    t2 <span class="keyword">as</span> (</span><br><span class="line">        <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">               <span class="built_in">lead</span>(`<span class="type">date</span>`,<span class="number">3</span><span class="number">-1</span>) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> name <span class="keyword">order</span> <span class="keyword">by</span> `<span class="type">date</span>`) <span class="keyword">as</span> date3</span><br><span class="line">          <span class="keyword">from</span> t1</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> t2 <span class="keyword">where</span> datediff(date3,`<span class="type">date</span>`)<span class="operator">=</span><span class="number">2</span> ;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="脉脉"><a href="#脉脉" class="headerlink" title="脉脉"></a>脉脉</h3><p>用户每日登陆脉脉会访问app不同的模块，现有两个表</p><p>表1记录了每日脉脉活跃用户的uid和不同模块的活跃时长</p><p>表2记录了脉脉所有注册用户的一些属性</p><p>表1：maimai.dau</p><table><thead><tr><th>d</th><th>uid</th><th>module</th><th>active_duration</th><th>列说明</th></tr></thead><tbody><tr><td>2020-01-01</td><td>1</td><td>jobs</td><td>324</td><td>d：活跃的日期uid：用户的唯一编码module：用户活跃模块actre.duration：该模块下对应的活跃时长（单位：s）</td></tr><tr><td>2020-01-01</td><td>2</td><td>feeds</td><td>445</td><td></td></tr><tr><td>2020-01-01</td><td>3</td><td>im</td><td>345</td><td></td></tr><tr><td>2020-01-02</td><td>2</td><td>network</td><td>765</td><td></td></tr><tr><td>2020-01-02</td><td>3</td><td>jobs</td><td>342</td><td></td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td></td></tr></tbody></table><p> 在过去一个月内,曾连续两天活跃的用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 建表</span></span><br><span class="line"><span class="comment">-- 表1 dau   记录了每日脉脉活跃用户的uid和不同模块的活跃时长</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> dau(d string, uid <span class="type">int</span>, <span class="keyword">module</span> string, active_duration <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> dau</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">1</span>, <span class="string">&#x27;jobs&#x27;</span>, <span class="number">324</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;feeds&#x27;</span>, <span class="number">445</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-01&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;im&#x27;</span>, <span class="number">345</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-02&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;network&#x27;</span>, <span class="number">765</span>),</span><br><span class="line">       (<span class="string">&#x27;2020-01-02&#x27;</span>, <span class="number">3</span>, <span class="string">&#x27;jobs&#x27;</span>, <span class="number">342</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> dau;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">DISTINCT</span> d, uid <span class="keyword">from</span> dau),</span><br><span class="line">     t2 <span class="keyword">as</span> (</span><br><span class="line">         <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">                date_sub(d, (<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> uid <span class="keyword">order</span> <span class="keyword">by</span> d))) dis</span><br><span class="line">         <span class="keyword">from</span> t1</span><br><span class="line">         <span class="keyword">where</span> d <span class="operator">&lt;=</span> `<span class="built_in">current_date</span>`()</span><br><span class="line">           <span class="keyword">and</span> d <span class="operator">&gt;=</span> date_sub((`<span class="built_in">current_date</span>`()), <span class="number">30</span>)),</span><br><span class="line">t3 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> uid,</span><br><span class="line">           <span class="built_in">min</span>(d)   `开始日期`,</span><br><span class="line">           <span class="built_in">max</span>(d)   `结束日期`,</span><br><span class="line">           <span class="built_in">count</span>(<span class="number">1</span>) `连续登入天数`</span><br><span class="line">    <span class="keyword">from</span> t2</span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> uid,dis</span><br><span class="line">    <span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">2</span> </span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> uid <span class="keyword">from</span> t3 ;</span><br></pre></td></tr></table></figure><h3 id="广州银行"><a href="#广州银行" class="headerlink" title="广州银行"></a>广州银行</h3><p>有一张表C_T（列举了部分数据）表示持卡人消费记录，表结构如下：</p><table><thead><tr><th>CARD NER</th><th>VARCHAR2</th><th>卡号，</th></tr></thead><tbody><tr><td>C_MONTH</td><td>NUMBER</td><td>消费月份，</td></tr><tr><td>C_DATE</td><td>DATE</td><td>消费日期，</td></tr><tr><td>C_TYPEVAR</td><td>CHAR2</td><td>消费类型</td></tr><tr><td>C_ATM</td><td>NUMBER</td><td>消费金额</td></tr></tbody></table><p> 每个月每张卡连续消费的最大天数（如卡在当月只有一次消费则为1）。</p><p>连续消费天数：指一楼时间内连续每天都有消费，同一天有多笔消费算一天消费，不能跨月份统计。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> c_t</span><br><span class="line">(</span><br><span class="line">    card_nbr string,</span><br><span class="line">    c_month  string,</span><br><span class="line">    c_date   string,</span><br><span class="line">    c_type   string,</span><br><span class="line">    c_atm    <span class="type">decimal</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> c_t <span class="keyword">values</span></span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-01&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-02&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-03&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">300</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-15&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-16&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-06&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">500</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-01&#x27;</span>,<span class="string">&#x27;2022-01-07&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">800</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-01&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">100</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-02&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">200</span>),</span><br><span class="line">                               (<span class="number">1</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-03&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">300</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-06&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">500</span>),</span><br><span class="line">                               (<span class="number">2</span>,<span class="string">&#x27;2022-02&#x27;</span>,<span class="string">&#x27;2022-02-07&#x27;</span>,<span class="string">&#x27;网购&#x27;</span>,<span class="number">800</span>);</span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> card_nbr,c_month,c_date <span class="keyword">from</span> c_t),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>,<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> card_nbr,c_month <span class="keyword">order</span> <span class="keyword">by</span> c_date) rn <span class="keyword">from</span> t1  ),</span><br><span class="line">     t3 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>,date_sub(c_date,rn) dt2 <span class="keyword">from</span> t2  ),</span><br><span class="line">     t4 <span class="keyword">as</span> (<span class="keyword">select</span>  dt2,card_nbr,c_month,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> t3 <span class="keyword">group</span> <span class="keyword">by</span> dt2,card_nbr,c_month),</span><br><span class="line">     t5 <span class="keyword">as</span> ( <span class="keyword">select</span> <span class="operator">*</span>,<span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> card_nbr,c_month <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) <span class="keyword">as</span> rn <span class="keyword">from</span> t4)</span><br><span class="line"><span class="keyword">select</span> card_nbr,c_month,cnt <span class="keyword">from</span> t5 <span class="keyword">where</span> rn<span class="operator">=</span><span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="N日留存率"><a href="#N日留存率" class="headerlink" title="N日留存率"></a>N日留存率</h2><ul><li><div align="left"><img src="images/1661067330554.png" style="zoom:60%;" /></div></li><li><p>核心代码</p></li><li><pre><code class="sql">-&gt; where 日期 in (首日,1天后,7天后)-&gt; group by 用户-&gt;count(if(日期=首日,1,null))  as cnt  count(if(日期=1天后,1,null)) as cnt2  count(if(日期=7天后,1,null)) as cnt8-&gt;having cnt&gt;0-&gt;count(user_id) as 首日总数  count(if(cnt2&gt;0,1,null)) as 次日留存数  count(if(cnt8&gt;0,1,null)) as 7日留存数-&gt;次日留存数/首日总数 as 次日留存率  7日留存数/首日总数 as 7日留存率<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 先按用户分组，得到每个用户的各相关日期的登录情况。</span><br><span class="line"></span><br><span class="line">  * ```sql</span><br><span class="line">    select cuid,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-01&#x27;,1,null)) as cnt,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-02&#x27;,1,null)) as cnt2,</span><br><span class="line">           count(if(event_day=&#x27;2020-04-08&#x27;,1,null)) as cnt8</span><br><span class="line">      from tb_cuid_1d</span><br><span class="line">      --提前过滤数据</span><br><span class="line">      where event_day in (&#x27;2020-04-01&#x27;,&#x27;2020-04-02&#x27;,&#x27;2020-04-08&#x27;)</span><br><span class="line">    group by cuid</span><br><span class="line">    -- 2020-04-01必须登录，剔除掉2020-04-01没登录的</span><br><span class="line">    having cnt&gt;0</span><br></pre></td></tr></table></figure>  效果如下  &lt;div align=&quot;left&quot;&gt;&lt;img src=&quot;images/1659841600894.png&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;/div&gt;</code></pre></li><li><p>再对上面的用户汇总</p><ul><li>&#96;&#96;&#96;sql<br>select count(cnt) as uv,<br>   count(if(cnt2!&#x3D;0,1,null)) as uv2,<br>   count(if(cnt8!&#x3D;0,1,null)) as uv8<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  * &lt;div align=&quot;left&quot;&gt;&lt;img src=&quot;images/1659841614840.png&quot; style=&quot;zoom:60%;&quot; /&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">* 最后再用 【后续日期的留存数】除以【首日总数】，就是【留存率】</span><br><span class="line"></span><br><span class="line">* 方案二，性能慢，但是步骤比较简单</span><br><span class="line"></span><br><span class="line">  ```sql</span><br><span class="line">  select count(a.cuid) uv,</span><br><span class="line">         count(b.cuid) uv2,</span><br><span class="line">         count(c.cuid) uv7</span><br><span class="line">  from (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;首日&#x27;) as a</span><br><span class="line">  left join (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;次日&#x27;) as b on a.cuid=b.cuid</span><br><span class="line">  left join (select distinct event_day, cuid from tb_cuid_1d where event_day=&#x27;7日后&#x27;) as c on a.cuid=c.cuid;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="腾讯视频号游戏直播"><a href="#腾讯视频号游戏直播" class="headerlink" title="腾讯视频号游戏直播"></a>腾讯视频号游戏直播</h3><p>表：tableA </p><table><thead><tr><th>ds(日期)</th><th>device</th><th>user_id</th><th>is_active</th></tr></thead><tbody><tr><td>2020-03-01</td><td>ios</td><td>0001</td><td>0</td></tr><tr><td>2020-03-01</td><td>ios</td><td>0002</td><td>1</td></tr><tr><td>2020-03-01</td><td>android</td><td>0003</td><td>1</td></tr><tr><td>2020-03-02</td><td>ios</td><td>0001</td><td>0</td></tr><tr><td>2020-03-02</td><td>ios</td><td>0002</td><td>0</td></tr><tr><td>2020-03-02</td><td>android</td><td>0003</td><td>1</td></tr></tbody></table><p> 20200301的ios设备用户活跃的次日留存率是多少？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">use test_sql;</span><br><span class="line"><span class="keyword">set</span> hive.exec.mode.local.auto<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"><span class="comment">--腾讯视频号游戏直播</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tableA;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tableA</span><br><span class="line">(ds string comment <span class="string">&#x27;(日期)&#x27;</span>  ,device string,user_id string,is_active <span class="type">int</span>) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span>  tableA <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0001&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0002&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0004&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-01&#x27;</span>,<span class="string">&#x27;android&#x27;</span>,<span class="string">&#x27;0003&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0001&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0002&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;android&#x27;</span>,<span class="string">&#x27;0003&#x27;</span>,<span class="number">1</span>),</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0005&#x27;</span>,<span class="number">1</span>) ,</span><br><span class="line">(<span class="string">&#x27;2020-03-02&#x27;</span>,<span class="string">&#x27;ios&#x27;</span>,<span class="string">&#x27;0004&#x27;</span>,<span class="number">1</span>) ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--方案1，过程见下面的顺序编号</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> user_id,</span><br><span class="line">           <span class="comment">--3-一个用户如果在&#x27;2020-03-01&#x27;活跃，则cnt1&gt;0</span></span><br><span class="line">           <span class="built_in">count</span>(if(ds <span class="operator">=</span> <span class="string">&#x27;2020-03-01&#x27;</span>, <span class="number">1</span>, <span class="keyword">null</span>)) cnt1,</span><br><span class="line">           <span class="comment">--4-一个用户如果在&#x27;2020-03-02&#x27;活跃，则cnt2&gt;0</span></span><br><span class="line">           <span class="built_in">count</span>(if(ds <span class="operator">=</span> <span class="string">&#x27;2020-03-02&#x27;</span> <span class="keyword">and</span> is_active <span class="operator">=</span> <span class="number">1</span>, <span class="number">1</span>, <span class="keyword">null</span>)) cnt2</span><br><span class="line">    <span class="keyword">from</span> tableA</span><br><span class="line">    <span class="comment">--1-预先全局过滤</span></span><br><span class="line">    <span class="keyword">where</span> device <span class="operator">=</span> <span class="string">&#x27;ios&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> ( (ds<span class="operator">=</span><span class="string">&#x27;2020-03-01&#x27;</span> <span class="keyword">and</span> is_active <span class="operator">=</span> <span class="number">1</span>) <span class="keyword">or</span> ds<span class="operator">=</span><span class="string">&#x27;2020-03-02&#x27;</span>)</span><br><span class="line">    <span class="comment">--2-按用户分组</span></span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> user_id</span><br><span class="line">    <span class="comment">--6-只筛选&#x27;2020-03-01&#x27;活跃的用户，他在&#x27;2020-03-02&#x27;是否活跃，看cnt2=0则不活跃，&gt;0则活跃</span></span><br><span class="line">    <span class="keyword">having</span> cnt1 <span class="operator">&gt;</span> <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(cnt1)                               sum1,<span class="comment">--&#x27;2020-03-01&#x27;的活跃数</span></span><br><span class="line">       <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, user_id, <span class="keyword">null</span>))        sum2,<span class="comment">----并且在次日依然活跃的用户数</span></span><br><span class="line">       <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, user_id, <span class="keyword">null</span>)) <span class="operator">/</span> <span class="built_in">count</span>(cnt1) rate<span class="comment">--次日留存率</span></span><br><span class="line"><span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h3><p>有1张表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> tb_cuid_1d</span><br><span class="line">(</span><br><span class="line">    cuid         string comment <span class="string">&#x27;用户的唯一标识&#x27;</span>,</span><br><span class="line">    os           string comment <span class="string">&#x27;平台&#x27;</span>,</span><br><span class="line">    soft_version string comment <span class="string">&#x27;版本&#x27;</span>,</span><br><span class="line">    event_day    string comment <span class="string">&#x27;日期&#x27;</span>,</span><br><span class="line">    visit_time    <span class="type">int</span> comment <span class="string">&#x27;用户访问时间戳&#x27;</span>,</span><br><span class="line">    duration     <span class="type">decimal</span> comment <span class="string">&#x27;用户访问时长&#x27;</span>,</span><br><span class="line">    ext          <span class="keyword">array</span><span class="operator">&lt;</span>string<span class="operator">&gt;</span> comment <span class="string">&#x27;扩展字段&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> tb_cuid_1d <span class="keyword">values</span></span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">1</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-08&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">2</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>)),</span><br><span class="line"> (<span class="number">3</span>,<span class="string">&#x27;android&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1234567</span>,<span class="number">100</span>,`<span class="keyword">array</span>`(<span class="string">&#x27;&#x27;</span>));</span><br><span class="line"> </span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>写出用户表 tb_cuid_1d的 20200401 的次日、次7日留存的具体HQL ：</p><p>一条sql统计出以下指标 （4.1号uv，4.1号在4.2号的留存uv，4.1号在4.8号的留存uv）;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一个理解简单，但是性能不快的做法</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(a.cuid) uv,</span><br><span class="line">       <span class="built_in">count</span>(b.cuid) uv2,</span><br><span class="line">       <span class="built_in">count</span>(c.cuid) uv7</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-01&#x27;</span>) <span class="keyword">as</span> a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-02&#x27;</span>) <span class="keyword">as</span> b <span class="keyword">on</span> a.cuid<span class="operator">=</span>b.cuid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> event_day, cuid <span class="keyword">from</span> tb_cuid_1d <span class="keyword">where</span> event_day<span class="operator">=</span><span class="string">&#x27;2020-04-08&#x27;</span>) <span class="keyword">as</span> c <span class="keyword">on</span> a.cuid<span class="operator">=</span>c.cuid;</span><br><span class="line"><span class="comment">--另一个理解稍微复杂，但是性能快的做法</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (</span><br><span class="line">    <span class="keyword">select</span> cuid,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-01&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt1,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-02&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt2,</span><br><span class="line">           <span class="built_in">count</span>(if(event_day<span class="operator">=</span><span class="string">&#x27;2020-04-08&#x27;</span>,<span class="number">1</span>,<span class="keyword">null</span>)) <span class="keyword">as</span> cnt8</span><br><span class="line">     <span class="keyword">from</span> tb_cuid_1d</span><br><span class="line">     <span class="keyword">where</span> event_day <span class="keyword">in</span> (<span class="string">&#x27;2020-04-01&#x27;</span>,<span class="string">&#x27;2020-04-02&#x27;</span>,<span class="string">&#x27;2020-04-08&#x27;</span>)</span><br><span class="line">     <span class="keyword">group</span> <span class="keyword">by</span> cuid</span><br><span class="line">     <span class="keyword">having</span> cnt1 <span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line">),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="built_in">count</span>(cuid)                  <span class="keyword">as</span> uv1,</span><br><span class="line">                   <span class="built_in">count</span>(if(cnt2 <span class="operator">&gt;</span> <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">null</span>)) <span class="keyword">as</span> uv2,</span><br><span class="line">                   <span class="built_in">count</span>(if(cnt8 <span class="operator">&gt;</span> <span class="number">0</span>, <span class="number">1</span>, <span class="keyword">null</span>)) <span class="keyword">as</span> uv7</span><br><span class="line">            <span class="keyword">from</span> t1</span><br><span class="line">            )</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">       uv2 <span class="operator">/</span> uv1 <span class="keyword">as</span> `次日留存率`,</span><br><span class="line">       uv7 <span class="operator">/</span> uv1 <span class="keyword">as</span> `<span class="number">7</span>日留存率`</span><br><span class="line"><span class="keyword">from</span> t2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h2><ul><li>窗口函数最重要的特点是有over关键字，代表定义窗口<ul><li>函数名(字段名) over(partition by xxx,yyy order by zzz)</li></ul></li><li>常见的窗口函数也就只有3大类<ul><li>第一大类、聚合类的窗口函数【也就只有5个】<ul><li>sum() over()</li><li>count&#x2F;avg&#x2F;max&#x2F;min</li></ul></li><li>第二大类、排序类的窗口函数【也就只有3个】<ul><li>row_number，rank，dense_rank</li></ul></li><li>第三大类、偏移类的，跨行的【也就只有2个】<ul><li>lag &#x2F; lead</li></ul></li><li>其他用的极少【仅了解】<ul><li>first_value、last_value、ntile</li></ul></li></ul></li><li>所以企业中用的最多的也就是sum，count，row_number</li></ul><h3 id="交通银行"><a href="#交通银行" class="headerlink" title="交通银行"></a>交通银行</h3><p>Emp表的表数据如下：</p><table><thead><tr><th>NAME</th><th>MONTH</th><th>AMT</th></tr></thead><tbody><tr><td>张三</td><td>01</td><td>100</td></tr><tr><td>李四</td><td>02</td><td>120</td></tr><tr><td>王五</td><td>03</td><td>150</td></tr><tr><td>赵六</td><td>04</td><td>500</td></tr><tr><td>张三</td><td>05</td><td>400</td></tr><tr><td>李四</td><td>06</td><td>350</td></tr><tr><td>王五</td><td>07</td><td>180</td></tr><tr><td>赵六</td><td>08</td><td>400</td></tr></tbody></table><p>问题：请写出可以得到以下的结果SQL</p><table><thead><tr><th>NAME</th><th>总金额</th><th>排名</th><th>占比</th></tr></thead><tbody><tr><td>赵六</td><td>900</td><td>1</td><td>40.91%</td></tr><tr><td>张三</td><td>500</td><td>2</td><td>22.73%</td></tr><tr><td>李四</td><td>470</td><td>3</td><td>21.36%</td></tr><tr><td>王五</td><td>330</td><td>4</td><td>15.00%</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(name string , <span class="keyword">month</span> string, amt <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp <span class="keyword">values</span> (<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;01&#x27;</span>, <span class="number">100</span>),</span><br><span class="line">       (<span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;02&#x27;</span>, <span class="number">120</span>),</span><br><span class="line">       (<span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;03&#x27;</span>, <span class="number">150</span>),</span><br><span class="line">       (<span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;04&#x27;</span>, <span class="number">500</span>),</span><br><span class="line">       (<span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;05&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">       (<span class="string">&#x27;李四&#x27;</span>, <span class="string">&#x27;06&#x27;</span>, <span class="number">350</span>),</span><br><span class="line">       (<span class="string">&#x27;王五&#x27;</span>, <span class="string">&#x27;07&#x27;</span>, <span class="number">180</span>),</span><br><span class="line">       (<span class="string">&#x27;赵六&#x27;</span>, <span class="string">&#x27;08&#x27;</span>, <span class="number">400</span>);</span><br><span class="line"><span class="comment">--rank 1224</span></span><br><span class="line"><span class="comment">--dense_rank 1223</span></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> name,</span><br><span class="line">                   <span class="built_in">sum</span>(amt) <span class="keyword">as</span> sum_amt</span><br><span class="line">            <span class="keyword">from</span> emp</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> name),</span><br><span class="line">     t2 <span class="keyword">as</span> (</span><br><span class="line">         <span class="keyword">select</span> name,</span><br><span class="line">                sum_amt,</span><br><span class="line">                <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> sum_amt <span class="keyword">desc</span>) rn,</span><br><span class="line">                sum_amt<span class="operator">/</span><span class="built_in">sum</span>(sum_amt) <span class="keyword">over</span> () <span class="keyword">as</span> rate</span><br><span class="line">         <span class="keyword">from</span> t1</span><br><span class="line">     )</span><br><span class="line"><span class="keyword">select</span> name, sum_amt, rn, concat(round(rate<span class="operator">*</span><span class="number">100</span>,<span class="number">2</span>),<span class="string">&#x27;%&#x27;</span>) rate <span class="keyword">from</span> t2</span><br></pre></td></tr></table></figure><h3 id="跨越物流"><a href="#跨越物流" class="headerlink" title="跨越物流"></a>跨越物流</h3><p>题目描述</p><p>在员工表的基础上，统计每年入职总数以及截至本年累计入职总人数。</p><p>截至本年累计入职总人数&#x3D;本年总入职人数 + 本年之前所有年的总入职人数之和</p><p>结果</p><div align="left"><img src="images/1659701581524.png" style="zoom:40%;" /></div> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(empno string ,ename string,hiredate string,sal <span class="type">int</span> ,deptno string);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;7521&#x27;</span>, <span class="string">&#x27;WARD&#x27;</span>, <span class="string">&#x27;1981-2-22&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7566&#x27;</span>, <span class="string">&#x27;JONES&#x27;</span>, <span class="string">&#x27;1981-4-2&#x27;</span>, <span class="number">2975</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7876&#x27;</span>, <span class="string">&#x27;ADAMS&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">1100</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7369&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>, <span class="string">&#x27;1980-12-17&#x27;</span>, <span class="number">800</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7934&#x27;</span>, <span class="string">&#x27;MILLER&#x27;</span>, <span class="string">&#x27;1982-1-23&#x27;</span>, <span class="number">1300</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7844&#x27;</span>, <span class="string">&#x27;TURNER&#x27;</span>, <span class="string">&#x27;1981-9-8&#x27;</span>, <span class="number">1500</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7782&#x27;</span>, <span class="string">&#x27;CLARK&#x27;</span>, <span class="string">&#x27;1981-6-9&#x27;</span>, <span class="number">2450</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7839&#x27;</span>, <span class="string">&#x27;KING&#x27;</span>, <span class="string">&#x27;1981-11-17&#x27;</span>, <span class="number">5000</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7902&#x27;</span>, <span class="string">&#x27;FORD&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7499&#x27;</span>, <span class="string">&#x27;ALLEN&#x27;</span>, <span class="string">&#x27;1981-2-20&#x27;</span>, <span class="number">1600</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7654&#x27;</span>, <span class="string">&#x27;MARTIN&#x27;</span>, <span class="string">&#x27;1981-9-28&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7900&#x27;</span>, <span class="string">&#x27;JAMES&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">950</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7788&#x27;</span>, <span class="string">&#x27;SCOTT&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7698&#x27;</span>, <span class="string">&#x27;BLAKE&#x27;</span>, <span class="string">&#x27;1981-5-1&#x27;</span>, <span class="number">2850</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">       <span class="built_in">sum</span>(cnt) <span class="keyword">over</span> (<span class="keyword">order</span> <span class="keyword">by</span> year1) cnt2</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">year</span>(hiredate) <span class="keyword">as</span> year1,</span><br><span class="line">       <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">as</span> cnt</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">year</span>(hiredate)) a;</span><br></pre></td></tr></table></figure><h3 id="广州银行-1"><a href="#广州银行-1" class="headerlink" title="广州银行"></a>广州银行</h3><p>假设有商品表goods，数据如下</p><table><thead><tr><th>Goods_type</th><th>goods_name</th><th>price</th><th>goods_flag</th></tr></thead><tbody><tr><td>手机</td><td>华为mate</td><td>2999</td><td></td></tr><tr><td>手机</td><td>苹果phoneX</td><td>7999</td><td></td></tr><tr><td>手机</td><td>荣耀V10</td><td>2399</td><td></td></tr><tr><td>水果</td><td>车厘子</td><td>79</td><td></td></tr><tr><td>水果</td><td>葡萄</td><td>18</td><td></td></tr><tr><td>水果</td><td>苹果</td><td>12</td><td></td></tr><tr><td>电脑</td><td>金士顿16G</td><td>499</td><td></td></tr></tbody></table><p>根据商品大类Goods_type对商品金额price从小到大排序，前30%为低挡，30%~85%为中档，高于85%为高档，打上标签。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> goods;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> goods(goods_type string,goods_name string ,price <span class="type">int</span>);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> goods</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;手机&#x27;</span>, <span class="string">&#x27;华为保时捷折叠手机&#x27;</span>, <span class="number">12000</span>),</span><br><span class="line">       (<span class="string">&#x27;手机&#x27;</span>, <span class="string">&#x27;苹果phoneX&#x27;</span>, <span class="number">7999</span>),</span><br><span class="line">       (<span class="string">&#x27;手机&#x27;</span>, <span class="string">&#x27;华为mate&#x27;</span>, <span class="number">2999</span>),</span><br><span class="line">       (<span class="string">&#x27;手机&#x27;</span>, <span class="string">&#x27;荣耀V10&#x27;</span>, <span class="number">2399</span>),</span><br><span class="line">       (<span class="string">&#x27;水果&#x27;</span>, <span class="string">&#x27;榴莲&#x27;</span>, <span class="number">60</span>),</span><br><span class="line">       (<span class="string">&#x27;水果&#x27;</span>, <span class="string">&#x27;车厘子&#x27;</span>, <span class="number">40</span>),</span><br><span class="line">       (<span class="string">&#x27;水果&#x27;</span>, <span class="string">&#x27;葡萄&#x27;</span>, <span class="number">18</span>),</span><br><span class="line">       (<span class="string">&#x27;水果&#x27;</span>, <span class="string">&#x27;苹果&#x27;</span>, <span class="number">12</span>),</span><br><span class="line">       (<span class="string">&#x27;电脑&#x27;</span>, <span class="string">&#x27;金士顿16G&#x27;</span>, <span class="number">499</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">       rn <span class="operator">/</span> cnt <span class="keyword">as</span> rate,</span><br><span class="line">       <span class="keyword">case</span></span><br><span class="line">           <span class="keyword">when</span> rn <span class="operator">/</span> cnt <span class="operator">&lt;</span> <span class="number">0.3</span> <span class="keyword">then</span> <span class="string">&#x27;低挡&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> rn <span class="operator">/</span> cnt <span class="operator">&gt;=</span> <span class="number">0.3</span> <span class="keyword">and</span> rn <span class="operator">/</span> cnt <span class="operator">&lt;</span> <span class="number">0.85</span> <span class="keyword">then</span> <span class="string">&#x27;中挡&#x27;</span></span><br><span class="line">           <span class="keyword">when</span> rn <span class="operator">/</span> cnt <span class="operator">&gt;=</span> <span class="number">0.85</span> <span class="keyword">then</span> <span class="string">&#x27;高挡&#x27;</span></span><br><span class="line">       <span class="keyword">end</span> flag</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">         <span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">                <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> goods_type <span class="keyword">order</span> <span class="keyword">by</span> price) rn,</span><br><span class="line">                <span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> goods_type)                     cnt</span><br><span class="line">         <span class="keyword">from</span> goods</span><br><span class="line">     ) t1;</span><br></pre></td></tr></table></figure><h2 id="分组内top前几"><a href="#分组内top前几" class="headerlink" title="分组内top前几"></a>分组内top前几</h2><ul><li><p>需求常见词： </p><ul><li>【每组xxx内按yyy排序的前n个zzz】</li><li>【每组xxx内按yyy排序的第1个zzz】</li><li>【每组xxx内按yyy排序的最后1个zzz】</li><li>特点是yyy和zzz是不同的字段。</li><li>比如：班内按性别xxx分组，组内按身高yyy排序，每个性别组的前3个学生姓名zzz</li></ul></li><li><p>公式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> zzz,</span><br><span class="line">      <span class="built_in">row_number</span>() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> 组名xxx <span class="keyword">order</span> <span class="keyword">by</span> yyy)  <span class="keyword">as</span> rn</span><br><span class="line"><span class="keyword">from</span> <span class="keyword">table</span>) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">where</span>  rn<span class="operator">&lt;=</span>N名</span><br></pre></td></tr></table></figure></li></ul><h3 id="跨越物流-1"><a href="#跨越物流-1" class="headerlink" title="跨越物流"></a>跨越物流</h3><p>员工表结构</p><div align="left"><img src="images/1659691092883.png" style="zoom:40%;" /></div> <p>员工表数据</p><div align="left"><img src="images/1659691114602.png" style="zoom:40%;" /></div> <p>题目描述</p><p>求出每个部门工资最高的前三名员工，并计算这些员工的工资占所属部门总工资的百分比。</p><p>结果</p><p><img src="E:\自研项目\sql资料\3\images\1659691126801.png" alt="1659691126801"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(empno string ,ename string,hiredate string,sal <span class="type">int</span> ,deptno string);</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;7521&#x27;</span>, <span class="string">&#x27;WARD&#x27;</span>, <span class="string">&#x27;1981-2-22&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7566&#x27;</span>, <span class="string">&#x27;JONES&#x27;</span>, <span class="string">&#x27;1981-4-2&#x27;</span>, <span class="number">2975</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7876&#x27;</span>, <span class="string">&#x27;ADAMS&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">1100</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7369&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>, <span class="string">&#x27;1980-12-17&#x27;</span>, <span class="number">800</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7934&#x27;</span>, <span class="string">&#x27;MILLER&#x27;</span>, <span class="string">&#x27;1982-1-23&#x27;</span>, <span class="number">1300</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7844&#x27;</span>, <span class="string">&#x27;TURNER&#x27;</span>, <span class="string">&#x27;1981-9-8&#x27;</span>, <span class="number">1500</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7782&#x27;</span>, <span class="string">&#x27;CLARK&#x27;</span>, <span class="string">&#x27;1981-6-9&#x27;</span>, <span class="number">2450</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7839&#x27;</span>, <span class="string">&#x27;KING&#x27;</span>, <span class="string">&#x27;1981-11-17&#x27;</span>, <span class="number">5000</span>, <span class="number">10</span>),</span><br><span class="line">(<span class="string">&#x27;7902&#x27;</span>, <span class="string">&#x27;FORD&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7499&#x27;</span>, <span class="string">&#x27;ALLEN&#x27;</span>, <span class="string">&#x27;1981-2-20&#x27;</span>, <span class="number">1600</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7654&#x27;</span>, <span class="string">&#x27;MARTIN&#x27;</span>, <span class="string">&#x27;1981-9-28&#x27;</span>, <span class="number">1250</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7900&#x27;</span>, <span class="string">&#x27;JAMES&#x27;</span>, <span class="string">&#x27;1981-12-3&#x27;</span>, <span class="number">950</span>, <span class="number">30</span>),</span><br><span class="line">(<span class="string">&#x27;7788&#x27;</span>, <span class="string">&#x27;SCOTT&#x27;</span>, <span class="string">&#x27;1987-7-13&#x27;</span>, <span class="number">3000</span>, <span class="number">20</span>),</span><br><span class="line">(<span class="string">&#x27;7698&#x27;</span>, <span class="string">&#x27;BLAKE&#x27;</span>, <span class="string">&#x27;1981-5-1&#x27;</span>, <span class="number">2850</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">--求出每个部门工资最高的前三名员工，并计算这些员工的工资占所属部门总工资的百分比。</span></span><br><span class="line"><span class="keyword">select</span> a.empno,</span><br><span class="line">       a.sal,</span><br><span class="line">       a.deptno,</span><br><span class="line">       a.rn,</span><br><span class="line">       a.sum_sal,</span><br><span class="line">       round(a.sal<span class="operator">/</span>a.sum_sal,<span class="number">2</span>) <span class="keyword">as</span> rate</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line"><span class="comment">--每个部门工资排名</span></span><br><span class="line">         <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>) <span class="keyword">as</span> rn, </span><br><span class="line"><span class="comment">--每个部门的总工资</span></span><br><span class="line">         <span class="built_in">sum</span>(sal) <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> deptno ) <span class="keyword">as</span> sum_sal </span><br><span class="line"><span class="keyword">from</span> emp) a</span><br><span class="line"><span class="keyword">where</span> rn<span class="operator">&lt;=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><h3 id="小米电商"><a href="#小米电商" class="headerlink" title="小米电商"></a>小米电商</h3><p>订单表，torder.  字段，user_id, order_id,  c_date，city_id，sale_num，sku_id (商品)</p><p>问题：20201201至今每日订单量top3的城市及其订单量(订单量对order_id去重)(在线写)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_order;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_order (user_id string,</span><br><span class="line">                      order_id string,</span><br><span class="line">                      c_date string,</span><br><span class="line">                      city_id string,</span><br><span class="line">                      sale_num <span class="type">int</span> ,</span><br><span class="line">                      sku_id string) ;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> t_order <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;001&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;002&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;003&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米12&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zl&#x27;</span>,<span class="string">&#x27;004&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;杭州&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米11&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;005&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;005&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;裤子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;006&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;007&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米12&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;008&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;009&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;010&#x27;</span>,<span class="string">&#x27;2020-12-01&#x27;</span>,<span class="string">&#x27;长沙&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;011&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;012&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;013&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米12&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zl&#x27;</span>,<span class="string">&#x27;014&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米11&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;015&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;016&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ww&#x27;</span>,<span class="string">&#x27;017&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;广州&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;小米12&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;018&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;鞋子&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;ls&#x27;</span>,<span class="string">&#x27;019&#x27;</span>,<span class="string">&#x27;2020-12-02&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;衣服&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> t_order;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> t1 <span class="keyword">as</span> (<span class="keyword">select</span> c_date, city_id, <span class="built_in">count</span>(<span class="keyword">distinct</span> order_id) cnt</span><br><span class="line">            <span class="keyword">from</span> t_order</span><br><span class="line">            <span class="keyword">where</span> c_date <span class="operator">&gt;=</span> <span class="string">&#x27;2020-12-01&#x27;</span></span><br><span class="line">              <span class="keyword">and</span> c_date <span class="operator">&lt;=</span> `<span class="built_in">current_date</span>`()</span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> c_date, city_id),</span><br><span class="line">     t2 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span>, <span class="built_in">row_number</span>() <span class="keyword">over</span> (<span class="keyword">partition</span> <span class="keyword">by</span> c_date <span class="keyword">order</span> <span class="keyword">by</span> cnt <span class="keyword">desc</span>) rn <span class="keyword">from</span> t1)</span><br><span class="line"><span class="keyword">select</span> c_date, city_id, cnt,rn</span><br><span class="line"><span class="keyword">from</span> t2</span><br><span class="line"><span class="keyword">where</span> rn <span class="operator">&lt;=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2 id="带条件的聚合统计"><a href="#带条件的聚合统计" class="headerlink" title="带条件的聚合统计"></a>带条件的聚合统计</h2><ul><li>一般的做法是group by xx,yy  再多次的sum(if(……))</li><li>好处是避免多次加载表，可以只加载一次表就得到多个指标。</li></ul><p><strong>每个客户的移动数、固话数和宽带数</strong></p><h3 id="腾讯数据提取"><a href="#腾讯数据提取" class="headerlink" title="腾讯数据提取"></a>腾讯数据提取</h3><p>用户行为表：t_user_video_action_d分区：ds（格式 yyyyMMdd）</p><p>主键：user_id、video_id</p><p>含义：一个 user 对一个视频的所有行为聚合，每天增量字段：</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th></tr></thead><tbody><tr><td>user_id</td><td>用户 id</td><td>string</td></tr><tr><td>video_id</td><td>视频 id</td><td>string</td></tr><tr><td>expose_cnt</td><td>曝光次数</td><td>int</td></tr><tr><td>like_cnt</td><td>点赞次数</td><td>int</td></tr></tbody></table><p>视频表：t_video_d</p><p>分区：ds（格式 yyyyMMdd）主键：video_id</p><p>含义：当天全量视频数据字段：</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th><th>枚举</th></tr></thead><tbody><tr><td>video_id</td><td>视频 id</td><td>string</td><td></td></tr><tr><td>video_type</td><td>视频类型</td><td>string</td><td>娱乐、新闻、搞笑</td></tr><tr><td>video_user_id</td><td>视频创建者 user_id</td><td>string</td><td></td></tr><tr><td>video_create_time</td><td>视频创建时间</td><td>bigint</td><td></td></tr></tbody></table><p>​</p><p>作者表：t_video_user_d</p><p>分区：ds（格式 yyyyMMdd）主键：video_user_id</p><p>含义：当天全量视频创建者数据</p><table><thead><tr><th>字段名</th><th>字段含义</th><th>类型</th><th>枚举</th></tr></thead><tbody><tr><td>video_user_id</td><td>视频创建者 user_id</td><td>string</td><td></td></tr><tr><td>video_user_name</td><td>名称</td><td>string</td><td></td></tr><tr><td>video_user_type</td><td>视频创建者类型</td><td>string</td><td>娱乐、新闻、搞笑</td></tr></tbody></table><p>需求方需要视频号搞笑类型视频的曝光点赞时长等数据，请提供一张 ads 表。搞笑类型视频定义：视频类型为搞笑或者视频创建者类型为搞笑</p><p>需要产出字段：视频 id，视频创建者 user_id，视频创建者名称、当天曝光次数、当天点赞次数、近 30 天曝光次数、近 30 天点赞次数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_user_video_action_d</span><br><span class="line">(</span><br><span class="line">    user_id    string comment &quot;用户id&quot;,</span><br><span class="line">    video_id   string comment &quot;视频id&quot;,</span><br><span class="line">    expose_cnt <span class="type">int</span> comment &quot;曝光次数&quot;,</span><br><span class="line">    like_cnt   <span class="type">int</span> comment &quot;点赞次数&quot;</span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_video_d;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_video_d</span><br><span class="line">(</span><br><span class="line">    video_id          string comment <span class="string">&#x27;视频id&#x27;</span>,</span><br><span class="line">    video_type        string comment <span class="string">&#x27;视频类型&#x27;</span>,</span><br><span class="line">    video_user_id     string comment <span class="string">&#x27;视频创建者user_id&#x27;</span>,</span><br><span class="line">    video_create_time <span class="type">bigint</span> comment <span class="string">&#x27;视频创建时间&#x27;</span></span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> t_video_user_d</span><br><span class="line">(</span><br><span class="line">    video_user_id   string comment <span class="string">&#x27;视频创建者user_id&#x27;</span>,</span><br><span class="line">    video_user_name string comment <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">    video_user_type string comment <span class="string">&#x27;视频创建者类型&#x27;</span></span><br><span class="line">) partitioned <span class="keyword">by</span> (ds string);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--假设当天是2022-07-31</span></span><br><span class="line"><span class="keyword">select</span> t1.<span class="operator">*</span>,</span><br><span class="line">       t2.video_user_id,</span><br><span class="line">       t2.video_user_name</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> video_id,</span><br><span class="line">             <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span> <span class="keyword">then</span> expose_cnt <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="comment">--当天曝光次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span> <span class="keyword">then</span> like_cnt <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>),<span class="comment">-- 当天点赞次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(expose_cnt) <span class="keyword">as</span> sum_expose,<span class="comment">-- 近 30 天曝光次数、</span></span><br><span class="line">             <span class="built_in">sum</span>(like_cnt)<span class="comment">-- 近 30 天点赞次数</span></span><br><span class="line">      <span class="keyword">from</span> t_user_video_action_d</span><br><span class="line">      <span class="keyword">where</span> ds <span class="keyword">between</span> <span class="string">&#x27;2022-07-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2022-07-30&#x27;</span></span><br><span class="line">      <span class="keyword">group</span> <span class="keyword">by</span> video_id) <span class="keyword">as</span> t1</span><br><span class="line"><span class="keyword">join</span> (<span class="keyword">select</span> d.video_id, d.video_user_id, u.video_user_name</span><br><span class="line">   <span class="keyword">from</span> t_video_d d</span><br><span class="line">   <span class="keyword">join</span> t_video_user_d u <span class="keyword">on</span> d.video_user_id <span class="operator">=</span> u.video_user_id</span><br><span class="line">   <span class="keyword">where</span> (d.video_type <span class="keyword">like</span> <span class="string">&#x27;%搞笑%&#x27;</span> <span class="keyword">or</span> u.video_user_type <span class="keyword">like</span> <span class="string">&#x27;%搞笑%&#x27;</span>)</span><br><span class="line">     <span class="keyword">and</span> d.ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span></span><br><span class="line">     <span class="keyword">and</span> u.ds <span class="operator">=</span> <span class="string">&#x27;2022-07-30&#x27;</span>) <span class="keyword">as</span> t2 <span class="keyword">on</span> t1.video_id <span class="operator">=</span> t2.video_id</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="小米电商-1"><a href="#小米电商-1" class="headerlink" title="小米电商"></a>小米电商</h3><p>要求：编写SQL能运行，数据正确且符合规范，如遇到自定义函数或不记得的函数可以用XX代替</p><p>1.已知有如下两个表表sale：字段如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> sale_order(</span><br><span class="line">    Order_id <span class="type">bigint</span> comment <span class="string">&#x27;订单ID&#x27;</span>,</span><br><span class="line">    User_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">    Order_status <span class="type">int</span>,</span><br><span class="line">    Create_time string,</span><br><span class="line">    Last_update_time string,</span><br><span class="line">    Product_id <span class="type">bigint</span>,</span><br><span class="line">    Product_num <span class="type">bigint</span> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>用户注册表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    user_id <span class="type">bigint</span> comment<span class="string">&#x27;用户ID，唯一主键&#x27;</span>,</span><br><span class="line">    sex string.</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>问题：用一条SQL生成完整的用户画像表，包含如下字段：</p><p>user_id,  sex,  age,  d7order_num,   d14_order_num，后面两个字段分别为近7天订单数量，近14天订单数量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sale_order(</span><br><span class="line">    order_id <span class="type">bigint</span> comment <span class="string">&#x27;订单ID&#x27;</span>,</span><br><span class="line">    user_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">    order_status <span class="type">int</span> ,</span><br><span class="line">    create_time string,</span><br><span class="line">    last_update_time string,</span><br><span class="line">    product_id <span class="type">bigint</span>,</span><br><span class="line">    product_num <span class="type">bigint</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    user_id <span class="type">bigint</span> comment <span class="string">&#x27;用户ID,唯一主键&#x27;</span>,</span><br><span class="line">    sex string,</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> u.user_id,</span><br><span class="line">       s.d7order_num,</span><br><span class="line">       s.d14order_num</span><br><span class="line"><span class="keyword">from</span> user_info u</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> user_id,</span><br><span class="line">                  <span class="built_in">count</span>(if(create_time <span class="operator">&gt;=</span> <span class="string">&#x27;7天前&#x27;</span>  <span class="keyword">and</span> create_time <span class="operator">&lt;=</span> <span class="string">&#x27;今天&#x27;</span>, order_id,<span class="keyword">null</span>)) <span class="keyword">as</span> d7order_num,</span><br><span class="line">                  <span class="built_in">count</span>(if(create_time <span class="operator">&gt;=</span> <span class="string">&#x27;14天前&#x27;</span> <span class="keyword">and</span> create_time <span class="operator">&lt;=</span> <span class="string">&#x27;今天&#x27;</span>, order_id,<span class="keyword">null</span>)) <span class="keyword">as</span> d14order_num</span><br><span class="line">           <span class="keyword">from</span> sale_order</span><br><span class="line">           <span class="keyword">where</span> create_time <span class="operator">&gt;=</span> <span class="string">&#x27;14天前&#x27;</span></span><br><span class="line">           <span class="keyword">group</span> <span class="keyword">by</span> user_id) s <span class="keyword">on</span> u.user_id <span class="operator">=</span> s.user_id;</span><br></pre></td></tr></table></figure><h2 id="先group-by再join"><a href="#先group-by再join" class="headerlink" title="先group by再join"></a>先group by再join</h2><p><strong>字节跳动</strong></p><p><strong>各个角色当日消耗元宝的付费免费比例</strong></p><p><strong>vivo</strong></p><p><strong>用full join计算对局数，订单数</strong></p><h2 id="侧视图爆炸类"><a href="#侧视图爆炸类" class="headerlink" title="侧视图爆炸类"></a>侧视图爆炸类</h2><p><strong>vivo</strong></p><p><strong>爆炸函数计算常驻人数top10的城市，男女分布情况</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SQL强化&quot;&gt;&lt;a href=&quot;#SQL强化&quot; class=&quot;headerlink&quot; title=&quot;SQL强化&quot;&gt;&lt;/a&gt;SQL强化&lt;/h1&gt;&lt;h2 id=&quot;SQL执行顺序&quot;&gt;&lt;a href=&quot;#SQL执行顺序&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
    <category term="SQL强化1" scheme="http://example.com/tags/SQL%E5%BC%BA%E5%8C%961/"/>
    
  </entry>
  
  <entry>
    <title>Docker部署Springboot项目</title>
    <link href="http://example.com/2022/10/07/Docker%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2022/10/07/Docker%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-10-07T04:56:24.000Z</published>
    <updated>2022-10-07T04:57:17.938Z</updated>
    
    <content type="html"><![CDATA[<h1 id="就几条命令，一键学会Docker部署SpringBoot项目"><a href="#就几条命令，一键学会Docker部署SpringBoot项目" class="headerlink" title="就几条命令，一键学会Docker部署SpringBoot项目"></a>就几条命令，一键学会Docker部署SpringBoot项目</h1><p><a href="https://juejin.cn/user/3737995267550119"><img src="https://p3-passport.byteimg.com/img/user-avatar/80125354f0e57b25f8c85ab58cb62fce~100x100.awebp" alt="img"></a></p><p><a href="https://juejin.cn/user/3737995267550119">MarkerHub<img src="https://lf3-cdn-tos.bytescm.com/obj/static/xitu_juejin_web/img/lv-5.d08789d.png" alt="lv-5"></a></p><p>2020年04月27日 23:50 · 阅读 3772</p><p>关注</p><p>我们的开源博客项目eblog已经更新完毕了。今天，我们使用docker的安装方式，来安装一下我们的项目，实验环境是centos 7系统上，本实验适用部署大部分Springboot项目。</p><p>eblog项目地址：</p><p><a href="https://link.juejin.cn/?target=https://github.com/MarkerHub/eblog">github.com&#x2F;MarkerHub&#x2F;e…</a></p><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装</span></span><br><span class="line">yum install docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#检验安装是否成功</span></span><br><span class="line">[root@localhost opt]<span class="comment"># docker --version</span></span><br><span class="line">Docker version 1.13.1, build 7f2769b/1.13.1</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#换镜像源</span></span><br><span class="line">sudo vim /etc/docker/daemon.json</span><br><span class="line">内容如下：</span><br><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://m9r2r2uj.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">保存退出，重启docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启</span></span><br><span class="line">systemctl restart docker</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><p>首先上dockerHub搜索redis，点击进入详情页之后，拉到下面就可以看到how to use，如果需要选择特定的版本，有Supported tags给我们选择，然后如果拉取最新的版本的话，拉倒下面就教程。</p><ul><li><a href="https://link.juejin.cn/?target=https://hub.docker.com/_/redis">hub.docker.com&#x2F;_&#x2F;redis</a></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉取redis的镜像</span></span><br><span class="line"><span class="string">docker</span> <span class="string">pull</span> <span class="string">redis</span></span><br><span class="line"><span class="comment">#查看本地redis镜像</span></span><br><span class="line"><span class="string">docker</span> <span class="string">images</span></span><br><span class="line"><span class="comment">#运行redis</span></span><br><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="string">--name</span> <span class="string">myredis</span> <span class="string">-p</span> <span class="number">6379</span><span class="string">:6379</span> <span class="string">-d</span> <span class="string">redis</span> <span class="string">redis-server</span> <span class="string">--appendonly</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">复制代码</span></span><br></pre></td></tr></table></figure><ul><li>docker run表示运行的意思</li><li>–name myredis 表示起个名字叫myredis</li><li>-p 6379:6379表示把服务器的6379映射到docker的6379端口，这样就可以通过服务器的端口访问docker的端口</li><li>-d 表示以后台服务形式运行redis</li><li>redis redis-server –appendonly yes表示开启持久化缓存模式，可以存到硬盘</li></ul><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><ul><li><a href="https://link.juejin.cn/?target=https://hub.docker.com/_/mysql">hub.docker.com&#x2F;_&#x2F;mysql</a></li></ul><p>MYSQL_ROOT_PASSWORD&#x3D;admin表示root的初始密码</p><p>mysql:5.7.27表示操作的是mysql的5.7.27版本，没有后面的版本号的话，默认是拉取最新版本的mysql。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7.27</span><br><span class="line">docker run --name mymysql -e <span class="attr">MYSQL_ROOT_PASSWORD</span>=admin -d -p <span class="number">3306</span>:<span class="number">3306</span>  mysql:<span class="number">5.7</span>.<span class="number">27</span> </span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>连上mysql，创建数据库eblog，然后把数据库脚本导入进去。 脚本位置：<a href="https://link.juejin.cn/?target=https://github.com/MarkerHub/eblog/blob/master/eblog.sql">github.com&#x2F;MarkerHub&#x2F;e…</a></p><h3 id="安装RabbitMq"><a href="#安装RabbitMq" class="headerlink" title="安装RabbitMq"></a>安装RabbitMq</h3><p>一行命令搞定，注意RABBITMQ_DEFAULT_PASS&#x3D;password是设置密码的意思哈。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d <span class="attr">--hostname</span> my-rabbit <span class="attr">--name</span> myrabbit -e RABBITMQ_DEFAULT_USER=root -e RABBITMQ_DEFAULT_PASS=admin -<span class="selector-tag">p</span> <span class="number">15672</span>:<span class="number">15672</span> -p <span class="number">5672</span>:<span class="number">5672</span> rabbitmq:management</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><h3 id="安装ElasticSearch"><a href="#安装ElasticSearch" class="headerlink" title="安装ElasticSearch"></a>安装ElasticSearch</h3><p>docker 安装 Elasticsearch6.4.3版本 及中文插件安装。</p><p>系统配置</p><p>不配置的话，可能会启动失败</p><p>具体报错：max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]。</p><p>解决：</p><ul><li>sudo sysctl -w vm.max_map_count&#x3D;262144</li></ul><p>启动 ES</p><ul><li>docker run -p 9200:9200 -p 9300:9300 -d –name es_643 elasticsearch:6.4.3</li></ul><p>进入镜像</p><ul><li>docker exec -it es_643 &#x2F;bin&#x2F;bash</li></ul><p>es配置文件位置： &#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml</p><p>安装中文分词插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.4.3/elasticsearch-analysis-ik-6.4.3.zip</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>退出并重启镜像</p><ul><li>exit</li><li>docker restart es_643</li></ul><h3 id="构建eblog的docker镜像"><a href="#构建eblog的docker镜像" class="headerlink" title="构建eblog的docker镜像"></a>构建eblog的docker镜像</h3><p>接下来，我们需要先去clone eblog博客项目，对项目进行打包成jar包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">clone</span> https://github.com/MarkerHub/eblog.git</span><br><span class="line"><span class="built_in">cd</span> eblog</span><br><span class="line"><span class="comment"># 打包</span></span><br><span class="line">mvn clean package -Dmaven.test.skip=<span class="literal">true</span></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>然后把项目 eblog-0.0.1-SNAPSHOT.jar 包上传到服务器中 同eblog-0.0.1-SNAPSHOT.jar的目录，创建一个名称为Dockerfile文件。</p><p>内容如下：</p><ul><li>Dockerfile</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">VOLUME /tmp</span><br><span class="line"></span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line">RUN <span class="built_in">ln</span> -sf /usr/share/zoneinfo/&#123;TZ&#125; /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;&#123;TZ&#125;&quot;</span> &gt; /etc/timezone</span><br><span class="line"></span><br><span class="line">ADD eblog-0.0.1-SNAPSHOT.jar  /app.jar</span><br><span class="line">RUN bash -c <span class="string">&#x27;touch /app.jar&#x27;</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/app.jar&quot;</span>]</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><ul><li>FROM java:8 表示基于jdk8环境</li><li>EXPOSE 8080 表示对外暴露的端口是8080</li><li><ul><li>VOLUME &#x2F;tmp 表示挂载到&#x2F;tmp目录</li></ul></li><li>ADD eblog-0.0.1-SNAPSHOT.jar &#x2F;app.jar 表示把jar包复制到镜像服务里面的根目录，并改名称app.jar</li><li>RUN bash -c ‘touch &#x2F;app.jar’ 表示执行创建app.jar</li><li>ENTRYPOINT [“java”,”-jar”,”&#x2F;app.jar”] 表示执行启动命令java -jar</li></ul><p>接下来，我们安装Dockrfile的命令，把eblog-0.0.1-SNAPSHOT.jar构建成docker的镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建镜像，注意后面有个点哈。</span></span><br><span class="line">docker build -t eblog .</span><br><span class="line"><span class="comment">#查看镜像</span></span><br><span class="line">docker images</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>这步骤完成之后，我们就可以在准备工作就已经完成啦，接下来，我们就直接启动我们的项目哈。</p><h3 id="启动eblog项目"><a href="#启动eblog项目" class="headerlink" title="启动eblog项目"></a>启动eblog项目</h3><p>启动命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:8080 -p 9326:9326 --name eblog --<span class="built_in">link</span> es_643:ees --<span class="built_in">link</span> myrabbit:erabbit --<span class="built_in">link</span> mymysql:emysql --<span class="built_in">link</span> myredis:eredis -d eblog</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>-p 8080:8080 -p 9326:9326 ：9326是因为即时聊天需要用到的ws端口 –link es:ees 表示关联容器，把容器es起别名为ees</p><p>查看eblog打印日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f eblog</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p>这时候我们查看就可以通过8080端口访问我们的项目了！！！</p><p>到此项目运行成功！！</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>使用docker compose编排形式会更简单！</p><h3 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h3><p>链接：<a href="https://link.juejin.cn/?target=https://www.bilibili.com/video/BV1dk4y1r7pi">www.bilibili.com/video/BV1dk…</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;就几条命令，一键学会Docker部署SpringBoot项目&quot;&gt;&lt;a href=&quot;#就几条命令，一键学会Docker部署SpringBoot项目&quot; class=&quot;headerlink&quot; title=&quot;就几条命令，一键学会Docker部署SpringBoot项目&quot;&gt;</summary>
      
    
    
    
    
    <category term="Docker部署SpringBoot项目" scheme="http://example.com/tags/Docker%E9%83%A8%E7%BD%B2SpringBoot%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>VueAdmin部署</title>
    <link href="http://example.com/2022/10/07/VueAdmin%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2022/10/07/VueAdmin%E9%83%A8%E7%BD%B2/</id>
    <published>2022-10-07T04:43:30.000Z</published>
    <updated>2022-10-07T04:44:00.857Z</updated>
    
    <content type="html"><![CDATA[<h1 id="手把手教你Docker-nginx部署Springboot-vue前后端分离项目"><a href="#手把手教你Docker-nginx部署Springboot-vue前后端分离项目" class="headerlink" title="手把手教你Docker+nginx部署Springboot+vue前后端分离项目"></a>手把手教你Docker+nginx部署Springboot+vue前后端分离项目</h1><h3 id="上线前准备"><a href="#上线前准备" class="headerlink" title="上线前准备"></a>上线前准备</h3><p>这里我们同步演示怎么部署到win环境和linux（centos7）系统中，前端服务器采用nginx部署，并使用docker统一管理前后端服务器。</p><p>所以我们会用到：</p><ul><li>nginx</li><li>docker compose</li></ul><p>希望你看视频前有点基础哈，当然了，这次部署比较简单，不需要很精通，一般看了我的视频应该都能部署成功的哈。</p><p>话不多说，直接上手！别忘了给我一个一键三联哈，顺便关注我B站，感谢！</p><h3 id="1、win环境"><a href="#1、win环境" class="headerlink" title="1、win环境"></a>1、win环境</h3><p>win环境我就用本机来演示了，我们需要分别打包前后端，前后端打包都是一条命令即可，只不过我们打包之前注意需要配置好线上的环境参数等。</p><h4 id="1-1、前端"><a href="#1-1、前端" class="headerlink" title="1.1、前端"></a>1.1、前端</h4><p>先来配置一下后端的调用路径，因为现在部署在本地localhost，所以在axios.js中，我们配置好链接，因为等下后端部署也是本机，所以我这里直接这样配置就好了，如下：</p><ul><li><p>src\axios.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.baseURL = &quot;http://localhost:8081&quot;</span><br></pre></td></tr></table></figure><p>上面配置的就是前端访问后端接口的服务。<br>然后前端部署还需要考虑一个问题：打包之后项目资源引用路径，比如我们打包后链接是否需要带项目名称等。按照Vue官方的部署说明，我们添加一个<strong>vue.config.js</strong>文件，</p></li><li><p>vueblog-vue&#x2F;vue.config.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">publicPath: &#x27;/&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然了，publicPath默认其实是空的，也就是publicPath: ‘’，两个效果貌似其实是一样的，哈哈哈，我只是提醒一下有这回事而已，嘿嘿。<br>设置完毕之后，我们执行打包命令：</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 打包命令</span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>命令执行之后，我们在项目根目录下就可以找到一个dist的目录，这个就是打包之后的文件夹，里面有个index.html，但是我们点击直接打开是看不到任何内容的，这时候，我们需要部署到nginx中。<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/e6f843e72b754170979ff89d30fa4ddc.png" alt="图片"></p><p>首先我们下载一个nginx，下载地址：<a href="http://nginx.org/en/download.html%EF%BC%8C%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E4%B8%8B%E8%BD%BDnginx/Windows-1.18.0%E7%89%88%E6%9C%AC%EF%BC%8C%E4%B8%8B%E8%BD%BD%E4%B9%8B%E5%90%8E%E8%A7%A3%E5%8E%8Bzip%E3%80%82%E6%A0%B9%E6%8D%AE%E6%88%91%E4%BB%AC%E5%AF%B9nginx%E7%9A%84%E7%86%9F%E6%82%89%EF%BC%8C%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E6%88%91%E4%BB%AC%E6%94%BE%E5%9C%A8html%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E9%9D%A2%EF%BC%8C%E6%89%80%E4%BB%A5%E5%85%88%E6%8A%8Ahtml%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E7%9A%84index.html%E5%92%8C50x.html%E5%88%A0%E6%8E%89%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8A%8A%E6%89%93%E5%8C%85%E5%87%BA%E6%9D%A5%E7%9A%84dist%E6%96%87%E4%BB%B6%E5%A4%B9%E5%86%85%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E9%83%BD%E5%A4%8D%E5%88%B6%E5%88%B0nginx%E7%9A%84html%E4%B8%AD%EF%BC%8C%E5%A6%82%E5%9B%BE%EF%BC%9A">http://nginx.org/en/download.html，这里我们下载nginx/Windows-1.18.0版本，下载之后解压zip。根据我们对nginx的熟悉，静态文件我们放在html文件夹下面，所以先把html文件夹中的index.html和50x.html删掉，然后把打包出来的dist文件夹内的所有文件都复制到nginx的html中，如图：</a></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/b9c6f2e4f249418aaac8fb9b1cf76db9.png" alt="图片"></p><p>双击nginx.exe启动nginx，然后浏览器输入<a href="http://localhost/">http://localhost</a>，出现了我们熟悉的界面，虽然没有博客数据，链接也自动跳转到了<a href="http://localhost/blogs%EF%BC%8C">http://localhost/blogs，</a></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/f62108a4241e4b22a8efb9f9db89e963.png" alt="图片"></p><p>我们点击任意一个链接或者按钮或者刷新界面，这时候出现了404：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/7854f0f0b97747368331c6de57299f0a.png" alt="图片"></p><p>刷新之后nginx就找不到路由了，这是为啥，得和你们科普一下，vue项目的入口是index.html文件，nginx路由的时候都必须要先经过这个文件，所以我们得给nginx定义一下规则，让它匹配不到资源路径的时候，先去读取index.html，然后再路由。所以我们配置一下nginx.conf文件。具体操作就是找到<strong>location &#x2F;</strong>,添加上一行代码<strong>try_files $uri $uri&#x2F; &#x2F;index.html last</strong>;如下：</p><ul><li><p>nginx-1.18.0&#x2F;conf&#x2F;nginx.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  root   html;</span><br><span class="line">  try_files $uri $uri/ /index.html last;</span><br><span class="line">  index  index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一行代码是什么意思呢？</p><p>try_files的语法规则： 格式1：try_files file … uri，表示按指定的file顺序查找存在的文件，并使用第一个找到的文件进行请求处理，last表示匹配不到就内部直接匹配最后一个。</p></li></ul><p>重启nginx之后，链接再刷新都正常啦。但是没有数据，所以我们去部署一下后端。windows环境nginx的重启我一般都是打开任务管理器直接干掉nginx进程，然后再重新双击的~~</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/a1b0e6cb51fe4e57a8acc2b5ae252d5e.png" alt="图片"></p><h4 id="1-2、后端"><a href="#1-2、后端" class="headerlink" title="1.2、后端"></a>1.2、后端</h4><p>后端的打包就简单多了，应该大家都挺熟悉的，注意配置redis、mysql的链接密码啥的，然后执行命令，本机测试，redis和mysql我都已经提前安装好的了，sql文件也在vueblog-java的resources目录下。</p><p>对了，pom.xml文件里面，spring-boot-maven-plugin之前注释掉了，现在一定要打开。不然执行jar会找不到主类。</p><ul><li>pom.xml</li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/acf52fdbf43b4094816461fe490cf946.png" alt="图片"></p><p>执行打包命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 跳过测试打包</span><br><span class="line">mvn clean package -Dmaven.test.skip=true</span><br></pre></td></tr></table></figure><p>得到target下的vueblog-0.0.1-SNAPSHOT.jar，然后再执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar vueblog-0.0.1-SNAPSHOT.jar --spring.profiles.active=default</span><br></pre></td></tr></table></figure><p>后端上线之后，我们再访问下前端，发现已经可以正常浏览网页啦！spring.profiles.active表示指定环境配置文件。<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/7349025903a2439ba475a758f91935c8.png" alt="图片"></p><h3 id="2、linux环境"><a href="#2、linux环境" class="headerlink" title="2、linux环境"></a>2、linux环境</h3><p>linux环境部署相对复杂一点，因为我们还要部署redis、mysql等。之前我发布过一个视频，是部署传统的博客项目eblog，采用的是docker容器，但是我们没有docker compose进行编排，这次我们使用docker compose来编排我们的服务，一起性搞定部署。</p><p>二话不说，我们先来安装一下docker和docker compose，对于docker知识还不是特别懂的同学，建议自行去补习补习哈。</p><h4 id="2-1、安装docker"><a href="#2-1、安装docker" class="headerlink" title="2.1、安装docker"></a>2.1、安装docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#安装</span><br><span class="line">yum install docker</span><br><span class="line">#检验安装是否成功</span><br><span class="line">[root@localhost opt]# docker --version</span><br><span class="line">Docker version 1.13.1, build 7f2769b/1.13.1</span><br><span class="line">#启动</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="2-2、安装docker-compose"><a href="#2-2、安装docker-compose" class="headerlink" title="2.2、安装docker compose"></a>2.2、安装docker compose</h4><p>可以参考：<a href="https://docs.docker.com/compose/install/">https://docs.docker.com/compose/install/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line">#</span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class="line"># 检查是否安装成功</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h4 id="2-3、编写Dockerfile文件"><a href="#2-3、编写Dockerfile文件" class="headerlink" title="2.3、编写Dockerfile文件"></a>2.3、编写Dockerfile文件</h4><p>因为我们的项目需要成为docker的镜像，所以我们必须先编写Dockerfile文件构建我们的项目镜像然后进行编排，Dockerfile文件可以帮我们进行构建。</p><ul><li><p>Dockerfile</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ADD vueblog-0.0.1-SNAPSHOT.jar app.jar</span><br><span class="line">RUN bash -c &#x27;touch /app.jar&#x27;</span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/app.jar&quot;, &quot;--spring.profiles.active=pro&quot;]</span><br></pre></td></tr></table></figure><p>上面几行命令其实很简单，首先依赖jdk8环境，对外暴露8080，然后就是复制vueblog-0.0.1-SNAPSHOT.jar到docker容器中并命名为app.jar，最后是执行命令</p><p>java -jar &#x2F;app.jar —spring.profiles.active&#x3D;pro</p><p>，使用的是我们另外编写的一个线上环境配置。</p></li><li><p>application-pro.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># DataSource Config</span><br><span class="line">spring:</span><br><span class="line">datasource:</span><br><span class="line">  driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">  url: jdbc//localhost:3306/vueblog?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">  username: root</span><br><span class="line">  password: admin</span><br><span class="line">shiro-redis:</span><br><span class="line">enabled: true</span><br><span class="line">redis-manager:</span><br><span class="line">  host: 127.0.0.1:6379</span><br></pre></td></tr></table></figure><p>等会儿我们需要修改application-pro.yml的redis和mysql链接等信息的一些配置，需要注意。</p></li></ul><h4 id="2-4、编写docker-compose-yml文件"><a href="#2-4、编写docker-compose-yml文件" class="headerlink" title="2.4、编写docker-compose.yml文件"></a>2.4、编写docker-compose.yml文件</h4><p>我们需要用到的软件与服务分别有nginx、mysql、redis、还有我们的springboot项目，所以编写如下：</p><ul><li><p>docker-compose.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">nginx: # 服务名称，用户自定义</span><br><span class="line">  image: nginx:latest  # 镜像版本</span><br><span class="line">  ports:</span><br><span class="line">  - 80:80  # 暴露端口</span><br><span class="line">  volumes: # 挂载</span><br><span class="line">  - /root/nginx/html:/usr/share/nginx/html</span><br><span class="line">  - /root/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">  privileged: true # 这个必须要，解决nginx的文件调用的权限问题</span><br><span class="line">mysql:</span><br><span class="line">  image: mysql:5.7.27</span><br><span class="line">  ports:</span><br><span class="line">  - 3306:3306</span><br><span class="line">  environment: # 指定用户root的密码</span><br><span class="line">    - MYSQL_ROOT_PASSWORD=admin</span><br><span class="line">redis:</span><br><span class="line">  image: redis:latest</span><br><span class="line">vueblog:</span><br><span class="line">  image: vueblog:latest</span><br><span class="line">  build: . # 表示以当前目录下的Dockerfile开始构建镜像</span><br><span class="line">  ports:</span><br><span class="line">  - 8081:8081</span><br><span class="line">  depends_on: # 依赖与mysql、redis，其实可以不填，默认已经表示可以</span><br><span class="line">    - mysql</span><br><span class="line">    - redis</span><br></pre></td></tr></table></figure><p>上面的意思，我都用注释解释一遍了，希望可以讲清楚！需要注意的是，nginx中我们对nginx的放置静态资源的html文件夹和配置文件nginx.conf进行了一个挂载，所以我们打包后的文件放置到宿主机</p><p>&#x2F;root&#x2F;nginx&#x2F;html</p><p>文件目录就行了哈</p><h4 id="2-5、修改application-pro-yml"><a href="#2-5、修改application-pro-yml" class="headerlink" title="2.5、修改application-pro.yml"></a>2.5、修改application-pro.yml</h4></li></ul><p>然后我们再回头看看application-pro.yml文件，mysql和redis的链接之前还是localhost，现在我们需要修改成容器之间的调用，如何知道mysql和redis的链接地址呢？docker compose就帮我们解决了这个问题，我们可以使用镜像容器的服务名称来表示链接。比如docker-compose.yml中mysql的服务名称就叫mysql、redis就叫redis。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/dbd9201e9a64423582e245a9d0d001cf.png" alt="图片"></p><p>所以我们最终得到的配置文件如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/28a935f2f8854759bead5d5ca62a2a11.png" alt="图片"></p><h4 id="2-6、准备好nginx的挂载目录和配置"><a href="#2-6、准备好nginx的挂载目录和配置" class="headerlink" title="2.6、准备好nginx的挂载目录和配置"></a>2.6、准备好nginx的挂载目录和配置</h4><p>docker-compose.yml中已经提到，</p><ul><li>宿主机的挂载目录：&#x2F;root&#x2F;nginx&#x2F;html</li><li>挂载配置：&#x2F;root&#x2F;nginx&#x2F;nginx.conf</li></ul><p>所以我们在root目录下新建nginx目录，并进入nginx目录下新建html目录和一个nginx.conf配置文件。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/f2d055c3ecf944108f28bdc4f2daf38e.png" alt="图片"></p><p>然后对nginx.conf进行编写，具体配置如下：</p><ul><li><p>nginx.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line">events &#123;</span><br><span class="line">  worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">  include       mime.types;</span><br><span class="line">  default_type  application/octet-stream;</span><br><span class="line">  sendfile        on;</span><br><span class="line">  keepalive_timeout  65;</span><br><span class="line">  server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  localhost;</span><br><span class="line">      location / &#123;</span><br><span class="line">          root   /usr/share/nginx/html;</span><br><span class="line">          try_files $uri $uri/ /index.html last; # 别忘了这个哈</span><br><span class="line">          index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">      error_page   500 502 503 504  /50x.html;</span><br><span class="line">      location = /50x.html &#123;</span><br><span class="line">          root   html;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-7、上传前端"><a href="#2-7、上传前端" class="headerlink" title="2.7、上传前端"></a>2.7、上传前端</h4></li></ul><p>前端打包之后先修改前端调用后端的接口，因为我是虚拟机，所以配置如下：</p><ul><li><p>axios.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.defaults.baseURL = &quot;http://192.168.0.117:8081&quot;</span><br></pre></td></tr></table></figure><p>然后</p><p>npm run build</p><p>打包得到</p><p>dist</p><p>文件夹，并把dist压缩成dist.zip上传到linux之后解压到</p><p>&#x2F;root&#x2F;nginx&#x2F;html</p><p>目录下。如下图：</p></li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/4a30914758cf4e2f84548d7631980960.png" alt="图片"></p><h4 id="2-8、部署后端"><a href="#2-8、部署后端" class="headerlink" title="2.8、部署后端"></a>2.8、部署后端</h4><p>一切准备就绪之后，我们就开始编排部署了哈。</p><p>首先本地打包vueblog项目，vueblog-0.0.1-SNAPSHOT.jar，并上传到linux中，同时docker-compose.yml、Dockerfile也上传到同一目录下。如图所示：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/35413954bd1a4fc78823e26f9a2ff2a6.png" alt="图片"></p><p>然后我们执行一下编排命令:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 开始编排</span><br><span class="line">cd ~</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>其中-d表示后台服务形式启动<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/fd9b5b1103ff408b8a7aaae79116df25.png" alt="图片"></p><p>然后我们稍等片刻，特别是开始<strong>Building vueblog</strong>的时候可能时间有点长，耐心等待即可！</p><p>最后提示如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/919cf60d670f43198c8c3f43d512fa89.png" alt="图片"></p><p>说明我们已经成功编排啦。</p><p>nginx是80端口，所以我们直接输入ip地址，如下可以看到一个界面然后有弹窗：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/a32711d1d1e94ee7ad702c7bb064a4f5.png" alt="图片"></p><p>这个简单，是因为我们的数据库还没创建哈。接下来我们去手动创建一下数据库并导入sql文件。</p><ul><li>vueblog-java&#x2F;src&#x2F;main&#x2F;resources&#x2F;vueblog.sql</li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/963212f8ddd241b2ba7b6af4152e0572.png" alt="图片"></p><p>然后再刷新一下浏览器链接，数据就出来啦，搞定，轻松！</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20201021/5a9d24b5b4bb482aa8d6400fc8b969c7.png" alt="图片"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;手把手教你Docker-nginx部署Springboot-vue前后端分离项目&quot;&gt;&lt;a href=&quot;#手把手教你Docker-nginx部署Springboot-vue前后端分离项目&quot; class=&quot;headerlink&quot; title=&quot;手把手教你Docker+</summary>
      
    
    
    
    
    <category term="VueAdmin部署" scheme="http://example.com/tags/VueAdmin%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>VueAdmin前端</title>
    <link href="http://example.com/2022/10/07/VueAdmin%E5%89%8D%E7%AB%AF/"/>
    <id>http://example.com/2022/10/07/VueAdmin%E5%89%8D%E7%AB%AF/</id>
    <published>2022-10-07T04:42:05.000Z</published>
    <updated>2022-10-07T04:42:58.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-前端笔记"><a href="#开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-前端笔记" class="headerlink" title="开发SpringBoot+Jwt+Vue的前后端分离后台管理系统VueAdmin - 前端笔记"></a>开发SpringBoot+Jwt+Vue的前后端分离后台管理系统VueAdmin - 前端笔记</h1><p><a href="https://www.zhuawaba.com/users/2">社长 </a>1年前 ⋅ 54017 阅读</p><p>一个spring security + jwt + vue的前后端分离项目！综合运用！</p><p>关注公众号 MarkerHub，回复【 <strong>VueAdmin</strong> 】可以加群讨论学习、另外还会不定时安排B站视频直播答疑！</p><hr><blockquote><p>首发公众号：MarkerHub</p><p>作者：吕一明</p><p>视频讲解：<a href="https://www.bilibili.com/video/BV1af4y1s7Wh/">https://www.bilibili.com/video/BV1af4y1s7Wh/</a></p><p>线上演示：<a href="https://www.markerhub.com/vueadmin/">https://www.markerhub.com/vueadmin/</a></p><p>转载请保留此应用，万分感谢！</p></blockquote><h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>在之前，我写了一个前后端分离的简易<a href="https://www.bilibili.com/video/BV1PQ4y1P7hZ/?fileGuid=HXqVy6jx8qkWKPJq">博客系统vueblog</a>，在B站也已经收获了13万的播放量了，也还算受欢迎吧，感谢大家的认同与支持！同时有些刚入门的同学还是说有些地方不清楚，跟着做的时候还是会出现错误，或者不理解为啥这样处理，这次我更详细点。</p><p>而接下来，我们即将开发一个前后端分离的后台管理系统<a href="https://www.markerhub.com/vueadmin/">VueAdmin</a>。这个管理系统与我们之前的博客系统技术选型上其实有很多相似之处，只不过权限框架我选用了spring security，然后相对来说权限模块开发就多点代码，也仅此而已了。对了前端的系统界面也是我们一步步开发的，所以希望能帮助大家熟悉一个后台管理系统，也希望大家学到东西哈。</p><p>我的公众号MarkerHub，希望大家能关注支持我哈！</p><h2 id="2-安装vue环境，并新建Vue项目"><a href="#2-安装vue环境，并新建Vue项目" class="headerlink" title="2. 安装vue环境，并新建Vue项目"></a>2. 安装vue环境，并新建Vue项目</h2><p>前端我们依然选择的是Vue+ElementUI的组合，主要还是因为这个主流呀。针对Vue，如果还不熟悉的同学，建议去看看这个视频【<a href="https://www.bilibili.com/video/BV125411W73W/?fileGuid=HXqVy6jx8qkWKPJq">4个小时带你快速入门vue</a>】，我也是学这个视频入门的，就学了半天，哈哈。主要Js基础扎实点学起来挺快的。</p><p>首先我们安装vue的环境，我实践的环境是windows 10哈。</p><p>1、首先我们上node.js官网(<a href="https://nodejs.org/zh-cn/?fileGuid=HXqVy6jx8qkWKPJq">https://nodejs.org/zh-cn/</a>)，下载最新的长期版本，直接运行安装完成之后，我们就已经具备了node和npm的环境啦。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/054c315f93334390ad411c5f4038fe4a.png" alt="图片"></p><p>安装完成之后检查下版本信息：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/6e0b14343ad840619adefd463c040f73.png" alt="图片"></p><p>这就表示你已经安装成功啦，牛逼开始的第一步！</p><p>2、接下来，我们安装vue的环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 安装淘宝npm</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"># vue-cli 安装依赖包</span><br><span class="line">cnpm install --g vue-cli</span><br><span class="line"># 打开vue的可视化管理工具界面</span><br><span class="line">vue ui</span><br></pre></td></tr></table></figure><p>上面我们分别安装了淘宝npm，cnpm是为了提高我们安装依赖的速度。vue ui是<a href="https://github.com/vue">@vue</a>&#x2F;cli3.0增加一个可视化项目管理工具，可以运行项目、打包项目，检查等操作。对于初学者来说，可以少记一些命令，哈哈。<br>3、创建vueadmin-vue项目</p><p>运行vue ui之后，</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/594344581ce34fbb99f30f7d9c136fcd.png" alt="图片"></p><p>会为我们打开一个<a href="http://localhost:8080/">http://localhost:8080</a> 的页面：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/46aa173f32f04e65aa6594b5d1ad3da0.png" alt="图片"></p><p>我们将在这个页面完成我们的前端Vue项目的新建。然后切换到【创建】，注意创建的目录最好是和你运行vue ui同一级。这样方便管理和切换。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/3c913e6167e94bdbab49ac42c4e461cf.png" alt="图片"></p><p>然后点击按钮【在此创建新项目】下一步中，项目文件夹中输入项目名称“vueblog-vue”，其他不用改。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/f9e037d1eb054383a50f5012f4047698.png" alt="图片"></p><p>点击下一步，选择【手动】，再点击下一步，如图点击按钮，勾选上路由Router、状态管理Vuex，去掉js的校验。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/f3221f0464fb4635ae5e706916cd03d0.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/c6ee8d9cfd994a709908289480f0ee7b.png" alt="图片"></p><p>下一步中，也选上【Use history mode for router】，点击创建项目，然后弹窗中选择按钮【创建项目，不保存预设】，就进入项目创建啦。</p><p>稍等片刻之后，项目就初始化完成了。上面的步骤中，我们创建了一个vue项目，并且安装了Router、Vuex。这样我们后面就可以直接使用。</p><ul><li><strong>Router：</strong> WebApp的链接路径管理系统，简单就是建立起url和页面之间的映射关系</li><li><strong>Vuex：</strong> 一个专为 Vue.js 应用程序开发的<code>状态管理模式</code>，简单来说就是为了方便数据的操作而建立的一个临时” 前端数据库“，用于各个组件间共享和检测数据变化。</li></ul><p>ok，我们使用IDEA导入项目，看看创建好的项目长啥样子：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/0c6901a867474027a12082098ddc0f18.png" alt="图片"></p><p>当然了，IDEA我们要预先先安装好一个Vue插件，这样我们就可以使用IDEA像WebStorm一样开发Vue项目啦，毕竟都是同一个家族出品的哈哈。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/47b9ecfa900347cd8199b51aae5f0369.png" alt="图片"></p><p>然后我们在IDEA窗口的底部打开Terminal命令行窗口，输入npm run serve运行vue项目，我们就可以通过<a href="http://localhost:8080/?fileGuid=HXqVy6jx8qkWKPJq">http://localhost:8080/</a>打开我们的项目了。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/4e9f8fcb4eb34b12887f8759acca83cb.png" alt="图片"></p><p>效果如下，Hello Vue！</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/2ef2f52f5472431c8b79dc34cba0c644.png" alt="图片"></p><p>线上演示：<a href="https://www.markerhub.com/vueadmin/">https://www.markerhub.com/vueadmin/</a></p><h2 id="3-安装element-ui"><a href="#3-安装element-ui" class="headerlink" title="3. 安装element-ui"></a>3. 安装element-ui</h2><p>接下来我们引入element-ui组件（<a href="https://element.eleme.cn/#/zh-CN/component/installation?fileGuid=HXqVy6jx8qkWKPJq">https://element.eleme.cn</a>），这样我们就可以获得好看的vue组件，开发好看的后台管理系统的界面啦。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/f0bfb7d234cd4d93bd3434fbe17aaeae.png" alt="图片"></p><p>命令很简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 切换到项目根目录</span><br><span class="line">cd vueadmin-vue</span><br><span class="line"># 或者直接在idea中执行下面命令</span><br><span class="line"># 安装element-ui</span><br><span class="line">cnpm install element-ui --save</span><br></pre></td></tr></table></figure><p>然后我们打开项目src目录下的main.js，引入element-ui依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import Element from &#x27;element-ui&#x27;</span><br><span class="line">import &quot;element-ui/lib/theme-chalk/index.css&quot;</span><br><span class="line">Vue.use(Element)</span><br></pre></td></tr></table></figure><p>这样我们就可以愉快得在官网上选择组件复制代码到我们项目中直接使用啦。</p><h2 id="4-安装axios、qs、mockjs"><a href="#4-安装axios、qs、mockjs" class="headerlink" title="4. 安装axios、qs、mockjs"></a>4. 安装axios、qs、mockjs</h2><ul><li><strong>axios</strong>：一个基于 promise 的 HTTP 库，类ajax</li><li><strong>qs</strong>：查询参数序列化和解析库</li><li><strong>mockjs</strong>：为我们生成随机数据的工具库</li></ul><p>接下来，我们来安装axios（<a href="http://www.axios-js.com/?fileGuid=HXqVy6jx8qkWKPJq">http://www.axios-js.com/</a>），axios是一个基于 promise 的 HTTP 库，这样我们进行前后端对接的时候，使用这个工具可以提高我们的开发效率。</p><p>安装命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install axios --save</span><br></pre></td></tr></table></figure><p>然后同样我们在main.js中全局引入axios。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#x27;axios&#x27;</span><br><span class="line">Vue.prototype.$axios = axios //</span><br></pre></td></tr></table></figure><p>组件中，我们就可以通过this.$axios.get()来发起我们的请求了哈。当然了，后面我们添加axios拦截的时候我们需要修改引入的编写。<br>同时，我们同步安装一个qs，什么是qs？qs是一个流行的查询参数序列化和解析库。可以将一个普通的object序列化成一个查询字符串，或者反过来将一个查询字符串解析成一个object,帮助我们查询字符串解析和序列化字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install qs --save</span><br></pre></td></tr></table></figure><p>然后因为后台我们现在还没有搭建，无法与前端完成数据交互，因此我们这里需要mock数据，因此我们引入mockjs（<a href="http://mockjs.com/?fileGuid=HXqVy6jx8qkWKPJq">http://mockjs.com/</a>），方便后续我们提供api返回数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install mockjs --save-dev</span><br></pre></td></tr></table></figure><p>然后我们在src目录下新建mock.js文件，用于编写随机数据的api，然后我们需要在main.js中引入这个文件：</p><ul><li><p>src&#x2F;main.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(&quot;./mock&quot;) //引入mock数据，关闭则注释该行</span><br></pre></td></tr></table></figure><p>后面我们mackjs会自动为我们拦截ajax，并自动匹配路径返回数据！</p><h2 id="5-页面路由"><a href="#5-页面路由" class="headerlink" title="5. 页面路由"></a>5. 页面路由</h2></li></ul><p>接下来，在开发页面之前我们需要先定义路由。传统项目开发，我们都是通过链接到达控制器然后再到页面渲染的。而类似于Vue这样的前后端分离性质的框架，我们是先访问页面，然后再异步加载数据渲染。而在Vue中，路由的管理是有个专门的组件叫Router管理的。</p><p>我们在新建项目的时候也提了一下，大家还记得吧。我们当时说：</p><ul><li><strong>Router</strong>：WebApp的链接路径管理系统，简单就是建立起url和页面之间的映射关系</li></ul><p>所以我们要打开页面然后开发页面，我们需要先配置路由，然后再开发，这样我们可以试试看到效果。项目中，src\router\index.js就是用来配置路由的。</p><p>我们在views文件夹下定义几个页面：</p><ul><li>Login.vue（登录页面）</li><li>Index.vue（首页）</li></ul><p>我们新建Vue页面的时候可以这样新建：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/a79e365a5b484d0dbaa1c7e307f61eee.png" alt="图片"></p><p>然后再路由中心配置配置url与vue页面的映射关系，参考原本的默认写法，我们很容易写出以下代码：</p><ul><li><p>src\router\index.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import VueRouter from &#x27;vue-router&#x27;</span><br><span class="line">import Login from &quot;../views/Login&quot;;</span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">const routes = [</span><br><span class="line">&#123;</span><br><span class="line">  path: &#x27;/index&#x27;,</span><br><span class="line">  name: &#x27;Index&#x27;,</span><br><span class="line">  component: () =&gt; import(&#x27;../views/Index.vue&#x27;)</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  path: &#x27;/login&#x27;,</span><br><span class="line">  name: &#x27;Login&#x27;,</span><br><span class="line">  component: Login</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">mode: &#x27;history&#x27;,</span><br><span class="line">base: process.env.BASE_URL,</span><br><span class="line">routes</span><br><span class="line">&#125;)</span><br><span class="line">export default router</span><br></pre></td></tr></table></figure><p>得到效果如下：</p></li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/0442a0c0f5f6481c8dafe54e6994b131.png" alt="图片"></p><p>通过npm run serve运行项目，打开<a href="http://localhost:8080/login?fileGuid=HXqVy6jx8qkWKPJq">http://localhost:8080/login</a>发现页面长这样，明显我们新建的Login.vue里面是没有内容的，但这里有个Home|About，明显是被其他地方嵌套过来的，这是啥原因呢？</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/091eb86b20b1487296376bb37cfd3428.png" alt="图片"></p><p>这里解释一下，我们新建的Vue项目，如果没其他配置，那么默认的就是一个单页面应用，也就是说这个应用是由一个外壳页面和多个页面片段组成的，页面跳转的时候其实始终都没有离开外壳页面，替换的只是加载的页面片段而已。</p><p>那么对应到我们的vueadmin项目，外壳页面就是App.vue，片段页面就是Login.vue，所以我们刚刚通过&#x2F;login链接看到的页面效果就是App.vue+Login.vue的结果。所以我们进入App.vue页面看看：</p><ul><li>src&#x2F;App.vue</li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/b6a2d12ed1594dd5a86c704270614ac4.png" alt="图片"></p><p>果然我们在template标签中找到了相关的html，我们把id为nav的这个div直接删除不要了。这个<router-view/>在这里就是现实我们链接到的片段页面，也就是Login.vue。所以这样就清晰了，我们输入url的时候会调整到App.vue，然后路由会匹配到我们对应的vue页面，这样完成的页面就渲染出来了。</p><p>然后我们再调整一下全局的样式，具体代码如下：</p><ul><li>src&#x2F;App.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">      &lt;router-view/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">   html, body, #app &#123;</span><br><span class="line">      font-family: &#x27;Helvetica Neue&#x27;, &#x27;Hiragino Sans GB&#x27;, &#x27;WenQuanYi Micro Hei&#x27;, &#x27;Microsoft Yahei&#x27;, sans-serif;</span><br><span class="line">      height: 100%;</span><br><span class="line">      padding: 0;</span><br><span class="line">      margin: 0;</span><br><span class="line">      font-size: 15px;</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-登陆界面开发"><a href="#6-登陆界面开发" class="headerlink" title="6. 登陆界面开发"></a>6. 登陆界面开发</h2><p>ok，万事具备，接下来我们来开发我们第一个页面Login.vue（<a href="http://localhost:8080/login?fileGuid=HXqVy6jx8qkWKPJq">http://localhost:8080/login</a>），目前页面是完全空白的。一般登录页面就一个简单的表单：用户名、登录密码和验证码。然后我还想在表单左边添加一个图片，是我自己的公众号的二维码，然后中间用一条竖线分开。</p><p>一开始的时候为了页面风格的统一，我们采用了Element Ui的组件库，所以这里我们就直接去element的官网。上面描述中我们需要左右分开显示，所以先找到Loyout布局然后再弄表单，然后我们涉及到的后台交互有2个：</p><ul><li>获取登录验证码</li><li>提交登录表单完成登录</li></ul><p>因为后台系统我们暂时还没有开发，所以这里我们需要自己mock数据完成交互。前面我们已经引入了mockjs，所以我们到mock.js文件中开发我们的api。</p><h4 id="登录交互过程"><a href="#登录交互过程" class="headerlink" title="登录交互过程"></a>登录交互过程</h4><p>我们梳理一下交互流程：</p><ol><li>浏览器打开登录页面</li><li>动态加载登录验证码，因为这是前后端分离的项目，我们不再使用session进行交互，所以后端我打算禁用session，那么验证码的验证就是问题了，所以后端设计上我打算生成验证码同时生成一个随机码，随机码作为key，验证码为value保存到redis中，然后把随机码和验证码图片的Base64字符串码发送到前端</li><li>前端提交用户名、密码、验证码还有随机码</li><li>后台验证验证码是否匹配以及密码是否正确</li></ol><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/4463b9e5c4f14f6b9eb566f8e39c3838.png" alt="图片"></p><p>ok，这样我们就知道mock应该弄成什么样的api了。</p><ul><li>mock.js - 获取登录验证码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 引入mockjs</span><br><span class="line">const Mock = require(&#x27;mockjs&#x27;)</span><br><span class="line">// 获取 mock.Random 对象</span><br><span class="line">// 参考：https://github.com/nuysoft/Mock/wiki/Mock.Random</span><br><span class="line">const Random = Mock.Random</span><br><span class="line">let Result = &#123;</span><br><span class="line">   code: 200,</span><br><span class="line">   msg: &#x27;操作成功&#x27;,</span><br><span class="line">   data: null</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * Mock.mock( url, post/get , function(options))；</span><br><span class="line"> * url 表示需要拦截的 URL，</span><br><span class="line"> * post/get 需要拦截的 Ajax 请求类型</span><br><span class="line"> *</span><br><span class="line"> * 用于生成响应数据的函数</span><br><span class="line"> */</span><br><span class="line">// 获取验证码图片base64编码以及一个随机码</span><br><span class="line">Mock.mock(&#x27;/captcha&#x27;, &#x27;get&#x27;, () =&gt; &#123;</span><br><span class="line">   Result.data = &#123;</span><br><span class="line">      token: Random.string(32), // 获取一个32位的随机字符串,</span><br><span class="line">      captchaImg: Random.dataImage( &quot;120x40&quot;, &quot;11111&quot; ) //生成验证码为11111的base64图片编码</span><br><span class="line">   &#125;</span><br><span class="line">   return Result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>mock生成数据还算简单，一般都是利用Mock.Random对象来生成一些随机数据，具体的用法可以参考<a href="https://github.com/nuysoft/Mock/wiki/Mock.Random%E3%80%82%E7%84%B6%E5%90%8EResult%E6%98%AF%E4%B8%BA%E4%BA%86%E7%BB%9F%E4%B8%80%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%90%8E%E5%8F%B0%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%EF%BC%8C%E4%B8%80%E8%88%AC%E9%83%BD%E6%9C%89%E5%9B%BA%E5%AE%9A%E7%9A%84%E8%BF%94%E5%9B%9E%E6%A0%BC%E5%BC%8F%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%B1%E6%9C%89%E4%BA%86Result%E3%80%82">https://github.com/nuysoft/Mock/wiki/Mock.Random。然后Result是为了统一返回结果，因为后台设计的时候，前后端交互，一般都有固定的返回格式，所以就有了Result。</a></p><ul><li>mock.js - 登录接口</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 因为mock不认识/login?username=xxx，所以用了正则表达式</span><br><span class="line">Mock.mock(RegExp(&#x27;/login*&#x27;), &#x27;post&#x27;, (config) =&gt; &#123;</span><br><span class="line">   // 这里无法在header添加authorization，直接跳过</span><br><span class="line">   console.log(&quot;mock----------------login&quot;)</span><br><span class="line">   return Result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Mock我们不需要什么处理，只需要放回的数据符合前端的要求就行哈。这样我们前端就可以继续往后面开发。</p><p>然后编写登录页面的js</p><ul><li>src&#x2F;views&#x2F;Login.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-row type=&quot;flex&quot; class=&quot;row-bg&quot; justify=&quot;center&quot;&gt;</span><br><span class="line">      &lt;el-col :xl=&quot;6&quot; :lg=&quot;7&quot;&gt;</span><br><span class="line">         &lt;div class=&quot;login-form&quot;&gt;</span><br><span class="line">            &lt;h2&gt;欢迎来到VueAdmin管理系统&lt;/h2&gt;</span><br><span class="line">            &lt;el-image</span><br><span class="line">                  style=&quot;width: 180px; height: 180px&quot;</span><br><span class="line">                  :src=&quot;require(&#x27;@/assets/markerhub/MarkerHub.jpg&#x27;)&quot;</span><br><span class="line">            &gt;&lt;/el-image&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               公众号 MarkerHub</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">               扫码二维码，回复【VueAdmin】获取登录密码</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">      &lt;el-col :span=&quot;1&quot;&gt;</span><br><span class="line">         &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">      &lt;el-col :xl=&quot;6&quot; :lg=&quot;7&quot;&gt;</span><br><span class="line">         &lt;el-form label-position=&quot;right&quot; :rules=&quot;rules&quot; label-width=&quot;80px&quot; :model=&quot;loginForm&quot; ref=&quot;loginForm&quot;&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;用户名&quot; prop=&quot;username&quot; style=&quot;width: 380px;&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;loginForm.username&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;密码&quot; prop=&quot;password&quot; style=&quot;width: 380px;&quot;&gt;</span><br><span class="line">               &lt;el-input type=&quot;password&quot; v-model=&quot;loginForm.password&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;验证码&quot; prop=&quot;code&quot; style=&quot;width: 380px;&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;loginForm.code&quot; style=&quot;width: 172px; float: left;&quot; maxlength=&quot;5&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">               &lt;el-image class=&quot;captchaImg&quot; :src=&quot;captchaImg&quot; @click=&quot;getCaptcha&quot;&gt;&lt;/el-image&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item&gt;</span><br><span class="line">               &lt;el-button type=&quot;primary&quot; @click=&quot;submitForm(&#x27;loginForm&#x27;)&quot;&gt;提交&lt;/el-button&gt;</span><br><span class="line">               &lt;el-button @click=&quot;getPass&quot;&gt;获取密码&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">   &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   import qs from &#x27;qs&#x27;</span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Login&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         return &#123;</span><br><span class="line">            loginForm: &#123;</span><br><span class="line">               username: &#x27;admin&#x27;,</span><br><span class="line">               password: &#x27;markerhub&#x27;,</span><br><span class="line">               code: &#x27;11111&#x27;,</span><br><span class="line">               token: &#x27;&#x27;,</span><br><span class="line">            &#125;,</span><br><span class="line">            rules: &#123;</span><br><span class="line">               username: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入用户名&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               password: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入密码&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               code: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入验证码&#x27;, trigger: &#x27;blur&#x27;&#125;,</span><br><span class="line">                  &#123;min: 5, max: 5, message: &#x27;验证码为5个字符&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">            &#125;,</span><br><span class="line">            captchaImg: &#x27;&#x27;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         submitForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">               if (valid) &#123;</span><br><span class="line">                  this.$axios.post(&#x27;/login?&#x27; + qs.stringify(this.loginForm)).then(res =&gt; &#123;</span><br><span class="line">                     console.log(res.data)</span><br><span class="line">                     const jwt = res.headers[&#x27;authorization&#x27;]</span><br><span class="line">                     // 将jwt存储到应用store中</span><br><span class="line">                     this.$store.commit(&quot;SET_TOKEN&quot;, jwt)</span><br><span class="line">                     this.$router.push(&quot;/index&quot;)</span><br><span class="line">                  &#125;).catch(error =&gt; &#123;</span><br><span class="line">                     this.getCaptcha();</span><br><span class="line">                     console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  &#125;)</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                  this.getCaptcha();</span><br><span class="line">                  console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  return false;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         resetForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].resetFields();</span><br><span class="line">         &#125;,</span><br><span class="line">         getPass() &#123;</span><br><span class="line">            this.$message(&quot;请扫描左边的二维码，回复【VueAdmin】获取登录密码&quot;);</span><br><span class="line">         &#125;,</span><br><span class="line">         getCaptcha() &#123;</span><br><span class="line">            this.$axios.get(&#x27;/captcha&#x27;).then(res =&gt; &#123;</span><br><span class="line">               this.loginForm.token = res.data.data.token</span><br><span class="line">               this.captchaImg = res.data.data.captchaImg</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123;</span><br><span class="line">         this.getCaptcha()</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">   .el-col &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">      height: 100%;</span><br><span class="line">      text-align: center;</span><br><span class="line">   &#125;</span><br><span class="line">   .el-row &#123;</span><br><span class="line">      height: 100%;</span><br><span class="line">      background-color: #fafafa;</span><br><span class="line">   &#125;</span><br><span class="line">   .el-divider &#123;</span><br><span class="line">      height: 200px;</span><br><span class="line">   &#125;</span><br><span class="line">   .captchaImg &#123;</span><br><span class="line">      float: left;</span><br><span class="line">      margin-left: 8px;</span><br><span class="line">      border-radius: 4px;</span><br><span class="line">   &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>配合一点样式的调整，这样登录界面我们就开发完毕啦，如果觉得不清楚，可以去看开发视频哈，一步一步的教学，写文字毕竟讲述还是不够仔细的。</p><h4 id="token的状态同步"><a href="#token的状态同步" class="headerlink" title="token的状态同步"></a>token的状态同步</h4><p>再讲一下，submitForm方法中，提交表单之后做了几个动作，从Header中获取用户的authorization，也就是含有用户登录信息的jwt，然后提交到store中进行状态管理。this.$store.commit(“SET_TOKEN”, jwt)表示调用store中的SET_TOKEN方法，所以我们需要在store中编写方法：</p><ul><li>src&#x2F;store&#x2F;index.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    token: &#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    SET_TOKEN: (state, token) =&gt; &#123;</span><br><span class="line">      state.token = token</span><br><span class="line">      localStorage.setItem(&quot;token&quot;, token)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  modules: &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样登录之后获取到的jwt就可以存储到应用的store以及<strong>localStorage</strong>中，方便使用直接从<strong>localStorage</strong>中获取即可！<br>这样用户登录成功之后就会跳转到&#x2F;index页面this.$router.push(“&#x2F;index”)。</p><h4 id="定义全局axios拦截器"><a href="#定义全局axios拦截器" class="headerlink" title="定义全局axios拦截器"></a>定义全局axios拦截器</h4><p>这里有个问题，那么如果登录失败，我们是需要弹窗显示错误的，比如验证码错误，用户名或密码不正确等。不仅仅是这个登录接口，所有的接口调用都会有这个情况，所以我们想做个拦截器，对返回的结果进行分析，如果是异常就直接弹窗显示错误，这样我们就省得每个接口都写一遍了。</p><p>在src目录下创建一个文件axios.js（与main.js同级），定义axios的拦截：</p><ul><li>src&#x2F;axios.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import axios from &quot;axios&quot;;</span><br><span class="line">import Element from &#x27;element-ui&#x27;</span><br><span class="line">import router from &quot;./router&quot;;</span><br><span class="line">axios.defaults.baseURL = &quot;http://localhost:8081&quot;</span><br><span class="line">const request = axios.create(&#123;</span><br><span class="line">   timeout: 5000,</span><br><span class="line">   headers: &#123;</span><br><span class="line">      &#x27;Content-Type&#x27;: &#x27;application/json; charset=utf-8&#x27;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br><span class="line">request.interceptors.request.use(config =&gt; &#123;</span><br><span class="line">   config.headers[&#x27;Authorization&#x27;] = localStorage.getItem(&quot;token&quot;) // 请求头带上token</span><br><span class="line">   return config</span><br><span class="line">&#125;)</span><br><span class="line">request.interceptors.response.use(response =&gt; &#123;</span><br><span class="line">      let res = response.data;</span><br><span class="line">      console.log(&quot;response&quot;)</span><br><span class="line">      console.log(res)</span><br><span class="line">      if (res.code === 200) &#123;</span><br><span class="line">         return response</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">         Element.Message.error(res.msg? res.msg : &#x27;系统异常！&#x27;, &#123;duration: 3 * 1000&#125;)</span><br><span class="line">         return Promise.reject(response.data.msg)</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   error =&gt; &#123;</span><br><span class="line">      console.log(error)</span><br><span class="line">      if(error.response.data) &#123;</span><br><span class="line">         error.message = error.response.data.msg</span><br><span class="line">      &#125;</span><br><span class="line">      if(error.response.status === 401) &#123;</span><br><span class="line">         router.push(&quot;/login&quot;)</span><br><span class="line">      &#125;</span><br><span class="line">      Element.Message.error(error.message, &#123;duration: 3 * 1000&#125;)</span><br><span class="line">      return Promise.reject(error)</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br><span class="line">export default request</span><br></pre></td></tr></table></figure><p>前置拦截，其实可以统一为所有需要权限的请求装配上header的token信息，后置拦截中，判断status.code和error.response.status，如果是401未登录没权限的就调到登录页面，其他的就直接弹窗显示错误。<br>然后再main.js中导入axios.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import request from &quot;./axios&quot;;</span><br><span class="line">Vue.prototype.$axios = request</span><br></pre></td></tr></table></figure><p>同时，记得去掉我们之前添加的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#x27;axios&#x27;</span><br><span class="line">Vue.prototype.$axios = axios //</span><br></pre></td></tr></table></figure><p>这样axios每次请求都会被前置拦截器和后置拦截器拦截了。<br>登录异常弹窗效果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/87e1201ca5ce43079f123b658d16ff56.png" alt="图片"></p><h2 id="7-后台管理界面开发"><a href="#7-后台管理界面开发" class="headerlink" title="7. 后台管理界面开发"></a>7. 后台管理界面开发</h2><p>ok，登录界面我们已经开发完毕，并且我们已经能够进入管理系统的首页了，接下来我们就来开发首页的页面。</p><p>一般来说，管理系统的页面我们都是头部是一个简单的信息展示系统名称和登录用户信息，然后中间的左边是菜单导航栏，右边是内容，对应到elementui的组件中，我们可以找到这个Container 布局容器用于布局，方便快速搭建页面的基本结构。</p><p>而我们采用这个布局：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/82b3e8f7ec5b4e7cb9f21953f4da1795.png" alt="图片"></p><p>而这个页面，一般来说Header和Aside都是不会变化的，只有Main部分会跟着链接变化而变化，所以我们可以提炼公共部分出来，放在Home.vue中，然后Main部分放在Index.vue中，</p><p>那么问题来了，我们如何才能做到点击左边的Aside，然后局部刷新Main中的内容呢？在Vue中，我们可以通过嵌套路由（子路由）的形式。也就是我们需要重新定义路由，一级路由是Home.vue，Index.vue是作为Home.vue页面的子路由，然后Home.vue中我们通过<router-view>来展示Index.vue的内容即可。</p><p>在router中，我们这样修改：</p><ul><li>src&#x2F;router&#x2F;index.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">const routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: &#x27;/&#x27;,</span><br><span class="line">    name: &#x27;Home&#x27;,</span><br><span class="line">    component: Home,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: &#x27;/index&#x27;,</span><br><span class="line">        name: &#x27;Index&#x27;,</span><br><span class="line">        meta: &#123;</span><br><span class="line">          title: &quot;首页&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        component: () =&gt; import(&#x27;@/views/Index.vue&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: &#x27;/login&#x27;,</span><br><span class="line">    name: &#x27;Login&#x27;,</span><br><span class="line">    component: Login</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>可以看到原本的Index已经作为了Home的children，所以在链接到&#x2F;index的时候我们会展示父级Home的内容，然后再显示Index内容。</p><ul><li>src&#x2F;views&#x2F;Home.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-container&gt;</span><br><span class="line">      &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">         &lt;div&gt;菜单栏&lt;/div&gt;</span><br><span class="line">      &lt;/el-aside&gt;</span><br><span class="line">      &lt;el-container&gt;</span><br><span class="line">         &lt;el-header style=&quot;height: 55px;&quot;&gt;</span><br><span class="line">            &lt;Strong&gt;ManHub后台管理系统&lt;/Strong&gt;</span><br><span class="line">            &lt;div class=&quot;header-avatar block&quot;&gt;</span><br><span class="line">               &lt;el-avatar class=&quot;el-avatar&quot; size=&quot;medium&quot; :src=&quot;userInfo.avatar&quot;&gt;&lt;/el-avatar&gt;</span><br><span class="line">               &lt;el-dropdown&gt;</span><br><span class="line">                      &lt;span class=&quot;el-dropdown-link&quot;&gt;</span><br><span class="line">                        &#123;&#123;userInfo.username&#125;&#125;&lt;i class=&quot;el-icon-arrow-down el-icon--right&quot;&gt;&lt;/i&gt;</span><br><span class="line">                      &lt;/span&gt;</span><br><span class="line">                  &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span><br><span class="line">                     &lt;el-dropdown-item :underline=&quot;false&quot;&gt;</span><br><span class="line">                        &lt;router-link :to=&quot;&#123;name: &#x27;UserCenter&#x27;&#125;&quot;&gt;个人中心&lt;/router-link&gt;</span><br><span class="line">                     &lt;/el-dropdown-item&gt;</span><br><span class="line">                     &lt;el-dropdown-item @click.native=&quot;logout&quot;&gt;退出&lt;/el-dropdown-item&gt;</span><br><span class="line">                  &lt;/el-dropdown-menu&gt;</span><br><span class="line">               &lt;/el-dropdown&gt;</span><br><span class="line">               &lt;el-link href=&quot;https://space.bilibili.com/13491144&quot;&gt;视频讲解&lt;/el-link&gt;</span><br><span class="line">               &lt;el-link href=&quot;http://markerhub.com&quot;&gt;网站&lt;/el-link&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">         &lt;/el-header&gt;</span><br><span class="line">         &lt;el-main&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div style=&quot;margin: 0 15px;&quot;&gt;</span><br><span class="line">               &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">         &lt;/el-main&gt;</span><br><span class="line">      &lt;/el-container&gt;</span><br><span class="line">   &lt;/el-container&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Home.vue&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         return &#123;</span><br><span class="line">            userInfo: &#123;</span><br><span class="line">               id: &#x27;-1&#x27;,</span><br><span class="line">               username: &#x27;admin&#x27;,</span><br><span class="line">               avatar: &#x27;https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>样式部分我就不贴出来了，看git上的代码哈。<br>首页中间内容，不知道放啥，就放我的公众号二维码吧，哈哈，欢迎关注关注！</p><ul><li>src&#x2F;views&#x2F;Index.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">      &lt;h2&gt;&lt;/h2&gt;</span><br><span class="line">      &lt;el-image</span><br><span class="line">            style=&quot;width: 180px; height: 180px&quot;</span><br><span class="line">            :src=&quot;require(&#x27;@/assets/markerhub/javacat.jpg&#x27;)&quot;</span><br><span class="line">      &gt;&lt;/el-image&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">         更多项目学习，扫描关注公众号！</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>总体下来效果如下：<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/d9c4b269285e430c8540af5ca965edf3.png" alt="图片"></p><p>有点感觉了，然后昨天的菜单栏我们也弄下，我们找到NavMenu 导航菜单组件，然后加到Home.vue中，因为考虑到后面我们需要做动态菜单，所以我想单独这个页面出来，因此我新建了个SideMenu.vue：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">            class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">            background-color=&quot;#545c64&quot;</span><br><span class="line">            text-color=&quot;#fff&quot;</span><br><span class="line">            active-text-color=&quot;#ffd04b&quot;</span><br><span class="line">    &gt;</span><br><span class="line">        &lt;router-link to=&quot;/index&quot;&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;Index&quot;&gt;</span><br><span class="line">                &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;el-icon-s-home&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span slot=&quot;title&quot;&gt;首页&lt;/span&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/router-link&gt;</span><br><span class="line">        &lt;el-submenu index=&quot;1&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;el-icon-s-operation&quot;&gt;&lt;/i&gt;</span><br><span class="line">                &lt;span&gt;系统管理&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-1&quot;&gt;</span><br><span class="line">                &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;el-icon-s-custom&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span slot=&quot;title&quot;&gt;用户管理&lt;/span&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-2&quot;&gt;</span><br><span class="line">                &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;el-icon-rank&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span slot=&quot;title&quot;&gt;角色管理&lt;/span&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;1-3&quot;&gt;</span><br><span class="line">                &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span slot=&quot;title&quot;&gt;菜单管理&lt;/span&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">        &lt;el-submenu index=&quot;2&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;el-icon-s-tools&quot;&gt;&lt;/i&gt;</span><br><span class="line">                &lt;span&gt;系统工具&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;el-menu-item index=&quot;2-2&quot;&gt;</span><br><span class="line">                &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;el-icon-s-order&quot;&gt;&lt;/i&gt;</span><br><span class="line">                    &lt;span slot=&quot;title&quot;&gt;数字字典&lt;/span&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/el-menu-item&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;SideMenu&quot;,</span><br><span class="line">        data() &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    .el-menu-vertical-demo &#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">    a&#123;</span><br><span class="line">        text-decoration:none;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>SideMenu.vue作为一个组件添加到Home.vue中，我们首选需要导入，然后声明compoents，然后才能使用标签，所以在Home.vue中代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;el-container&gt;</span><br><span class="line">      &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">         &lt;SideMenu&gt;&lt;/SideMenu&gt;</span><br><span class="line">      &lt;/el-aside&gt;</span><br><span class="line">      &lt;el-container&gt;</span><br><span class="line">        ...</span><br><span class="line">      &lt;/el-container&gt;</span><br><span class="line">   &lt;/el-container&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   import SideMenu from &quot;./inc/SideMenu&quot;;</span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Home.vue&quot;,</span><br><span class="line">      components: &#123;</span><br><span class="line">         SideMenu</span><br><span class="line">      &#125;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         ...</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>注意SideMenu出现的地方哈，最后效果如下：<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/028e4b63b8594949b2736e3046fa4198.png" alt="图片"></p><p>这就很接近我们想要的效果了哈。</p><p>我们先来新建几个页面，先在views下新建文件夹sys，然后再新建vue页面，具体看下面，这样我们就能把链接和页面可以连接起来。</p><ul><li>src\views\sys<ul><li>Dict.vue 数字字典</li><li>Menu.vue 菜单管理</li><li>Role.vue 角色管理</li><li>User.vue 用户管理</li></ul></li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/ea5fc230191e4bc2911cb1c9056712ab.png" alt="图片"></p><p>虽然建立了页面，但是因为我们没有在router中注册链接与组件的关系，所以我们现在打开链接还是打开不了页面的。下面我们就要动态联系起来。</p><h2 id="8-用户登录信息展示"><a href="#8-用户登录信息展示" class="headerlink" title="8. 用户登录信息展示"></a>8. 用户登录信息展示</h2><p>管理界面的右上角的用户信息现在是写死的，因为我们现在已经登录成功，所以我们可以通过接口去请求获取到当前的用户信息了，这样我们就可以动态显示用户的信息，这个接口比较简单，然后退出登录的链接也一起完成，就请求接口同时把浏览器中的缓存删除就退出了哈。</p><ul><li>src\views\Home.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-header style=&quot;height: 55px;&quot;&gt;</span><br><span class="line">    &lt;Strong&gt;ManHub后台管理系统&lt;/Strong&gt;</span><br><span class="line">    &lt;div class=&quot;header-avatar block&quot;&gt;</span><br><span class="line">        &lt;el-avatar class=&quot;el-avatar&quot; size=&quot;medium&quot; :src=&quot;userInfo.avatar&quot;&gt;&lt;/el-avatar&gt;</span><br><span class="line">        &lt;el-dropdown&gt;</span><br><span class="line">          &lt;span class=&quot;el-dropdown-link&quot;&gt;</span><br><span class="line">            &#123;&#123;userInfo.username&#125;&#125;&lt;i class=&quot;el-icon-arrow-down el-icon--right&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">            &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span><br><span class="line">                &lt;el-dropdown-item :underline=&quot;false&quot;&gt;</span><br><span class="line">                    &lt;router-link :to=&quot;&#123;name: &#x27;UserCenter&#x27;&#125;&quot;&gt;个人中心&lt;/router-link&gt;</span><br><span class="line">                &lt;/el-dropdown-item&gt;</span><br><span class="line">                &lt;el-dropdown-item @click.native=&quot;logout&quot;&gt;退出&lt;/el-dropdown-item&gt;</span><br><span class="line">            &lt;/el-dropdown-menu&gt;</span><br><span class="line">        &lt;/el-dropdown&gt;</span><br><span class="line">        &lt;el-link &gt;视频讲解&lt;/el-link&gt;</span><br><span class="line">        &lt;el-link&gt;公众号&lt;/el-link&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/el-header&gt;</span><br><span class="line">...</span><br><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        userInfo: &#123;</span><br><span class="line">            id: &#x27;&#x27;,</span><br><span class="line">            username: &#x27;&#x27;,</span><br><span class="line">            avatar: &#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">created() &#123;</span><br><span class="line">    this.getUserInfo()</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    getUserInfo() &#123;</span><br><span class="line">        this.$axios.get(&quot;/sys/userInfo&quot;).then(res =&gt; &#123;</span><br><span class="line">            this.userInfo = res.data.data;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    logout() &#123;</span><br><span class="line">        this.$axios.post(&quot;/logout&quot;).then(res =&gt; &#123;</span><br><span class="line">            console.log(res.data.data)</span><br><span class="line">            localStorage.clear()</span><br><span class="line">            sessionStorage.clear()</span><br><span class="line">            this.$store.commit(&quot;resetState&quot;)</span><br><span class="line">            this.$router.push(&quot;/login&quot;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记得mockjs中返回用户的信息，比较简单我就不写了这个。</p><h2 id="9-动态菜单栏开发"><a href="#9-动态菜单栏开发" class="headerlink" title="9. 动态菜单栏开发"></a>9. 动态菜单栏开发</h2><p>上面代码中，左侧的菜单栏的数据是写死的，在实际场景中我们不可能这样做，因为菜单是需要根据登录用户的权限动态显示菜单的，也就是用户看到的菜单栏可能是不一样的，这些数据需要去后端访问获取。</p><p>首先我们先把写死的数据简化成一个json数组数据，然后for循环展示出来，代码如下：</p><ul><li>&#x2F;src&#x2F;views&#x2F;inc&#x2F;SideMenu.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">            class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">            background-color=&quot;#545c64&quot;</span><br><span class="line">            text-color=&quot;#fff&quot;</span><br><span class="line">            active-text-color=&quot;#ffd04b&quot;</span><br><span class="line">    &gt;</span><br><span class="line">        ...</span><br><span class="line">        &lt;el-submenu default-active=&quot;Index&quot; :index=&quot;menu.name&quot; v-for=&quot;menu in menuList&quot;&gt;</span><br><span class="line">            &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                &lt;i :class=&quot;menu.icon&quot;&gt;&lt;/i&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123;menu.title&#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">            &lt;router-link :to=&quot;item.path&quot; v-for=&quot;item in menu.children&quot;&gt;</span><br><span class="line">                &lt;el-menu-item :index=&quot;item.name&quot;&gt;</span><br><span class="line">                    &lt;template slot=&quot;title&quot;&gt;</span><br><span class="line">                        &lt;i :class=&quot;item.icon&quot;&gt;&lt;/i&gt;</span><br><span class="line">                        &lt;span slot=&quot;title&quot;&gt;&#123;&#123;item.title&#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                &lt;/el-menu-item&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">        &lt;/el-submenu&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;SideMenu&quot;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                menuList: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        name: &#x27;SysManga&#x27;,</span><br><span class="line">                        title: &#x27;系统管理&#x27;,</span><br><span class="line">                        icon: &#x27;el-icon-s-operation&#x27;,</span><br><span class="line">                        path: &#x27;&#x27;,</span><br><span class="line">                        component: &#x27;&#x27;,</span><br><span class="line">                        children: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;SysUser&#x27;,</span><br><span class="line">                                title: &#x27;用户管理&#x27;,</span><br><span class="line">                                icon: &#x27;el-icon-s-custom&#x27;,</span><br><span class="line">                                path: &#x27;/sys/users&#x27;,</span><br><span class="line">                                children: []</span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        name: &#x27;SysTools&#x27;,</span><br><span class="line">                        title: &#x27;系统工具&#x27;,</span><br><span class="line">                        icon: &#x27;el-icon-s-tools&#x27;,</span><br><span class="line">                        path: &#x27;&#x27;,</span><br><span class="line">                        children: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                name: &#x27;SysDict&#x27;,</span><br><span class="line">                                title: &#x27;数字字典&#x27;,</span><br><span class="line">                                icon: &#x27;el-icon-s-order&#x27;,</span><br><span class="line">                                path: &#x27;/sys/dicts&#x27;,</span><br><span class="line">                                children: []</span><br><span class="line">                            &#125;,</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到，我用for循环显示数据，那么这样变动菜单栏时候只需要修改data中的menuList即可。效果和之前的完全一样。<br>现在menuList的数据我们是直接写到页面data上的，一般我们是要请求后端的，所以这里我们定义一个mock接口，因为是动态菜单，一般我们也要考虑到权限问题，所以我们请求数据的时候一般除了动态菜单，还要权限的数据，比如菜单的添加、删除是否有权限，是否能显示该按钮等，有了权限数据我们就定动态决定是否展示这些按钮了。</p><ul><li>src&#x2F;mock.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Mock.mock(&#x27;/sys/menu/nav&#x27;, &#x27;get&#x27;, () =&gt; &#123;</span><br><span class="line">   // 菜单json</span><br><span class="line">   let nav = [</span><br><span class="line">      &#123;</span><br><span class="line">         name: &#x27;SysManga&#x27;,</span><br><span class="line">         ...</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         name: &#x27;SysTools&#x27;,</span><br><span class="line">         ...</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">   // 权限数据</span><br><span class="line">   let authoritys = [&#x27;SysUser&#x27;, &quot;SysUser:save&quot;]</span><br><span class="line"></span><br><span class="line">   Result.data = &#123;&#125;</span><br><span class="line">   Result.data.nav = nav</span><br><span class="line">   Result.data.authoritys = authoritys</span><br><span class="line">   return Result</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面json数据太长，所以我部分用省略号…替代了，以后的代码也会这样哈。<br>这样我们就定义好了导航菜单的接口，什么时候调用呢？应该登录成功完成之后调用，但是并不是每一次打开我们都需要去登录，也就是浏览器已经存储到用户token的时候我们不需要再去登录的了，所以我们不能放在登录完成的方法里。那么是当前这个Home.vue页面吗？看起来没什么问题，方正每次都会进入这个页面，然后搞个开关控制是否重新加载就行？</p><p>我们这里还要考虑一个问题，就是导航菜单的路由问题，啥意思？就是点击菜单之后路由到哪个页面是需要在router中声明的。</p><p>这个路由问题我提供两个解决方案：</p><ul><li>1、全部写死，也就是提前写好所有的路由，不管用户有没有权限，后面在通过权限数据来判断用户是否有权限访问路由。</li><li>2、动态渲染，就是把加载到的导航菜单数据动态绑定路由</li></ul><p>这里我们使用第二种解决方案，这类简单点，后续我们再开发页面的时候就不需要去改动路由，可以动态绑定。</p><p>综上，我们把加载菜单数据这个动作放在router.js中。Router有个前缀拦截，就是在路由到页面之前我们可以做一些判断或者加载数据。</p><p>在router.js中添加一下代码：</p><ul><li>src&#x2F;router&#x2F;index.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">  let hasRoute = store.state.menus.hasRoute</span><br><span class="line">  let menus = store.state.menus.menuList</span><br><span class="line">  let token = localStorage.getItem(&quot;token&quot;)</span><br><span class="line">  if (to.path == &#x27;/login&#x27;) &#123;</span><br><span class="line">    console.log(&quot;login!!!!!!!!!!!&quot;)</span><br><span class="line">    next()</span><br><span class="line">  &#125; else if (!token) &#123;</span><br><span class="line">    console.log(&quot;还没有token！！！&quot;)</span><br><span class="line">    next(&#123;path: &quot;/login&quot;&#125;)</span><br><span class="line">  &#125;else if (to.path == &#x27;/&#x27; || to.path == &#x27;&#x27;) &#123;</span><br><span class="line">    next(&#123;path: &quot;/index&quot;&#125;)</span><br><span class="line">  &#125;else if (!hasRoute) &#123;</span><br><span class="line">    let newRoutes = router.options.routes;</span><br><span class="line">    axios.get(&quot;/sys/menu/nav&quot;, &#123;headers:&#123;</span><br><span class="line">        Authorization: localStorage.getItem(&quot;token&quot;)</span><br><span class="line">      &#125;&#125;).then(res =&gt; &#123;</span><br><span class="line">      console.log(res.data.data)</span><br><span class="line">      store.commit(&quot;setMenuList&quot;, res.data.data.nav)</span><br><span class="line">      store.commit(&quot;setPermList&quot;, res.data.data.authoritys)</span><br><span class="line">      res.data.data.nav.forEach(menu =&gt; &#123;</span><br><span class="line">        if (menu.children) &#123;</span><br><span class="line">          menu.children.forEach(e =&gt; &#123;</span><br><span class="line">            let route = menuToRoute(e)</span><br><span class="line">            if(route) &#123;</span><br><span class="line">              newRoutes[0].children.push(route)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      console.log(&quot;oldRoutes---------------&quot;)</span><br><span class="line">      console.log(newRoutes)</span><br><span class="line">      router.addRoutes(newRoutes)</span><br><span class="line">      store.commit(&quot;changeRouteStatus&quot;, true)</span><br><span class="line">      next(&#123;path: to.path&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    console.log(&quot;已经有路由了------------&quot;)</span><br><span class="line">    next()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">const menuToRoute = (menu) =&gt; &#123;</span><br><span class="line">  console.log(&quot;正在添加menu--》&quot;)</span><br><span class="line">  console.log(menu)</span><br><span class="line">  if (!menu.component) &#123;</span><br><span class="line">    return null</span><br><span class="line">  &#125;</span><br><span class="line">  // 复制属性</span><br><span class="line">  let route = &#123;</span><br><span class="line">    name: menu.name,</span><br><span class="line">    path: menu.path,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      icon: menu.icon,</span><br><span class="line">      title: menu.title</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  route.component = () =&gt; import(&#x27;@/views/&#x27; + menu.component +&#x27;.vue&#x27;)</span><br><span class="line">  return route</span><br><span class="line">&#125;</span><br><span class="line">export default router</span><br></pre></td></tr></table></figure><p>可以看到，我们通过menuToRoute就是把menu数据转换成路由对象，然后router.addRoutes(newRoutes)动态添加路由对象。<br>同时上面的menu对象中，有个menu.component，这个就是连接对应的组件，我们需要添加上去，比如说&#x2F;sys&#x2F;users链接对应到component(sys&#x2F;User)。这样我们才能绑定添加到路由。所以我会修改mock中的nav的数据成这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">let nav = [</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;id&quot;: 1,</span><br><span class="line">      &quot;title&quot;: &quot;系统管理&quot;,</span><br><span class="line">      &quot;icon&quot;: &quot;el-icon-s-operation&quot;,</span><br><span class="line">      &quot;path&quot;: &quot;&quot;,</span><br><span class="line">      &quot;name&quot;: &quot;sys:manage&quot;,</span><br><span class="line">      &quot;component&quot;: &quot;&quot;,</span><br><span class="line">      &quot;children&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;id&quot;: 2,</span><br><span class="line">            &quot;title&quot;: &quot;用户管理&quot;,</span><br><span class="line">            &quot;icon&quot;: &quot;el-icon-s-custom&quot;,</span><br><span class="line">            &quot;path&quot;: &quot;/sys/users&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;sys:user:list&quot;,</span><br><span class="line">            &quot;component&quot;: &quot;sys/User&quot;,</span><br><span class="line">            &quot;children&quot;: []</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;id&quot;: 3,</span><br><span class="line">            &quot;title&quot;: &quot;角色管理&quot;,</span><br><span class="line">            &quot;icon&quot;: &quot;el-icon-rank&quot;,</span><br><span class="line">            &quot;path&quot;: &quot;/sys/roles&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;sys:role:list&quot;,</span><br><span class="line">            &quot;component&quot;: &quot;sys/Role&quot;,</span><br><span class="line">            &quot;children&quot;: []</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;id&quot;: 4,</span><br><span class="line">            &quot;title&quot;: &quot;菜单管理&quot;,</span><br><span class="line">            &quot;icon&quot;: &quot;el-icon-menu&quot;,</span><br><span class="line">            &quot;path&quot;: &quot;/sys/menus&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;sys:menu:list&quot;,</span><br><span class="line">            &quot;component&quot;: &quot;sys/Menu&quot;,</span><br><span class="line">            &quot;children&quot;: []</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;id&quot;: 5,</span><br><span class="line">      &quot;title&quot;: &quot;系统工具&quot;,</span><br><span class="line">      &quot;icon&quot;: &quot;el-icon-s-tools&quot;,</span><br><span class="line">      &quot;path&quot;: &quot;&quot;,</span><br><span class="line">      &quot;name&quot;: &quot;sys:tools&quot;,</span><br><span class="line">      &quot;component&quot;: null,</span><br><span class="line">      &quot;children&quot;: [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;id&quot;: 6,</span><br><span class="line">            &quot;title&quot;: &quot;数字字典&quot;,</span><br><span class="line">            &quot;icon&quot;: &quot;el-icon-s-order&quot;,</span><br><span class="line">            &quot;path&quot;: &quot;/sys/dicts&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;sys:dict:list&quot;,</span><br><span class="line">            &quot;component&quot;: &quot;sys/Dict&quot;,</span><br><span class="line">            &quot;children&quot;: []</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>同时上面router中我们还通过判断是否登录页面，是否有token等判断提前判断是否能加载菜单，同时还做了个开关hasRoute来动态判断是否已经加载过菜单。</p><p>还需要在store中定义几个方法用于存储数据，我们定义一个menu模块，所以在store中新建文件夹modules，然后新建menus.js</p><ul><li>src&#x2F;store&#x2F;modules&#x2F;menus.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import Vuex from &#x27;vuex&#x27;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">export default &#123;</span><br><span class="line">   state: &#123;</span><br><span class="line">      // 菜单栏数据</span><br><span class="line">      menuList:  [],</span><br><span class="line">      // 权限数据</span><br><span class="line">      permList:  [],</span><br><span class="line">      hasRoute: false</span><br><span class="line">   &#125;,</span><br><span class="line">   mutations: &#123;</span><br><span class="line">      changeRouteStatus(state, hasRoute) &#123;</span><br><span class="line">         state.hasRoute = hasRoute</span><br><span class="line">         sessionStorage.setItem(&quot;hasRoute&quot;, hasRoute)</span><br><span class="line">      &#125;,</span><br><span class="line">      setMenuList(state, menus) &#123;</span><br><span class="line">         state.menuList = menus</span><br><span class="line">      &#125;,</span><br><span class="line">      setPermList(state, authoritys) &#123;</span><br><span class="line">         state.permList = authoritys</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>记得在store中import这个模块，然后添加到modules：</p><ul><li><p>src&#x2F;store&#x2F;index.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import menus from &quot;./modules/menus&quot;</span><br><span class="line">...</span><br><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">...</span><br><span class="line">modules: &#123;</span><br><span class="line">  menus</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这样我们菜单的数据就可以加载了，然后再SideMenu.vue中直接获取store中的menuList数据即可显示菜单出来了。</p></li><li><p>src&#x2F;views&#x2F;inc&#x2F;SideMenu.vue</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        menuList: this.$store.state.menus.menuList,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后效果如下：<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/489f7ce2ede747558206a6d533bdd3a2.png" alt="图片"></p><p>好了，好像已经有点完善了哈哈。</p><h2 id="10-动态标签页开发"><a href="#10-动态标签页开发" class="headerlink" title="10. 动态标签页开发"></a>10. 动态标签页开发</h2><p>上面做完之后，总还觉得少点什么，对了标签页，我看别的后台管理系统都有这个，效果是这样的：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/2c6ed79157c34f3d873e5a0a6831b91c.png" alt="图片"></p><p>搞起搞起，别人有我不能没有，于是我去element-ui中寻了一圈，发现Tab标签页组件挺符合我们要求的，可以动态增减标签页。</p><p>理想的动作是这样的：</p><ol><li>当我们点击导航菜单，上方会添加一个对应的标签，注意不能重复添加，发现已存在标签直接切换到这标签即可</li><li>删除当前标签的时候会自动切换到前一个标签页</li><li>点击标签页的时候会调整到对应的内容页中</li></ol><p>综合Vue的思想，我们可以这样设计：在Store中统一存储：1、当前标签Tab，2、已存在的标签Tab列表，然后页面从Store中获取列表显示，并切换到当前Tab即可。删除时候我们循环当前Tab列表，剔除Tab，并切换到指定Tab。</p><p>我们先和左侧菜单一样单独定义一个组件Tabs.vue放在views&#x2F;inc文件夹内：</p><ul><li>src&#x2F;views&#x2F;inc&#x2F;Tabs.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-tabs v-model=&quot;editableTabsValue&quot; type=&quot;card&quot; closable @tab-remove=&quot;removeTab&quot; @tab-click=&quot;clickTab&quot;&gt;</span><br><span class="line">        &lt;el-tab-pane</span><br><span class="line">                v-for=&quot;item in editableTabs&quot;</span><br><span class="line">                :key=&quot;item.name&quot;</span><br><span class="line">                :label=&quot;item.title&quot;</span><br><span class="line">                :name=&quot;item.name&quot;</span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/el-tab-pane&gt;</span><br><span class="line">    &lt;/el-tabs&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">    export default &#123;</span><br><span class="line">        name: &quot;Tabs&quot;,</span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">            editableTabs: &#123;</span><br><span class="line">                get() &#123;</span><br><span class="line">                    return this.$store.state.menus.editableTabs;</span><br><span class="line">                &#125;,</span><br><span class="line">                set(val) &#123;</span><br><span class="line">                    this.$store.state.menus.editableTabs = val</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            editableTabsValue: &#123;</span><br><span class="line">                get() &#123;</span><br><span class="line">                    return this.$store.state.menus.editableTabsValue;</span><br><span class="line">                &#125;,</span><br><span class="line">                set(val) &#123;</span><br><span class="line">                    this.$store.state.menus.editableTabsValue = val;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">            clickTab(target) &#123;</span><br><span class="line">                this.$router.push(&#123;name: target.name&#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            removeTab(targetName) &#123;</span><br><span class="line">                let tabs = this.editableTabs;</span><br><span class="line">                let activeName = this.editableTabsValue;</span><br><span class="line">                // 首页不能删除</span><br><span class="line">                if (targetName === &quot;Index&quot;) &#123;</span><br><span class="line">                    return</span><br><span class="line">                &#125;</span><br><span class="line">                if (activeName === targetName) &#123;</span><br><span class="line">                    tabs.forEach((tab, index) =&gt; &#123;</span><br><span class="line">                        if (tab.name === targetName) &#123;</span><br><span class="line">                            let nextTab = tabs[index + 1] || tabs[index - 1];</span><br><span class="line">                            if (nextTab) &#123;</span><br><span class="line">                                activeName = nextTab.name;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                this.editableTabsValue = activeName;</span><br><span class="line">                this.editableTabs = tabs.filter(tab =&gt; tab.name !== targetName);</span><br><span class="line">                this.$router.push(&#123;name: activeName&#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>上面代码中，computed表示当其依赖的属性的值发生变化时，计算属性会重新计算，反之，则使用缓存中的属性值。这样我们就可以实时监测Tabs标签的动态变化实时显示（相当于实时get、set）。其他clickTab、removeTab的逻辑其实也还算简单，特别是removeTab注意考虑多种情况就可以。<br>然后我们来到store中的menu.js，我们添加 editableTabsValue和editableTabs，然后把首页作为默认显示的页面。</p><ul><li>src&#x2F;store&#x2F;modules&#x2F;menus.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">state: &#123;</span><br><span class="line">   // 菜单栏数据</span><br><span class="line">   menuList:  [],</span><br><span class="line">   // 权限数据</span><br><span class="line">   permList:  [],</span><br><span class="line">   hasRoute: false,</span><br><span class="line"></span><br><span class="line">   editableTabsValue: &#x27;Index&#x27;,</span><br><span class="line">   editableTabs: [</span><br><span class="line">      &#123;</span><br><span class="line">         title: &#x27;首页&#x27;,</span><br><span class="line">         name: &#x27;Index&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">   ],</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>ok，然后再Home.vue中引入我们Tabs.vue这个组件，添加代码的地方比较零散，所以我就写重要代码出来就好，自行添加到指定的地方哈。</p><ul><li>src&#x2F;views&#x2F;Home.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 引入组件</span><br><span class="line">import Tabs from &quot;./inc/Tabs&quot;</span><br><span class="line"># 声明组件</span><br><span class="line">components: &#123;</span><br><span class="line">   SideMenu, Tabs</span><br><span class="line">&#125;,</span><br><span class="line">&lt;el-main&gt;</span><br><span class="line">   # 使用组件</span><br><span class="line">   &lt;Tabs&gt;&lt;/Tabs&gt;</span><br><span class="line">   &lt;div style=&quot;margin: 0 15px;&quot;&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/el-main&gt;</span><br></pre></td></tr></table></figure><p>最后效果如下：<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/a810bca0141c4514a51f73ef3b9f1092.png" alt="图片"></p><p>好了完成了第一步了，现在我们需要点击菜单导航，然后再tabs列表中添加tab标签页，那么我们来到SideMenu.vue，我们给el-menu-item每个菜单都添加一个点击事件：</p><ul><li>src&#x2F;views&#x2F;inc&#x2F;SideMenu.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-menu</span><br><span class="line">        # 当前选择的菜单</span><br><span class="line">        :default-active=&quot;activeMenu&quot;</span><br><span class="line">        ...</span><br><span class="line">&gt;</span><br><span class="line">...</span><br><span class="line">&lt;router-link :to=&quot;item.path&quot; v-for=&quot;item in menu.children&quot;&gt;</span><br><span class="line">    &lt;el-menu-item :index=&quot;item.name&quot; @click=&quot;selectMenu(item)&quot;&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br><span class="line">computed: &#123;</span><br><span class="line">    # 选择tab标签时候顺便也要激活当前对应的导航</span><br><span class="line">    activeMenu() &#123;</span><br><span class="line">        return this.$store.state.menus.editableTabsValue</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    selectMenu(item) &#123;</span><br><span class="line">        console.log(item)</span><br><span class="line">        let obj = &#123;</span><br><span class="line">            name: item.name,</span><br><span class="line">            title: item.title</span><br><span class="line">        &#125;</span><br><span class="line">        this.$store.commit(&quot;addTabs&quot;, obj)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为tabs标签列表我们是存储在store中的，因此我们需要commit提交事件，因此我们在menu.js中添加addTabs方法：</p><ul><li>src&#x2F;store&#x2F;modules&#x2F;menus.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mutations: &#123;</span><br><span class="line">   addTabs(state, tab) &#123;</span><br><span class="line">      console.log(tab)</span><br><span class="line">      // 判断是否在栈内</span><br><span class="line">      let index = state.editableTabs.findIndex(item =&gt; item.name === tab.name)</span><br><span class="line">      if (index === -1) &#123;</span><br><span class="line">         // 添加到tabs中</span><br><span class="line">         state.editableTabs.push(tab)</span><br><span class="line">      &#125;</span><br><span class="line">      // 当前激活的tab</span><br><span class="line">      state.editableTabsValue = tab.name</span><br><span class="line">   &#125;,</span><br><span class="line">   setActiveTab(state, tabName) &#123;</span><br><span class="line">      state.editableTabsValue = tabName</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加tab标签的时候注意需要激活指定当前标签，也就是设置editableTabsValue。然后我们也添加了setActiveTab方法，方便其他地方指定激活某个标签。<br>具体效果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/baeac050efb74aeaa42c952622b10e90.png" alt="图片"></p><p>上面的演示看似没什么问题了，但其实细节还是很多的，比如当我们刷新浏览器、或者直接通过输入链接打开页面时候就不会自动帮我们根据链接回显激活Tab。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/d3c6d54548af4277a89f63c2215b9a4f.png" alt="图片"></p><p>从上面图中我们可以看出刷新浏览器之后链接&#x2F;sys&#x2F;users不变，内容不变，但是Tab却不见了，所以我们需要修补一下，当用户是直接通过输入链接形式打开页面的时候我们也能根据链接自动添加激活指定的tab。那么在哪里添加这个回显的方法呢？router中？其实可以，只不过我们需要做判断，因为每次点击导航都会触发router。有没有更简便的方法？有的！因为刷新或者打开页面都是一次性的行为，所以我们可以在更高层的App.vue中做这个回显动作，具体如下：</p><ul><li>src\App.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">      &lt;router-view/&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;App&quot;,</span><br><span class="line">      watch: &#123;</span><br><span class="line">         // 解决刷新浏览器没有tab的问题</span><br><span class="line">         $route(to, from) &#123;</span><br><span class="line">            if (to.path != &#x27;/login&#x27;) &#123;</span><br><span class="line">               let obj = &#123;</span><br><span class="line">                  name: to.name,</span><br><span class="line">                  title: to.meta.title</span><br><span class="line">               &#125;</span><br><span class="line">               this.$store.commit(&quot;addTabs&quot;, obj)</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>上面代码可以看到，除了login页面，其他页面都会触发addTabs方法，这样我们就可以添加tab和激活tab了。<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/2f58687373634ce9b0f6ce024dfb90dc.png" alt="图片"></p><p>完美搞定！</p><h2 id="11-个人中心"><a href="#11-个人中心" class="headerlink" title="11. 个人中心"></a>11. 个人中心</h2><p>个人中心用来展示用户的基本信息和修改密码，相对简单：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/e34b3709551f49bc88f91967c02cb2d7.png" alt="图片"></p><ul><li>src&#x2F;views&#x2F;UserCenter.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">      &lt;h2&gt;你好！&#123;&#123; userInfo.username &#125;&#125; 同学&lt;/h2&gt;</span><br><span class="line">      &lt;el-form :model=&quot;passForm&quot; status-icon :rules=&quot;rules&quot; ref=&quot;passForm&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">         &lt;el-form-item label=&quot;旧密码&quot; prop=&quot;currentPass&quot;&gt;</span><br><span class="line">            &lt;el-input type=&quot;password&quot; v-model=&quot;passForm.currentPass&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">         &lt;el-form-item label=&quot;新密码&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">            &lt;el-input type=&quot;password&quot; v-model=&quot;passForm.password&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">         &lt;el-form-item label=&quot;确认密码&quot; prop=&quot;checkPass&quot;&gt;</span><br><span class="line">            &lt;el-input type=&quot;password&quot; v-model=&quot;passForm.checkPass&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitForm(&#x27;passForm&#x27;)&quot;&gt;提交&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;passForm&#x27;)&quot;&gt;重置&lt;/el-button&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Login&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         var validatePass = (rule, value, callback) =&gt; &#123;</span><br><span class="line">            if (value === &#x27;&#x27;) &#123;</span><br><span class="line">               callback(new Error(&#x27;请再次输入密码&#x27;));</span><br><span class="line">            &#125; else if (value !== this.passForm.password) &#123;</span><br><span class="line">               callback(new Error(&#x27;两次输入密码不一致!&#x27;));</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">               callback();</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;;</span><br><span class="line">         return &#123;</span><br><span class="line">            userInfo: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            passForm: &#123;</span><br><span class="line">               password: &#x27;111111&#x27;,</span><br><span class="line">               checkPass: &#x27;111111&#x27;,</span><br><span class="line">               currentPass: &#x27;111111&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            rules: &#123;</span><br><span class="line">               password: [</span><br><span class="line">                  &#123; required: true, message: &#x27;请输入新密码&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">                  &#123; min: 6, max: 12, message: &#x27;长度在 6 到 12 个字符&#x27;, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">               ],</span><br><span class="line">               checkPass: [</span><br><span class="line">                  &#123; required: true, validator: validatePass, trigger: &#x27;blur&#x27; &#125;</span><br><span class="line">               ],</span><br><span class="line">               currentPass: [</span><br><span class="line">                  &#123; required: true, message: &#x27;请输入当前密码&#x27;, trigger: &#x27;blur&#x27; &#125;,</span><br><span class="line">               ]</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123;</span><br><span class="line">         this.getUserInfo()</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         getUserInfo() &#123;</span><br><span class="line">            this.$axios.get(&quot;/sys/userInfo&quot;).then(res =&gt; &#123;</span><br><span class="line">               this.userInfo = res.data.data;</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         submitForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">               if (valid) &#123;</span><br><span class="line">                  const _this = this</span><br><span class="line">                  this.$axios.post(&#x27;/sys/user/updataPass&#x27;, this.passForm).then(res =&gt; &#123;</span><br><span class="line">                     _this.$alert(res.data.msg, &#x27;提示&#x27;, &#123;</span><br><span class="line">                        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">                        callback: action =&gt; &#123;</span><br><span class="line">                           this.$refs[formName].resetFields();</span><br><span class="line">                        &#125;</span><br><span class="line">                     &#125;);</span><br><span class="line">                  &#125;)</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                  console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  return false;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         resetForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].resetFields();</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.el-form &#123;</span><br><span class="line">   width: 420px;</span><br><span class="line">   margin: 50px auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="12-菜单界面"><a href="#12-菜单界面" class="headerlink" title="12. 菜单界面"></a>12. 菜单界面</h2><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/e539c20d93f84f7c8dae7c5785253605.png" alt="图片"></p><p>菜单管理我们用到了Table表格组件的树形结构数据，我们只需要根据例子自己组装数据，就可以自动显示出来了，在新增数据的时候有个地方需要讲一下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/4a051ee030ce44738ae9635b25b1c161.png" alt="图片"></p><p>这里本应该是个树形数据的结构，但是现有的elementui不是很满足，于是我就拿了个简单的下拉框，然后子菜单就加上一个【- 】作为前缀，这样看起来就像一个树形结构了，也比较清晰。具体代码如下：</p><ul><li>src&#x2F;views&#x2F;sys&#x2F;Menu.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;上级菜单&quot; prop=&quot;parentId&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">   &lt;!--模拟树形下拉框--&gt;</span><br><span class="line">   &lt;el-select v-model=&quot;editForm.parentId&quot; placeholder=&quot;请选择上级菜单&quot; &gt;</span><br><span class="line">      &lt;template v-for=&quot;item in tableData&quot;&gt;</span><br><span class="line">         &lt;el-option :label=&quot;item.name&quot; :value=&quot;item.id&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">         &lt;template v-for=&quot;child in item.children&quot;&gt;</span><br><span class="line">            &lt;el-option :label=&quot;child.name&quot; :value=&quot;child.id&quot;&gt;</span><br><span class="line">               &lt;span&gt;&#123;&#123; &#x27;- &#x27; + child.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/el-option&gt;</span><br><span class="line">         &lt;/template&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">   &lt;/el-select&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p>其他都是基本的增删改查，填数据啥的，就比较繁琐和简单了，贴代码了哈：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;!--搜索框--&gt;</span><br><span class="line">      &lt;el-form :inline=&quot;true&quot; :model=&quot;searchForm&quot;&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;dialogFormVisible = true&quot; v-if=&quot;hasAuth(&#x27;sys:menu:save&#x27;)&quot;&gt;新增&lt;/el-button&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;!--列表--&gt;</span><br><span class="line">      &lt;el-table</span><br><span class="line">            :data=&quot;tableData&quot;</span><br><span class="line">            style=&quot;width: 100%;margin-bottom: 20px;&quot;</span><br><span class="line">            row-key=&quot;id&quot;</span><br><span class="line">            border</span><br><span class="line">            stripe</span><br><span class="line">            default-expand-all</span><br><span class="line">            :tree-props=&quot;&#123;children: &#x27;children&#x27;, hasChildren: &#x27;hasChildren&#x27;&#125;&quot;&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;name&quot;</span><br><span class="line">               label=&quot;名称&quot;</span><br><span class="line">               width=&quot;180&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;perms&quot;</span><br><span class="line">               label=&quot;权限编码&quot;</span><br><span class="line">               width=&quot;180&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;icon&quot;</span><br><span class="line">               label=&quot;图标&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;type&quot;</span><br><span class="line">               label=&quot;类型&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-tag v-if=&quot;scope.row.type === 0&quot; size=&quot;small&quot;&gt;目录&lt;/el-tag&gt;</span><br><span class="line">               &lt;el-tag v-else-if=&quot;scope.row.type === 1&quot; size=&quot;small&quot; type=&quot;success&quot;&gt;菜单&lt;/el-tag&gt;</span><br><span class="line">               &lt;el-tag v-else-if=&quot;scope.row.type === 2&quot; size=&quot;small&quot; type=&quot;info&quot;&gt;按钮&lt;/el-tag&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;path&quot;</span><br><span class="line">               label=&quot;菜单URL&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;component&quot;</span><br><span class="line">               label=&quot;菜单组件&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;orderNum&quot;</span><br><span class="line">               label=&quot;排序号&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;statu&quot;</span><br><span class="line">               label=&quot;状态&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-tag v-if=&quot;scope.row.statu === 0&quot; size=&quot;small&quot; type=&quot;danger&quot;&gt;禁用&lt;/el-tag&gt;</span><br><span class="line">               &lt;el-tag v-else-if=&quot;scope.row.statu === 1&quot; size=&quot;small&quot; type=&quot;success&quot;&gt;正常&lt;/el-tag&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               label=&quot;操作&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;editHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:menu:update&#x27;)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-popconfirm title=&quot;确定要删除这条记录吗？&quot; @confirm=&quot;delHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:menu:delete&#x27;)&quot;&gt;</span><br><span class="line">                  &lt;el-button type=&quot;text&quot; slot=&quot;reference&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">               &lt;/el-popconfirm&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">      &lt;el-dialog title=&quot;菜单信息&quot; :visible.sync=&quot;dialogFormVisible&quot; width=&quot;600px&quot; @closed=&quot;resetForm(&#x27;editForm&#x27;)&quot;&gt;</span><br><span class="line">         &lt;el-form :model=&quot;editForm&quot; :rules=&quot;editFormRules&quot; ref=&quot;editForm&quot;&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;上级菜单&quot; prop=&quot;parentId&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;!--模拟树形下拉框--&gt;</span><br><span class="line">               &lt;el-select v-model=&quot;editForm.parentId&quot; placeholder=&quot;请选择上级菜单&quot; &gt;</span><br><span class="line">                  &lt;template v-for=&quot;item in tableData&quot;&gt;</span><br><span class="line">                     &lt;el-option :label=&quot;item.name&quot; :value=&quot;item.id&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">                     &lt;template v-for=&quot;child in item.children&quot;&gt;</span><br><span class="line">                        &lt;el-option :label=&quot;child.name&quot; :value=&quot;child.id&quot;&gt;</span><br><span class="line">                           &lt;span&gt;&#123;&#123; &#x27;- &#x27; + child.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">                        &lt;/el-option&gt;</span><br><span class="line">                     &lt;/template&gt;</span><br><span class="line">                  &lt;/template&gt;</span><br><span class="line">               &lt;/el-select&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;菜单名称&quot; prop=&quot;name&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;权限编码&quot; prop=&quot;perms&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.perms&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;图标&quot; prop=&quot;icon&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.icon&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;菜单URL&quot; prop=&quot;path&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.path&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;菜单组件&quot; prop=&quot;component&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.component&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;类型&quot; prop=&quot;type&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-radio-group v-model=&quot;editForm.type&quot;&gt;</span><br><span class="line">                  &lt;el-radio :label=0&gt;目录&lt;/el-radio&gt;</span><br><span class="line">                  &lt;el-radio :label=1&gt;菜单&lt;/el-radio&gt;</span><br><span class="line">                  &lt;el-radio :label=2&gt;按钮&lt;/el-radio&gt;</span><br><span class="line">               &lt;/el-radio-group&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;状态&quot; prop=&quot;statu&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-radio-group v-model=&quot;editForm.statu&quot;&gt;</span><br><span class="line">                  &lt;el-radio :label=0&gt;禁用&lt;/el-radio&gt;</span><br><span class="line">                  &lt;el-radio :label=1&gt;正常&lt;/el-radio&gt;</span><br><span class="line">               &lt;/el-radio-group&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;排序号&quot; prop=&quot;orderNum&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input-number v-model=&quot;editForm.orderNum&quot; :min=&quot;1&quot; label=&quot;排序号&quot;&gt;1&lt;/el-input-number&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">         &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;editForm&#x27;)&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitEditForm(&#x27;editForm&#x27;)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Menu&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         return &#123;</span><br><span class="line">            searchForm: &#123;</span><br><span class="line">               name: &#x27;&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            tableData: [],</span><br><span class="line">            multipleSelection: [],</span><br><span class="line">            dialogFormVisible: false,</span><br><span class="line">            editForm: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            editFormRules: &#123;</span><br><span class="line">               parentId: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请选择上级菜单&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               name: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入名称&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               perms: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入权限编码&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               type: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请选择状态&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               orderNum: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请填入排序号&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               statu: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请选择状态&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ]</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         getMenuTree() &#123;</span><br><span class="line">            this.$axios.get(&quot;/sys/menu/list&quot;, &#123;</span><br><span class="line">               params: &#123;</span><br><span class="line">                  name: this.searchForm.name</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;).then(res =&gt; &#123;</span><br><span class="line">               console.log(res)</span><br><span class="line">               this.tableData = res.data.data</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         submitEditForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">               if (valid) &#123;</span><br><span class="line">                  this.$axios.post(&#x27;/sys/menu/&#x27; + (this.editForm.id? &quot;update&quot; : &quot;save&quot;) ,this.editForm)</span><br><span class="line">                     .then(res =&gt; &#123;</span><br><span class="line">                        console.log(res.data)</span><br><span class="line">                        this.resetForm(formName)</span><br><span class="line">                        this.$message(&#123;</span><br><span class="line">                           showClose: true,</span><br><span class="line">                           message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                           type: &#x27;success&#x27;,</span><br><span class="line">                           onClose: () =&gt; &#123;</span><br><span class="line">                              this.getMenuTree()</span><br><span class="line">                           &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                     &#125;)</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                  console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  return false;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         editHandle(id) &#123;</span><br><span class="line">            console.log(id)</span><br><span class="line">            this.$axios.get(&quot;/sys/menu/info/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               this.editForm = res.data.data</span><br><span class="line">               this.dialogFormVisible = true</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         delHandle(id) &#123;</span><br><span class="line">            this.$axios.post(&quot;/sys/menu/delete/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               console.log(res)</span><br><span class="line">               this.$message(&#123;</span><br><span class="line">                  showClose: true,</span><br><span class="line">                  message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                     this.getMenuTree()</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         resetForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].resetFields();</span><br><span class="line">            this.editForm = &#123;&#125;</span><br><span class="line">            this.dialogFormVisible = false</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123;</span><br><span class="line">         this.getMenuTree()</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="13-角色界面"><a href="#13-角色界面" class="headerlink" title="13. 角色界面"></a>13. 角色界面</h2><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/1a741733072e413a96048d288d034070.png" alt="图片"></p><p>角色需要和菜单权限做关联，菜单是个树形结构的，</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/e0d23d9422e94d3183bc969af3703ab1.png" alt="图片"></p><p>因为我们父节点是列表，所以注意不要选中父节点就自动选子节点，注意分开哈哈。</p><p>贴代码啦：</p><ul><li>src&#x2F;views&#x2F;sys&#x2F;Role.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;!--搜索框--&gt;</span><br><span class="line">      &lt;el-form :inline=&quot;true&quot; :model=&quot;searchForm&quot; class=&quot;searchForm&quot;&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">                  v-model=&quot;searchForm.name&quot;</span><br><span class="line">                  placeholder=&quot;名称&quot;</span><br><span class="line">                  clearable&gt;</span><br><span class="line">            &lt;/el-input&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button @click=&quot;getRoleList()&quot;&gt;搜索&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;dialogFormVisible = true&quot; v-if=&quot;hasAuth(&#x27;sys:role:save&#x27;)&quot;&gt;新增&lt;/el-button&gt;</span><br><span class="line">            &lt;el-popconfirm title=&quot;确定要删除这些记录吗？&quot; @confirm=&quot;delHandle(null)&quot; style=&quot;margin-left: 10px;&quot; v-if=&quot;hasAuth(&#x27;sys:role:delete&#x27;)&quot;&gt;</span><br><span class="line">               &lt;el-button type=&quot;danger&quot; slot=&quot;reference&quot; :disabled=&quot;delBtnStu&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-popconfirm&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;!--列表--&gt;</span><br><span class="line">      &lt;el-table</span><br><span class="line">            ref=&quot;multipleTable&quot;</span><br><span class="line">            border</span><br><span class="line">            stripe</span><br><span class="line">            :data=&quot;tableData&quot;</span><br><span class="line">            tooltip-effect=&quot;dark&quot;</span><br><span class="line">            style=&quot;width: 100%&quot;</span><br><span class="line">            @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               type=&quot;selection&quot;</span><br><span class="line">               width=&quot;55&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;name&quot;</span><br><span class="line">               label=&quot;名称&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;code&quot;</span><br><span class="line">               label=&quot;唯一编码&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;remark&quot;</span><br><span class="line">               label=&quot;描述&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;statu&quot;</span><br><span class="line">               label=&quot;状态&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-tag v-if=&quot;scope.row.statu === 0&quot; size=&quot;small&quot; type=&quot;danger&quot;&gt;禁用&lt;/el-tag&gt;</span><br><span class="line">               &lt;el-tag v-else-if=&quot;scope.row.statu === 1&quot; size=&quot;small&quot; type=&quot;success&quot;&gt;正常&lt;/el-tag&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               label=&quot;操作&quot;</span><br><span class="line">               width=&quot;220&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;permHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:role:perm&#x27;)&quot;&gt;分配权限&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;editHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:role:update&#x27;)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-popconfirm title=&quot;确定要删除这条记录吗？&quot; @confirm=&quot;delHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:role:delete&#x27;)&quot;&gt;</span><br><span class="line">                  &lt;el-button type=&quot;text&quot; slot=&quot;reference&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">               &lt;/el-popconfirm&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">      &lt;!--页码--&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">            @size-change=&quot;handleSizeChange&quot;</span><br><span class="line">            @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">            :current-page=&quot;current&quot;</span><br><span class="line">            :page-sizes=&quot;[10, 20, 50, 100]&quot;</span><br><span class="line">            :page-size=&quot;size&quot;</span><br><span class="line">            layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">            :total=&quot;total&quot;&gt;</span><br><span class="line">      &lt;/el-pagination&gt;</span><br><span class="line">      &lt;!-- 编辑对话框 --&gt;</span><br><span class="line">      &lt;el-dialog title=&quot;角色信息&quot; :visible.sync=&quot;dialogFormVisible&quot; width=&quot;600px&quot; @closed=&quot;resetForm(&#x27;editForm&#x27;)&quot;&gt;</span><br><span class="line">         &lt;el-form :model=&quot;editForm&quot; :rules=&quot;editFormRules&quot; ref=&quot;editForm&quot;&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;角色名称&quot; prop=&quot;name&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.name&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;唯一编码&quot; prop=&quot;code&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.code&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;描述&quot; prop=&quot;remark&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.remark&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;状态&quot; prop=&quot;statu&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-radio-group v-model=&quot;editForm.statu&quot;&gt;</span><br><span class="line">                  &lt;el-radio :label=&quot;0&quot;&gt;禁用&lt;/el-radio&gt;</span><br><span class="line">                  &lt;el-radio :label=&quot;1&quot;&gt;正常&lt;/el-radio&gt;</span><br><span class="line">               &lt;/el-radio-group&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">         &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;editForm&#x27;)&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitEditForm(&#x27;editForm&#x27;)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">      &lt;!-- 分配权限对话框 --&gt;</span><br><span class="line">      &lt;el-dialog title=&quot;分配权限&quot; :visible.sync=&quot;permDialogFormVisible&quot; width=&quot;600px&quot; @closed=&quot;resetForm(&#x27;permForm&#x27;)&quot;&gt;</span><br><span class="line">         &lt;el-form :model=&quot;permForm&quot; ref=&quot;permForm&quot;&gt;</span><br><span class="line">            &lt;el-tree</span><br><span class="line">                  :data=&quot;permTreeData&quot;</span><br><span class="line">                  show-checkbox</span><br><span class="line">                  ref=&quot;permTree&quot;</span><br><span class="line">                  :check-strictly=checkStrictly</span><br><span class="line">                  node-key=&quot;id&quot;</span><br><span class="line">                  :default-expand-all=true</span><br><span class="line">                  :props=&quot;defaultProps&quot;&gt;</span><br><span class="line">            &lt;/el-tree&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">         &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;permForm&#x27;)&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitPermForm(&#x27;permForm&#x27;)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;Role&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         return &#123;</span><br><span class="line">            searchForm: &#123;</span><br><span class="line">               name: &#x27;&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            tableData: [],</span><br><span class="line">            multipleSelection: [],</span><br><span class="line">            dialogFormVisible: false,</span><br><span class="line">            permDialogFormVisible: false,</span><br><span class="line">            delBtnStu: true,</span><br><span class="line">            current: 1,</span><br><span class="line">            total: 0,</span><br><span class="line">            size: 10,</span><br><span class="line">            editForm: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            editFormRules: &#123;</span><br><span class="line">               name: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入名称&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               code: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入唯一编码&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               statu: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请选择状态&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ]</span><br><span class="line">            &#125;,</span><br><span class="line">            permForm: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            defaultProps: &#123;</span><br><span class="line">               children: &#x27;children&#x27;,</span><br><span class="line">               label: &#x27;name&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            permTreeData:  [],</span><br><span class="line">            treeCheckedKeys: [],</span><br><span class="line">            checkStrictly: true</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         toggleSelection(rows) &#123;</span><br><span class="line">            if (rows) &#123;</span><br><span class="line">               rows.forEach(row =&gt; &#123;</span><br><span class="line">                  this.$refs.multipleTable.toggleRowSelection(row);</span><br><span class="line">               &#125;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">               this.$refs.multipleTable.clearSelection();</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         handleSelectionChange(val) &#123;</span><br><span class="line">            this.multipleSelection = val;</span><br><span class="line">            this.delBtnStu = val.length == 0</span><br><span class="line">         &#125;,</span><br><span class="line">         getRoleList() &#123;</span><br><span class="line">            this.$axios.get(&#x27;/sys/role/list&#x27;, &#123;</span><br><span class="line">               params: &#123;</span><br><span class="line">                  name: this.searchForm.name,</span><br><span class="line">                  current: this.current,</span><br><span class="line">                  size: this.size</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;).then(res =&gt; &#123;</span><br><span class="line">               this.tableData = res.data.data.records</span><br><span class="line">               this.current = res.data.data.current</span><br><span class="line">               this.size = res.data.data.size</span><br><span class="line">               this.total = res.data.data.total</span><br><span class="line">               console.log(res)</span><br><span class="line">            &#125;)</span><br><span class="line">            this.$axios.get(&quot;/sys/menu/list&quot;).then(res =&gt; &#123;</span><br><span class="line">               this.permTreeData = res.data.data</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         handleSizeChange(val) &#123;</span><br><span class="line">            this.size = val</span><br><span class="line">            this.getRoleList()</span><br><span class="line">         &#125;,</span><br><span class="line">         handleCurrentChange(val) &#123;</span><br><span class="line">            this.current = val</span><br><span class="line">            this.getRoleList()</span><br><span class="line">         &#125;,</span><br><span class="line">         submitEditForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">               if (valid) &#123;</span><br><span class="line">                  this.$axios.post(&#x27;/sys/role/&#x27; + (this.editForm.id? &quot;update&quot; : &quot;save&quot;) ,this.editForm)</span><br><span class="line">                     .then(res =&gt; &#123;</span><br><span class="line">                        console.log(res.data)</span><br><span class="line">                        this.resetForm(formName)</span><br><span class="line">                        this.$message(&#123;</span><br><span class="line">                           showClose: true,</span><br><span class="line">                           message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                           type: &#x27;success&#x27;,</span><br><span class="line">                           onClose: () =&gt; &#123;</span><br><span class="line">                              this.getRoleList()</span><br><span class="line">                           &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                     &#125;)</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                  console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  return false;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         editHandle(id) &#123;</span><br><span class="line">            console.log(id)</span><br><span class="line">            this.$axios.get(&quot;/sys/role/info/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               this.editForm = res.data.data</span><br><span class="line">               this.dialogFormVisible = true</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         delHandle(id) &#123;</span><br><span class="line">            console.log(id)</span><br><span class="line">            var ids = []</span><br><span class="line">            console.log(id ? 31:32)</span><br><span class="line">            id ? ids.push(id) : this.multipleSelection.forEach(row =&gt; &#123;</span><br><span class="line">               ids.push(row.id)</span><br><span class="line">            &#125;)</span><br><span class="line">            console.log(ids)</span><br><span class="line">            this.$axios.post(&quot;/sys/role/delete&quot;, ids).then(res =&gt; &#123;</span><br><span class="line">               console.log(res)</span><br><span class="line">               this.$message(&#123;</span><br><span class="line">                  showClose: true,</span><br><span class="line">                  message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                     this.getRoleList()</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         resetForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].resetFields();</span><br><span class="line">            this.editForm = &#123;&#125;</span><br><span class="line">            this.dialogFormVisible = false</span><br><span class="line">            this.permDialogFormVisible = false</span><br><span class="line">         &#125;,</span><br><span class="line">         permHandle(id) &#123;</span><br><span class="line">            this.permDialogFormVisible = true</span><br><span class="line">            this.$axios.get(&quot;/sys/role/info/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               this.$refs.permTree.setCheckedKeys(res.data.data.menuIds);</span><br><span class="line">               this.permForm = res.data.data</span><br><span class="line">               console.log(&quot;this.treeCheckedKeys&quot;)</span><br><span class="line">               console.log(this.treeCheckedKeys)</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         submitPermForm(formName) &#123;</span><br><span class="line">            var menuIds = []</span><br><span class="line">            menuIds = this.$refs.permTree.getCheckedKeys()</span><br><span class="line">            // menuIds = menuIds.concat(this.$refs.permTree.getHalfCheckedKeys()) // 半选中状态的父节点</span><br><span class="line">            console.log(menuIds)</span><br><span class="line">            console.log(this.permForm.id)</span><br><span class="line">            this.$axios.post(&quot;/sys/role/perm/&quot; + this.permForm.id, menuIds).then(res =&gt; &#123;</span><br><span class="line">               this.$message(&#123;</span><br><span class="line">                  showClose: true,</span><br><span class="line">                  message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                     this.resetForm(formName)</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">               this.permDialogFormVisible = false</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123;</span><br><span class="line">         this.getRoleList()</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="14-用户界面"><a href="#14-用户界面" class="headerlink" title="14. 用户界面"></a>14. 用户界面</h2><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/0ee3a701e0584acba0aebed3936be4ad.png" alt="图片"></p><p>线上演示：<a href="https://www.markerhub.com/vueadmin/">https://www.markerhub.com/vueadmin/</a></p><p>用户管理有个操作叫分配角色，和角色添加权限差不多的操作</p><p>贴代码啦：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;!--搜索框--&gt;</span><br><span class="line">      &lt;el-form :inline=&quot;true&quot; :model=&quot;searchForm&quot;&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-input</span><br><span class="line">                  v-model=&quot;searchForm.username&quot;</span><br><span class="line">                  placeholder=&quot;名称&quot;</span><br><span class="line">                  clearable&gt;</span><br><span class="line">            &lt;/el-input&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">         &lt;el-form-item&gt;</span><br><span class="line">            &lt;el-button&gt;搜索&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;dialogFormVisible = true&quot; v-if=&quot;hasAuth(&#x27;sys:user:save&#x27;)&quot;&gt;新增&lt;/el-button&gt;</span><br><span class="line">            &lt;el-popconfirm title=&quot;确定要删除这些记录吗？&quot; @confirm=&quot;delHandle(null)&quot; style=&quot;margin-left: 10px;&quot; v-if=&quot;hasAuth(&#x27;sys:user:delete&#x27;)&quot;&gt;</span><br><span class="line">               &lt;el-button type=&quot;danger&quot; slot=&quot;reference&quot; :disabled=&quot;delBtnStu&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">            &lt;/el-popconfirm&gt;</span><br><span class="line">         &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;!--列表--&gt;</span><br><span class="line">      &lt;el-table</span><br><span class="line">            ref=&quot;multipleTable&quot;</span><br><span class="line">            border</span><br><span class="line">            stripe</span><br><span class="line">            :data=&quot;tableData&quot;</span><br><span class="line">            tooltip-effect=&quot;dark&quot;</span><br><span class="line">            style=&quot;width: 100%&quot;</span><br><span class="line">            @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               type=&quot;selection&quot;</span><br><span class="line">               width=&quot;55&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               label=&quot;头像&quot;</span><br><span class="line">               width=&quot;50&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-avatar size=&quot;small&quot;</span><br><span class="line">                          :src=&quot;scope.row.avatar&quot;&gt;&lt;/el-avatar&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;username&quot;</span><br><span class="line">               label=&quot;用户名&quot;</span><br><span class="line">               width=&quot;120&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               label=&quot;角色名称&quot;</span><br><span class="line">               width=&quot;180&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-tag style=&quot;margin-right: 5px;&quot; size=&quot;small&quot; type=&quot;info&quot; v-for=&quot;item in scope.row.roles&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/el-tag&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;email&quot;</span><br><span class="line">               label=&quot;邮箱&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;phone&quot;</span><br><span class="line">               label=&quot;手机号&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               label=&quot;状态&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-tag v-if=&quot;scope.row.statu === 0&quot; size=&quot;small&quot; type=&quot;danger&quot;&gt;禁用&lt;/el-tag&gt;</span><br><span class="line">               &lt;el-tag v-else-if=&quot;scope.row.statu === 1&quot; size=&quot;small&quot; type=&quot;success&quot;&gt;正常&lt;/el-tag&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               prop=&quot;created&quot;</span><br><span class="line">               label=&quot;创建时间&quot;</span><br><span class="line">               width=&quot;200&quot;&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">         &lt;el-table-column</span><br><span class="line">               width=&quot;260px&quot;</span><br><span class="line">               label=&quot;操作&quot;&gt;</span><br><span class="line">            &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;roleHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:user:role&#x27;)&quot;&gt;分配角色&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;repassHandle(scope.row.id, scope.row.username)&quot; v-if=&quot;hasAuth(&#x27;sys:user:repass&#x27;)&quot;&gt;重置密码&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-button type=&quot;text&quot; @click=&quot;editHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:user:update&#x27;)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">               &lt;el-divider direction=&quot;vertical&quot;&gt;&lt;/el-divider&gt;</span><br><span class="line">               &lt;el-popconfirm title=&quot;确定要删除这条记录吗？&quot; @confirm=&quot;delHandle(scope.row.id)&quot; v-if=&quot;hasAuth(&#x27;sys:user:delete&#x27;)&quot;&gt;</span><br><span class="line">                  &lt;el-button type=&quot;text&quot; slot=&quot;reference&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">               &lt;/el-popconfirm&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">         &lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">      &lt;!--页码--&gt;</span><br><span class="line">      &lt;el-pagination</span><br><span class="line">            @size-change=&quot;handleSizeChange&quot;</span><br><span class="line">            @current-change=&quot;handleCurrentChange&quot;</span><br><span class="line">            :current-page=&quot;current&quot;</span><br><span class="line">            :page-sizes=&quot;[10, 20, 50, 100]&quot;</span><br><span class="line">            :page-size=&quot;size&quot;</span><br><span class="line">            layout=&quot;total, sizes, prev, pager, next, jumper&quot;</span><br><span class="line">            :total=&quot;total&quot;&gt;</span><br><span class="line">      &lt;/el-pagination&gt;</span><br><span class="line">      &lt;el-dialog title=&quot;用户信息&quot; :visible.sync=&quot;dialogFormVisible&quot; width=&quot;600px&quot;&gt;</span><br><span class="line">         &lt;el-form :model=&quot;editForm&quot; :rules=&quot;editFormRules&quot; ref=&quot;editForm&quot;&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;用户名&quot; prop=&quot;username&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.username&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">               &lt;el-alert</span><br><span class="line">                     title=&quot;初始密码为888888&quot;</span><br><span class="line">                     :closable=&quot;false&quot;</span><br><span class="line">                     type=&quot;info&quot;</span><br><span class="line">                     style=&quot;line-height: 12px;&quot;</span><br><span class="line">               &gt;&lt;/el-alert&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;邮箱&quot;  prop=&quot;email&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.email&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;手机号&quot;  prop=&quot;phone&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-input v-model=&quot;editForm.phone&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;el-form-item label=&quot;状态&quot;  prop=&quot;statu&quot; label-width=&quot;100px&quot;&gt;</span><br><span class="line">               &lt;el-radio-group v-model=&quot;editForm.statu&quot;&gt;</span><br><span class="line">                  &lt;el-radio :label=&quot;0&quot;&gt;禁用&lt;/el-radio&gt;</span><br><span class="line">                  &lt;el-radio :label=&quot;1&quot;&gt;正常&lt;/el-radio&gt;</span><br><span class="line">               &lt;/el-radio-group&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">         &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;editForm&#x27;)&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitEditForm(&#x27;editForm&#x27;)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">      &lt;!-- 分配权限对话框 --&gt;</span><br><span class="line">      &lt;el-dialog title=&quot;分配角色&quot; :visible.sync=&quot;roleDialogFormVisible&quot; width=&quot;600px&quot; @closed=&quot;resetForm(&#x27;roleForm&#x27;)&quot;&gt;</span><br><span class="line">         &lt;el-form :model=&quot;roleForm&quot; ref=&quot;roleForm&quot;&gt;</span><br><span class="line">            &lt;el-tree</span><br><span class="line">                  :data=&quot;roleTreeData&quot;</span><br><span class="line">                  show-checkbox</span><br><span class="line">                  ref=&quot;roleTree&quot;</span><br><span class="line">                  node-key=&quot;id&quot;</span><br><span class="line">                  :default-expand-all=true</span><br><span class="line">                  :props=&quot;defaultProps&quot;&gt;</span><br><span class="line">            &lt;/el-tree&gt;</span><br><span class="line">         &lt;/el-form&gt;</span><br><span class="line">         &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">            &lt;el-button @click=&quot;resetForm(&#x27;roleForm&#x27;)&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; @click=&quot;submitRoleForm(&#x27;roleForm&#x27;)&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">      &lt;/el-dialog&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">   export default &#123;</span><br><span class="line">      name: &quot;User&quot;,</span><br><span class="line">      data() &#123;</span><br><span class="line">         return &#123;</span><br><span class="line">            searchForm: &#123;</span><br><span class="line">               username: &#x27;&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            editForm: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            editFormRules: &#123;</span><br><span class="line">               username: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入用户名称&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               email: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请输入邮箱&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ],</span><br><span class="line">               statu: [</span><br><span class="line">                  &#123;required: true, message: &#x27;请选择状态&#x27;, trigger: &#x27;blur&#x27;&#125;</span><br><span class="line">               ]</span><br><span class="line">            &#125;,</span><br><span class="line">            current: 1,</span><br><span class="line">            total: 0,</span><br><span class="line">            size: 10,</span><br><span class="line">            dialogFormVisible: false,</span><br><span class="line">            tableData: [],</span><br><span class="line">            multipleSelection: [],</span><br><span class="line">            delBtnStu: true,</span><br><span class="line">            roleDialogFormVisible: false,</span><br><span class="line">            roleForm: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            defaultProps: &#123;</span><br><span class="line">               children: &#x27;children&#x27;,</span><br><span class="line">               label: &#x27;name&#x27;</span><br><span class="line">            &#125;,</span><br><span class="line">            roleTreeData:  [],</span><br><span class="line">            treeCheckedKeys: [],</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">         toggleSelection(rows) &#123;</span><br><span class="line">            if (rows) &#123;</span><br><span class="line">               rows.forEach(row =&gt; &#123;</span><br><span class="line">                  this.$refs.multipleTable.toggleRowSelection(row);</span><br><span class="line">               &#125;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">               this.$refs.multipleTable.clearSelection();</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;,</span><br><span class="line">         handleSelectionChange(rows) &#123;</span><br><span class="line">            this.multipleSelection = rows;</span><br><span class="line">            this.delBtnStu = rows.length == 0</span><br><span class="line">         &#125;,</span><br><span class="line">         getUserList() &#123;</span><br><span class="line">            this.$axios.get(&#x27;/sys/user/list&#x27;, &#123;</span><br><span class="line">               params: &#123;</span><br><span class="line">                  name: this.searchForm.name,</span><br><span class="line">                  current: this.current,</span><br><span class="line">                  size: this.size</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;).then(res =&gt; &#123;</span><br><span class="line">               this.tableData = res.data.data.records</span><br><span class="line">               this.current = res.data.data.current</span><br><span class="line">               this.size = res.data.data.size</span><br><span class="line">               this.total = res.data.data.total</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         handleSizeChange(val) &#123;</span><br><span class="line">            this.size = val</span><br><span class="line">            this.getUserList()</span><br><span class="line">         &#125;,</span><br><span class="line">         handleCurrentChange(val) &#123;</span><br><span class="line">            this.current = val</span><br><span class="line">            this.getUserList()</span><br><span class="line">         &#125;,</span><br><span class="line">         submitEditForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].validate((valid) =&gt; &#123;</span><br><span class="line">               if (valid) &#123;</span><br><span class="line">                  this.$axios.post(&#x27;/sys/user/&#x27; + (this.editForm.id? &quot;update&quot; : &quot;save&quot;) ,this.editForm)</span><br><span class="line">                     .then(res =&gt; &#123;</span><br><span class="line">                        console.log(res.data)</span><br><span class="line">                        this.resetForm(formName)</span><br><span class="line">                        this.$message(&#123;</span><br><span class="line">                           showClose: true,</span><br><span class="line">                           message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                           type: &#x27;success&#x27;,</span><br><span class="line">                           onClose: () =&gt; &#123;</span><br><span class="line">                              this.getUserList()</span><br><span class="line">                           &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                     &#125;)</span><br><span class="line">               &#125; else &#123;</span><br><span class="line">                  console.log(&#x27;error submit!!&#x27;);</span><br><span class="line">                  return false;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         editHandle(id) &#123;</span><br><span class="line">            console.log(id)</span><br><span class="line">            this.$axios.get(&quot;/sys/user/info/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               this.editForm = res.data.data</span><br><span class="line">               this.dialogFormVisible = true</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         delHandle(id) &#123;</span><br><span class="line">            var ids = []</span><br><span class="line">            id ? ids.push(id) : this.multipleSelection.forEach(row =&gt; &#123;</span><br><span class="line">               ids.push(row.id)</span><br><span class="line">            &#125;)</span><br><span class="line">            console.log(ids)</span><br><span class="line">            this.$axios.post(&quot;/sys/user/delete&quot;, ids).then(res =&gt; &#123;</span><br><span class="line">               this.$message(&#123;</span><br><span class="line">                  showClose: true,</span><br><span class="line">                  message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                     this.getUserList()</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         resetForm(formName) &#123;</span><br><span class="line">            this.$refs[formName].resetFields();</span><br><span class="line">            this.editForm = &#123;&#125;</span><br><span class="line">            this.dialogFormVisible = false</span><br><span class="line">            this.roleDialogFormVisible = false</span><br><span class="line">         &#125;,</span><br><span class="line">         roleHandle(id) &#123;</span><br><span class="line">            this.$axios.get(&quot;/sys/user/info/&quot; + id).then(res =&gt; &#123;</span><br><span class="line">               const sysuser = res.data.data</span><br><span class="line">               var roleIds = []</span><br><span class="line">               sysuser.roles.forEach(row =&gt; &#123;</span><br><span class="line">                  roleIds.push(row.id)</span><br><span class="line">               &#125;)</span><br><span class="line">               console.log(&quot;roleIds&quot;)</span><br><span class="line">               console.log(roleIds)</span><br><span class="line">               this.roleForm = res.data.data</span><br><span class="line">               console.log(&quot;this.treeCheckedKeys&quot;)</span><br><span class="line">               console.log(this.treeCheckedKeys)</span><br><span class="line">               this.$axios.get(&quot;/sys/role/list&quot;).then(res =&gt; &#123;</span><br><span class="line">                  this.roleTreeData = res.data.data.records</span><br><span class="line">                  this.$refs.roleTree.setCheckedKeys(roleIds);</span><br><span class="line">               &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">            this.roleDialogFormVisible = true</span><br><span class="line">         &#125;,</span><br><span class="line">         submitRoleForm(formName) &#123;</span><br><span class="line">            var roleIds = []</span><br><span class="line">            roleIds = this.$refs.roleTree.getCheckedKeys()</span><br><span class="line">            console.log(roleIds)</span><br><span class="line">            console.log(this.roleForm.id)</span><br><span class="line">            this.$axios.post(&quot;/sys/user/role/&quot; + this.roleForm.id, roleIds).then(res =&gt; &#123;</span><br><span class="line">               this.$message(&#123;</span><br><span class="line">                  showClose: true,</span><br><span class="line">                  message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                  type: &#x27;success&#x27;,</span><br><span class="line">                  onClose: () =&gt; &#123;</span><br><span class="line">                     this.resetForm(formName)</span><br><span class="line">                     this.getUserList()</span><br><span class="line">                  &#125;</span><br><span class="line">               &#125;);</span><br><span class="line">               this.roleDialogFormVisible = false</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;,</span><br><span class="line">         repassHandle(id, username) &#123;</span><br><span class="line">            this.$confirm(&#x27;将重置用户【&#x27; + username + &#x27;】的密码, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">               confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">               cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">               type: &#x27;warning&#x27;</span><br><span class="line">            &#125;).then(() =&gt; &#123;</span><br><span class="line">               this.$axios.post(&quot;/sys/user/repass&quot;, id).then(res =&gt; &#123;</span><br><span class="line">                  this.$message(&#123;</span><br><span class="line">                     showClose: true,</span><br><span class="line">                     message: &#x27;恭喜你，操作成功&#x27;,</span><br><span class="line">                     type: &#x27;success&#x27;,</span><br><span class="line">                     onClose: () =&gt; &#123;</span><br><span class="line">                     &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">               &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      created() &#123;</span><br><span class="line">         this.getUserList()</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="15-按钮权限的控制"><a href="#15-按钮权限的控制" class="headerlink" title="15. 按钮权限的控制"></a>15. 按钮权限的控制</h2><p>上面的菜单、角色、用户有增删改查操作，但是不是每个用户都有权限的，没权限的用户我们应该隐藏按钮，因此我们需要通过条件来判断按钮是否应该显示，那么应该怎么定义一个方法可以让全局都能使用呢？</p><p>我们再src下面新建一个js文件用于定义一个全局使用的方法：</p><ul><li>src&#x2F;globalFun.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">Vue.mixin(&#123;</span><br><span class="line">   methods: &#123;</span><br><span class="line">      hasAuth(perm) &#123;</span><br><span class="line">         var authority = this.$store.state.menus.permList</span><br><span class="line">         console.log(authority)</span><br><span class="line">         return authority.indexOf(perm) &gt; -1</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>之前我们在加载菜单的时候说过，我们同时要加载权限数据，现在就需要用到权限数据了，这里数组，因此我们通过按钮的权限是否在所有权限列表内就行了。<br>mixin的作用是多个组件可以共享数据和方法，在使用mixin的组件中引入后，mixin中的方法和属性也就并入到该组件中，可以直接使用，在已有的组件数据和方法进行了扩充。引入mixin分全局引用和局部引用。</p><p>然后我们需要在main.js中引入这个文件</p><ul><li>src\main.js</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import gobal from &quot;./globalFun&quot;</span><br></pre></td></tr></table></figure><p>这样全局就可以使用啦，比如我们在新增按钮这里做判断：</p><ul><li>src&#x2F;views&#x2F;sys&#x2F;Menu.vue</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;primary&quot; @click=&quot;dialogFormVisible = true&quot; v-if=&quot;hasAuth(&#x27;sys:menu:save&#x27;)&quot;&gt;新增&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>通过v-if来判断返回是否为true从而判断是否显示。</p><h2 id="16-结束语"><a href="#16-结束语" class="headerlink" title="16. 结束语"></a>16. 结束语</h2><p>视频讲解：<a href="https://www.bilibili.com/video/BV1af4y1s7Wh/">https://www.bilibili.com/video/BV1af4y1s7Wh/</a></p><p>线上演示：<a href="https://www.markerhub.com/vueadmin/">https://www.markerhub.com/vueadmin/</a></p><p>首发公众号：MarkerHub</p><p>撰写人：吕一明</p><p>转载请保留此声明，感谢！</p><p><a href="https://www.zhuawaba.com/tag/vueadmin/">#vueadmin</a> <a href="https://www.zhuawaba.com/tag/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/">#后台管理系统</a> <a href="https://www.zhuawaba.com/tag/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/">#前后端分离</a> <a href="https://www.zhuawaba.com/tag/springboot%E9%A1%B9%E7%9B%AE/">#springboot项目</a></p><h4 id="全部评论-14-条"><a href="#全部评论-14-条" class="headerlink" title="全部评论: 14 条"></a>全部评论: 14 条</h4><ul><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-riaqw2022-06-21"><a href="#Hub-riaqw2022-06-21" class="headerlink" title="Hub-riaqw2022-06-21"></a><a href="https://www.zhuawaba.com/users/10846">Hub-riaqw</a>2022-06-21</h5><p>ヾ(≧∇≦*)ゝ</p></li><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-1uqwj2022-06-09"><a href="#Hub-1uqwj2022-06-09" class="headerlink" title="Hub-1uqwj2022-06-09"></a><a href="https://www.zhuawaba.com/users/10534">Hub-1uqwj</a>2022-06-09</h5><p>索多四类</p></li><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-atheo2022-05-17"><a href="#Hub-atheo2022-05-17" class="headerlink" title="Hub-atheo2022-05-17"></a><a href="https://www.zhuawaba.com/users/9878">Hub-atheo</a>2022-05-17</h5><p>不是基于 vue-element-templet开发的吗</p></li><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-dyfk02022-05-02"><a href="#Hub-dyfk02022-05-02" class="headerlink" title="Hub-dyfk02022-05-02"></a><a href="https://www.zhuawaba.com/users/5766">Hub-dyfk0</a>2022-05-02</h5><p>有没有源码</p></li><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-y1w162022-04-02"><a href="#Hub-y1w162022-04-02" class="headerlink" title="Hub-y1w162022-04-02"></a><a href="https://www.zhuawaba.com/users/6640">Hub-y1w16</a>2022-04-02</h5><p>看看资源管理器服务的redis开启没有</p><p><a href="https://www.zhuawaba.com/users/6671">@Hub-qmfh9</a>: 为什么我下载了源码什么都配置好了 跨域去8081还是报错401 百度了都配好了 还是不行 求告知为什么</p></li><li><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg" alt="img"></p><h5 id="Hub-qmfh92022-03-20"><a href="#Hub-qmfh92022-03-20" class="headerlink" title="Hub-qmfh92022-03-20"></a><a href="https://www.zhuawaba.com/users/6671">Hub-qmfh9</a>2022-03-20</h5><p>为什么我下载了源码什么都配置好了 跨域去8081还是报错401 百度了都配好了 还是不行 求告知为什么</p></li><li><p><a href="javascript:void(0)">1</a></p></li><li><p><a href="javascript:void(0);">2</a></p></li><li><p><a href="javascript:void(0);">3</a></p></li><li><p><a href="javascript:void(0);">&gt;</a></p></li></ul><p>我有话说:</p><p>发送</p><p><strong>– 目录 –</strong></p><ul><li><p>[1. 前言](<a href="https://www.zhuawaba.com/post/18#1">https://www.zhuawaba.com/post/18#1</a>. 前言)</p></li><li><p>[2. 安装vue环境，并新建Vue项目](<a href="https://www.zhuawaba.com/post/18#2">https://www.zhuawaba.com/post/18#2</a>. 安装vue环境，并新建Vue项目)</p></li><li><p>[3. 安装element-ui](<a href="https://www.zhuawaba.com/post/18#3">https://www.zhuawaba.com/post/18#3</a>. 安装element-ui)</p></li><li><p>[4. 安装axios、qs、mockjs](<a href="https://www.zhuawaba.com/post/18#4">https://www.zhuawaba.com/post/18#4</a>. 安装axios、qs、mockjs)</p></li><li><p>[5. 页面路由](<a href="https://www.zhuawaba.com/post/18#5">https://www.zhuawaba.com/post/18#5</a>. 页面路由)</p></li><li><p>\6. 登陆界面开发</p><ul><li><a href="https://www.zhuawaba.com/post/18#%E7%99%BB%E5%BD%95%E4%BA%A4%E4%BA%92%E8%BF%87%E7%A8%8B">登录交互过程</a></li><li><a href="https://www.zhuawaba.com/post/18#token%E7%9A%84%E7%8A%B6%E6%80%81%E5%90%8C%E6%AD%A5">token的状态同步</a></li><li><a href="https://www.zhuawaba.com/post/18#%E5%AE%9A%E4%B9%89%E5%85%A8%E5%B1%80axios%E6%8B%A6%E6%88%AA%E5%99%A8">定义全局axios拦截器</a></li></ul></li><li><p>[7. 后台管理界面开发](<a href="https://www.zhuawaba.com/post/18#7">https://www.zhuawaba.com/post/18#7</a>. 后台管理界面开发)</p></li><li><p>[8. 用户登录信息展示](<a href="https://www.zhuawaba.com/post/18#8">https://www.zhuawaba.com/post/18#8</a>. 用户登录信息展示)</p></li><li><p>[9. 动态菜单栏开发](<a href="https://www.zhuawaba.com/post/18#9">https://www.zhuawaba.com/post/18#9</a>. 动态菜单栏开发)</p></li><li><p>[10. 动态标签页开发](<a href="https://www.zhuawaba.com/post/18#10">https://www.zhuawaba.com/post/18#10</a>. 动态标签页开发)</p></li><li><p>[11. 个人中心](<a href="https://www.zhuawaba.com/post/18#11">https://www.zhuawaba.com/post/18#11</a>. 个人中心)</p></li><li><p>[12. 菜单界面](<a href="https://www.zhuawaba.com/post/18#12">https://www.zhuawaba.com/post/18#12</a>. 菜单界面)</p></li><li><p>[13. 角色界面](<a href="https://www.zhuawaba.com/post/18#13">https://www.zhuawaba.com/post/18#13</a>. 角色界面)</p></li><li><p>[14. 用户界面](<a href="https://www.zhuawaba.com/post/18#14">https://www.zhuawaba.com/post/18#14</a>. 用户界面)</p></li><li><p>[15. 按钮权限的控制](<a href="https://www.zhuawaba.com/post/18#15">https://www.zhuawaba.com/post/18#15</a>. 按钮权限的控制)</p></li><li><p>\16. 结束语</p></li><li><p><img src="https://www.zhuawaba.com/dist/images/logo/javawenda.jpg" alt="公众号：Java问答社"></p><p>关注官方公众号：<strong>Java问答社</strong></p><p>接收最新有赏问答推送！</p></li></ul><h3 id="最新发布"><a href="#最新发布" class="headerlink" title="最新发布"></a>最新发布</h3><ul><li><p>\1. <a href="https://www.zhuawaba.com/post/182">一个依赖搞定 Spring Boot 反爬虫，防止接口盗刷！</a></p></li><li></li><li><p>\2. <a href="https://www.zhuawaba.com/post/181">Java8 Stream 极大简化了代码，它是如何实现的？</a></p></li><li></li><li><p>\3. <a href="https://www.zhuawaba.com/post/180">马上大四了，秋招还是春招好？先找工作还是找实习？</a></p></li><li></li><li><p>\4. <a href="https://www.zhuawaba.com/post/179">万字详解 Linux 常用指令（值得收藏）</a></p></li><li></li><li><p>\5. <a href="https://www.zhuawaba.com/post/178">4年工作经验，多线程间的5种通信方式都说不出来，你敢信？</a></p></li><li></li><li><p>\6. <a href="https://www.zhuawaba.com/post/177">40 个 常用的 SpringBoot 注解，你知道几个？</a></p></li></ul><h3 id="最新评论"><a href="#最新评论" class="headerlink" title="最新评论"></a>最新评论</h3><ul><li><p><a href="https://www.zhuawaba.com/post/124">已干完</a></p></li><li></li><li><p><a href="https://www.zhuawaba.com/post/19">为什么老是提示账号密码错误</a></p></li><li></li><li><p><a href="https://www.zhuawaba.com/post/17">redis起作用吗？开不开都能用，开了也没见往里面写值</a></p></li><li></li><li><p><a href="https://www.zhuawaba.com/post/124">怎么说，搞不搞</a></p></li><li></li><li><p><a href="https://www.zhuawaba.com/post/19">请问下这个退出功能是正常的吗OωO</a></p></li><li></li><li><p><a href="https://www.zhuawaba.com/post/117">jar 能用，激活码需要从网上另找一个能用的</a></p></li></ul><p><a href="https://www.zhuawaba.com/"><img src="https://www.zhuawaba.com/dist/images/logo/logo.png" alt="mblog"></a></p><p>Copyright © 广州码客科技有限公司</p><p><a href="http://beian.miit.gov.cn/">粤ICP备19147782号</a></p><p>公众号：Java问答社</p><p>Powered by <a href="https://github.com/langhsu/mblog">mblog</a></p><p><img src="https://www.zhuawaba.com/dist/images/logo/javawenda.jpg" alt="公众号：Java问答社"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-前端笔记&quot;&gt;&lt;a href=&quot;#开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-前端笔记&quot; class=&quot;headerlink&quot; title=&quot;开发</summary>
      
    
    
    
    
    <category term="VueAdmin前端" scheme="http://example.com/tags/VueAdmin%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>VueAdmin后端</title>
    <link href="http://example.com/2022/10/07/VueAdmin%E5%90%8E%E7%AB%AF/"/>
    <id>http://example.com/2022/10/07/VueAdmin%E5%90%8E%E7%AB%AF/</id>
    <published>2022-10-07T04:41:17.000Z</published>
    <updated>2022-10-07T04:43:20.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-后端笔记"><a href="#开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-后端笔记" class="headerlink" title="开发SpringBoot+Jwt+Vue的前后端分离后台管理系统VueAdmin - 后端笔记"></a>开发SpringBoot+Jwt+Vue的前后端分离后台管理系统VueAdmin - 后端笔记</h1><p><a href="https://www.zhuawaba.com/users/2">社长 </a>1年前 ⋅ 44836 阅读</p><p>为了让更多同学学习到前后端分离管理系统的搭建过程，这里我写了详细的开发过程的文档，使用的是springsecurity + jwt + vue的技术栈组合，如果有帮助，别忘了点个赞和关注我的公众号哈！</p><p>线上预览：<a href="https://markerhub.com/vueadmin">https://markerhub.com/vueadmin</a></p><p>效果图：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/7e8914009bd94fa79b603cf2476a89ac.png" alt="img"></p><hr><blockquote><p>首发公众号：<strong>MarkerHub</strong></p><p>作者：吕一明</p><p>项目源码：关注公众号 <strong>MarkerHub</strong> 回复【 234 】获取</p><p>线上预览：<a href="https://markerhub.com/vueadmin">https://markerhub.com/vueadmin</a></p><p>项目视频：<a href="https://www.bilibili.com/video/BV1af4y1s7Wh/">https://www.bilibili.com/video/BV1af4y1s7Wh/</a></p><p>转载请保留此声明，感谢！</p></blockquote><p>另外我还有另外一个前后端博客项目博客VueBlog，如果有需要可以关注公众号MarkerHub，回复【VueBlog】获取哈！！</p><h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><p>从零开始搭建一个项目骨架，最好选择合适熟悉的技术，并且在未来易拓展，适合微服务化体系等。所以一般以Springboot作为我们的框架基础，这是离不开的了。</p><p>然后数据层，我们常用的是Mybatis，易上手，方便维护。但是单表操作比较困难，特别是添加字段或减少字段的时候，比较繁琐，所以这里我推荐使用Mybatis Plus（<a href="https://mp.baomidou.com/%EF%BC%89%EF%BC%8C%E4%B8%BA%E7%AE%80%E5%8C%96%E5%BC%80%E5%8F%91%E8%80%8C%E7%94%9F%EF%BC%8C%E5%8F%AA%E9%9C%80%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%EF%BC%8C%E5%8D%B3%E5%8F%AF%E5%BF%AB%E9%80%9F%E8%BF%9B%E8%A1%8C">https://mp.baomidou.com/），为简化开发而生，只需简单配置，即可快速进行</a> CRUD 操作，从而节省大量时间。</p><p>作为一个项目骨架，权限也是我们不能忽略的，上一个项目<a href="https://www.bilibili.com/video/BV1PQ4y1P7hZ/?fileGuid=OnZDwoxFFL8bnP1c">vueblog</a>我们使用了shiro，但是有些同学想学学SpringSecurity，所以这一期我们使用security作为我们的权限控制和会话控制的框架。</p><p>考虑到项目可能需要部署多台，一些需要共享的信息就保存在中间件中，Redis是现在主流的缓存中间件，也适合我们的项目。</p><p>然后因为前后端分离，所以我们使用jwt作为我们用户身份凭证，并且session我们会禁用，这样以前传统项目使用的方式我们可能就不再适合使用，这点需要注意了。</p><p>ok，我们现在就开始搭建我们的项目脚手架！</p><p>技术栈：</p><ul><li>SpringBoot</li><li>mybatis plus</li><li>spring security</li><li>lombok</li><li>redis</li><li>hibernate validatior</li><li>jwt</li></ul><h3 id="2-新建springboot项目，注意版本"><a href="#2-新建springboot项目，注意版本" class="headerlink" title="2. 新建springboot项目，注意版本"></a>2. 新建springboot项目，注意版本</h3><p>这里，我们使用IDEA来开发我们项目，新建步骤比较简单，我们就不截图了。</p><p>开发工具与环境：</p><ul><li>idea</li><li>mysql</li><li>jdk 8</li><li>maven3.3.9</li></ul><p>新建好的项目结构如下，SpringBoot版本使用的目前最新的2.4.0版本</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/c9343820b79b4e84a7eb51054dcd0b7d.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/8f037429566544d8a3660dfb53c80f32.png" alt="图片"></p><p>pom的jar包导入如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.4.0&lt;/version&gt;</span><br><span class="line">    &lt;relativePath/&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;groupId&gt;com.markerhub&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;vueadmin-java&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;name&gt;vueadmin-java&lt;/name&gt;</span><br><span class="line">&lt;description&gt;公众号：MarkerHub&lt;/description&gt;</span><br><span class="line">&lt;properties&gt;</span><br><span class="line">    &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">        &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">        &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">        &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><ul><li>devtools：项目的热加载重启插件</li><li>lombok：简化代码的工具</li></ul><h3 id="3-整合mybatis-plus，生成代码"><a href="#3-整合mybatis-plus，生成代码" class="headerlink" title="3. 整合mybatis plus，生成代码"></a>3. 整合mybatis plus，生成代码</h3><p>接下来，我们来整合mybatis plus，让项目能完成基本的增删改查操作。步骤很简单：可以去官网看看：<a href="https://mp.baomidou.com/guide/?fileGuid=OnZDwoxFFL8bnP1c">https://mp.baomidou.com/guide/</a></p><h4 id="第一步：导入jar包"><a href="#第一步：导入jar包" class="headerlink" title="第一步：导入jar包"></a><strong>第一步：导入jar包</strong></h4><p>pom中导入mybatis plus的jar包，因为后面会涉及到代码生成，所以我们还需要导入页面模板引擎，这里我们用的是freemarker。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--整合mybatis plus https://baomidou.com/--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.4.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--mp代码生成器--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.4.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.freemarker&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;freemarker&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.30&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h4 id="第二步：然后去写配置文件"><a href="#第二步：然后去写配置文件" class="headerlink" title="第二步：然后去写配置文件"></a><strong>第二步：然后去写配置文件</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8081</span><br><span class="line"># DataSource Config</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/vueadmin?useUnicode=true&amp;useSSL=false&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">    username: root</span><br><span class="line">    password: admin</span><br><span class="line">mybatis-plus:</span><br><span class="line">  mapper-locations: classpath*:/mapper/**Mapper.xml</span><br></pre></td></tr></table></figure><p>上面除了配置数据库的信息，还配置了myabtis plus的mapper的xml文件的扫描路径，这一步不要忘记了。然后因为前段默认是8080端口了，所以后端我们设置为8081端口，防止端口冲突。</p><h4 id="第三步：开启mapper接口扫描，添加分页、防全表更新插件"><a href="#第三步：开启mapper接口扫描，添加分页、防全表更新插件" class="headerlink" title="第三步：开启mapper接口扫描，添加分页、防全表更新插件"></a><strong>第三步：开启mapper接口扫描，添加分页、防全表更新插件</strong></h4><p>新建一个包：通过<a href="https://github.com/mapperScan">@mapperScan</a>注解指定要变成实现类的接口所在的包，然后包下面的所有接口在编译之后都会生成相应的实现类。</p><ul><li>com.markerhub.config.MybatisPlusConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@MapperScan(&quot;com.markerhub.mapper&quot;)</span><br><span class="line">public class MybatisPlusConfig &#123;</span><br><span class="line">   /**</span><br><span class="line">    * 新的分页插件,一缓和二缓遵循mybatis的规则,</span><br><span class="line">    * 需要设置 MybatisConfiguration#useDeprecatedExecutor = false</span><br><span class="line">    * 避免缓存出现问题(该属性会在旧插件移除后一同移除)</span><br><span class="line">    */</span><br><span class="line">   @Bean</span><br><span class="line">   public MybatisPlusInterceptor mybatisPlusInterceptor() &#123;</span><br><span class="line">      MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();</span><br><span class="line">      interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));</span><br><span class="line">      // 防止全表更新和删除</span><br><span class="line">      interceptor.addInnerInterceptor(new BlockAttackInnerInterceptor());</span><br><span class="line">      return interceptor;</span><br><span class="line">   &#125;</span><br><span class="line">   @Bean</span><br><span class="line">   public ConfigurationCustomizer configurationCustomizer() &#123;</span><br><span class="line">      return configuration -&gt; configuration.setUseDeprecatedExecutor(false);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，我们给Mybatis plus添加了2个拦截器，这是根据mp官网配置的：</p><ul><li><p>PaginationInnerInterceptor：新的分页插件</p></li><li><p>BlockAttackInnerInterceptor：防止全表更新和删除</p><h4 id="第四步：创建数据库和表"><a href="#第四步：创建数据库和表" class="headerlink" title="第四步：创建数据库和表"></a>第四步：创建数据库和表</h4></li></ul><p>因为是后台管理系统的权限模块，所以我们需要考虑的表主要就几个：用户表、角色表、菜单权限表、以及关联的用户角色中间表、菜单角色中间表。就5个表，至于什么字段其实都听随意的，用户表里面除了用户名、密码字段必要，其他其实都听随意，然后角色和菜单我们可以参考一下其他的系统、或者自己在做项目的过程中需要的时候在添加也行，反正重新生成代码也是非常简便的事情，综合考虑，数据库名称为vueadmin，我们建表语句如下：</p><ul><li>vueadmin.sql</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">Navicat MySQL Data Transfer</span><br><span class="line">Source Server         : localhost</span><br><span class="line">Source Server Version : 50717</span><br><span class="line">Source Host           : localhost:3306</span><br><span class="line">Source Database       : vueadmin</span><br><span class="line">Target Server Type    : MYSQL</span><br><span class="line">Target Server Version : 50717</span><br><span class="line">File Encoding         : 65001</span><br><span class="line">Date: 2021-01-23 09:41:50</span><br><span class="line">*/</span><br><span class="line">SET FOREIGN_KEY_CHECKS=0;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_menu</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_menu`;</span><br><span class="line">CREATE TABLE `sys_menu` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `parent_id` bigint(20) DEFAULT NULL COMMENT &#x27;父菜单ID，一级菜单为0&#x27;,</span><br><span class="line">  `name` varchar(64) NOT NULL,</span><br><span class="line">  `path` varchar(255) DEFAULT NULL COMMENT &#x27;菜单URL&#x27;,</span><br><span class="line">  `perms` varchar(255) DEFAULT NULL COMMENT &#x27;授权(多个用逗号分隔，如：user:list,user:create)&#x27;,</span><br><span class="line">  `component` varchar(255) DEFAULT NULL,</span><br><span class="line">  `type` int(5) NOT NULL COMMENT &#x27;类型     0：目录   1：菜单   2：按钮&#x27;,</span><br><span class="line">  `icon` varchar(32) DEFAULT NULL COMMENT &#x27;菜单图标&#x27;,</span><br><span class="line">  `orderNum` int(11) DEFAULT NULL COMMENT &#x27;排序&#x27;,</span><br><span class="line">  `created` datetime NOT NULL,</span><br><span class="line">  `updated` datetime DEFAULT NULL,</span><br><span class="line">  `statu` int(5) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `name` (`name`) USING BTREE</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_role`;</span><br><span class="line">CREATE TABLE `sys_role` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(64) NOT NULL,</span><br><span class="line">  `code` varchar(64) NOT NULL,</span><br><span class="line">  `remark` varchar(64) DEFAULT NULL COMMENT &#x27;备注&#x27;,</span><br><span class="line">  `created` datetime DEFAULT NULL,</span><br><span class="line">  `updated` datetime DEFAULT NULL,</span><br><span class="line">  `statu` int(5) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `name` (`name`) USING BTREE,</span><br><span class="line">  UNIQUE KEY `code` (`code`) USING BTREE</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_role_menu</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_role_menu`;</span><br><span class="line">CREATE TABLE `sys_role_menu` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `role_id` bigint(20) NOT NULL,</span><br><span class="line">  `menu_id` bigint(20) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=102 DEFAULT CHARSET=utf8mb4;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_user`;</span><br><span class="line">CREATE TABLE `sys_user` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(64) DEFAULT NULL,</span><br><span class="line">  `password` varchar(64) DEFAULT NULL,</span><br><span class="line">  `avatar` varchar(255) DEFAULT NULL,</span><br><span class="line">  `email` varchar(64) DEFAULT NULL,</span><br><span class="line">  `city` varchar(64) DEFAULT NULL,</span><br><span class="line">  `created` datetime DEFAULT NULL,</span><br><span class="line">  `updated` datetime DEFAULT NULL,</span><br><span class="line">  `last_login` datetime DEFAULT NULL,</span><br><span class="line">  `statu` int(5) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `UK_USERNAME` (`username`) USING BTREE</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;</span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for sys_user_role</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `sys_user_role`;</span><br><span class="line">CREATE TABLE `sys_user_role` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_id` bigint(20) NOT NULL,</span><br><span class="line">  `role_id` bigint(20) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4;</span><br></pre></td></tr></table></figure><h4 id="第五步：代码生成"><a href="#第五步：代码生成" class="headerlink" title="第五步：代码生成"></a><strong>第五步：代码生成</strong></h4><ol><li>获取项目数据库所对应表和字段的信息</li><li>新建一个freemarker的页面模板 - SysUser.java.ftl - ${baseEntity}</li><li>提供相关需要进行渲染的动态数据 - BaseEntity、表字段、注释、baseEntity&#x3D;SuperEntity</li><li>使用freemarker模板引擎进行渲染！ - SysUser.java</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 获取表</span><br><span class="line">SELECT</span><br><span class="line">    *</span><br><span class="line">FROM</span><br><span class="line">    information_schema. TABLES</span><br><span class="line">WHERE</span><br><span class="line">    TABLE_SCHEMA = (SELECT DATABASE());</span><br><span class="line"># 获取字段</span><br><span class="line">SELECT</span><br><span class="line">    *</span><br><span class="line">FROM</span><br><span class="line">    information_schema. COLUMNS</span><br><span class="line">WHERE</span><br><span class="line">    TABLE_SCHEMA = (SELECT DATABASE())</span><br><span class="line">AND TABLE_NAME = &quot;sys_user&quot;;</span><br></pre></td></tr></table></figure><p>有了数据库之后，那么现在就已经可以使用mybatis plus了，官方给我们提供了一个代码生成器，然后我写上自己的参数之后，就可以直接根据数据库表信息生成entity、service、mapper等接口和实现类。<br>因为代码比较长，就不贴出来了，说明一下重点：</p><ul><li>com.markerhub.CodeGenerator</li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/a1362ec4d54d4c6aa917b29776c1c68b.png" alt="图片"></p><p>上面代码生成的过程中，我默认所有的实体类都继承BaseEntity，控制器都继承BaseController，所以在代码生成之前，最好先编写这两个基类：</p><ul><li>com.markerhub.entity.BaseEntity</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class BaseEntity implements Serializable &#123;</span><br><span class="line">   @TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br><span class="line">   private Long id;</span><br><span class="line">   private LocalDateTime created;</span><br><span class="line">   private LocalDateTime updated;</span><br><span class="line">   private Integer statu;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>com.markerhub.controller.BaseController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public class BaseController &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   HttpServletRequest req;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们单独运行CodeGenerator的main方法，注意调整CodeGenerator的数据库连接、账号密码啥的，然后我们输入表名称，通过逗号隔开：sys_menu,sys_role,sys_role_menu,sys_user,sys_user_role<br>执行结果成功：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/886a9ce3794c4663830b0c799e48fd7a.png" alt="图片"></p><p>然后我们生成了一些代码如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/7cd1ac427f3e4a70a1a78f6e2ed01b9e.png" alt="图片"></p><p>这里有点需要注意，因为关联的用户角色中间表、菜单角色中间表我们是没有created等几个公共字段的，所以我们把这两个实体继承BaseEntity去掉：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/522fc5035cc84e889833bb77f78e6352.png" alt="图片"></p><p>最后这样子的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class SysRoleMenu &#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简洁！方便！经过上面的步骤，基本上我们已经把mybatis plus框架集成到项目中了，并且也生成了基本的代码，省了好多功夫。然后我们做个简单测试：</p><ul><li>com.markerhub.controller.TestController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class TestController &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   SysUserService userService;</span><br><span class="line">   @GetMapping(&quot;/test&quot;)</span><br><span class="line">   public Object test() &#123;</span><br><span class="line">      return userService.list();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后sys_user随意添加几条数据，结果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/14dc69d6bb864c78985c494a243d7210.png" alt="图片"></p><p>ok，毛什么问题，大家不用在意密码是怎么生成的，后面我们会说到，你现在随意填写就好了。对了，好多人问我的浏览器的json数据怎么显示这么好看，这是因为我用了JSONView这个插件：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/035b0ccd2dd84f53bc61e1d897d2fef7.png" alt="图片"></p><h3 id="4-结果封装"><a href="#4-结果封装" class="headerlink" title="4. 结果封装"></a>4. 结果封装</h3><p>因为是前后端分离的项目，所以我们有必要统一一个结果返回封装类，这样前后端交互的时候有个统一的标准，约定结果返回的数据是正常的或者遇到异常了。</p><p>这里我们用到了一个Result的类，这个用于我们的异步统一返回的结果封装。一般来说，结果里面有几个要素必要的</p><ul><li>是否成功，可用code表示（如200表示成功，400表示异常）</li><li>结果消息</li><li>结果数据</li></ul><p>所以可得到封装如下：</p><ul><li>com.markerhub.common.lang.Result</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class Result implements Serializable &#123;</span><br><span class="line">    private int code; // 200是正常，非200表示异常</span><br><span class="line">    private String msg;</span><br><span class="line">    private Object data;</span><br><span class="line"></span><br><span class="line">    public static Result succ(Object data) &#123;</span><br><span class="line">        return succ(200, &quot;操作成功&quot;, data);</span><br><span class="line">    &#125;</span><br><span class="line">    public static Result succ(int code, String msg, Object data) &#123;</span><br><span class="line">        Result r = new Result();</span><br><span class="line">        r.setCode(code);</span><br><span class="line">        r.setMsg(msg);</span><br><span class="line">        r.setData(data);</span><br><span class="line">        return r;</span><br><span class="line">    &#125;</span><br><span class="line">    public static Result fail(String msg) &#123;</span><br><span class="line">        return fail(400, msg, null);</span><br><span class="line">    &#125;</span><br><span class="line">    public static Result fail(String msg, Object data) &#123;</span><br><span class="line">        return fail(400, msg, data);</span><br><span class="line">    &#125;</span><br><span class="line">    public static Result fail(int code, String msg, Object data) &#123;</span><br><span class="line">        Result r = new Result();</span><br><span class="line">        r.setCode(code);</span><br><span class="line">        r.setMsg(msg);</span><br><span class="line">        r.setData(data);</span><br><span class="line">        return r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外出了在结果封装类上的code可以提现数据是否正常，我们还可以通过http的状态码来提现访问是否遇到了异常，比如401表示五权限拒绝访问等，注意灵活使用。</p><h3 id="5-全局异常处理"><a href="#5-全局异常处理" class="headerlink" title="5. 全局异常处理"></a>5. 全局异常处理</h3><p>有时候不可避免服务器报错的情况，如果不配置异常处理机制，就会默认返回tomcat或者nginx的5XX页面，对普通用户来说，不太友好，用户也不懂什么情况。这时候需要我们程序员设计返回一个友好简单的格式给前端。</p><p>处理办法如下：通过使用<a href="https://github.com/ControllerAdvice">@ControllerAdvice</a>来进行统一异常处理，<a href="https://github.com/ExceptionHandler">@ExceptionHandler</a>(value &#x3D; RuntimeException.class)来指定捕获的Exception各个类型异常 ，这个异常的处理，是全局的，所有类似的异常，都会跑到这个地方处理。</p><p>步骤二、定义全局异常处理，<a href="https://github.com/ControllerAdvice">@ControllerAdvice</a>表示定义全局控制器异常处理，<a href="https://github.com/ExceptionHandler">@ExceptionHandler</a>表示针对性异常处理，可对每种异常针对性处理。</p><ul><li>com.markerhub.common.exception.GlobalExceptionHandler</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 全局异常处理</span><br><span class="line"> */</span><br><span class="line">@Slf4j</span><br><span class="line">@RestControllerAdvice</span><br><span class="line">public class GlobalExceptionHandler &#123;</span><br><span class="line">    @ResponseStatus(HttpStatus.FORBIDDEN)</span><br><span class="line">    @ExceptionHandler(value = AccessDeniedException.class)</span><br><span class="line">    public Result handler(AccessDeniedException e) &#123;</span><br><span class="line">        log.info(&quot;security权限不足：----------------&#123;&#125;&quot;, e.getMessage());</span><br><span class="line">        return Result.fail(&quot;权限不足&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ResponseStatus(HttpStatus.BAD_REQUEST)</span><br><span class="line">    @ExceptionHandler(value = MethodArgumentNotValidException.class)</span><br><span class="line">    public Result handler(MethodArgumentNotValidException e) &#123;</span><br><span class="line">        log.info(&quot;实体校验异常：----------------&#123;&#125;&quot;, e.getMessage());</span><br><span class="line">        BindingResult bindingResult = e.getBindingResult();</span><br><span class="line">        ObjectError objectError = bindingResult.getAllErrors().stream().findFirst().get();</span><br><span class="line">        return Result.fail(objectError.getDefaultMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ResponseStatus(HttpStatus.BAD_REQUEST)</span><br><span class="line">    @ExceptionHandler(value = IllegalArgumentException.class)</span><br><span class="line">    public Result handler(IllegalArgumentException e) &#123;</span><br><span class="line">        log.error(&quot;Assert异常：----------------&#123;&#125;&quot;, e.getMessage());</span><br><span class="line">        return Result.fail(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ResponseStatus(HttpStatus.BAD_REQUEST)</span><br><span class="line">    @ExceptionHandler(value = RuntimeException.class)</span><br><span class="line">    public Result handler(RuntimeException e) &#123;</span><br><span class="line">        log.error(&quot;运行时异常：----------------&#123;&#125;&quot;, e);</span><br><span class="line">        return Result.fail(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面我们捕捉了几个异常：</p><ul><li>ShiroException：shiro抛出的异常，比如没有权限，用户登录异常</li><li>IllegalArgumentException：处理Assert的异常</li><li>MethodArgumentNotValidException：处理实体校验的异常</li><li>RuntimeException：捕捉其他异常</li></ul><h3 id="6-整合Spring-Security"><a href="#6-整合Spring-Security" class="headerlink" title="6. 整合Spring Security"></a>6. 整合Spring Security</h3><p>很多人不懂spring security，觉得这个框架比shiro要难，的确，security更加复杂一点，同时功能也更加强大，我们首先来看一下security的原理，这里我们引用一张来自江南一点雨大佬画的一张原理图（<a href="https://blog.csdn.net/u012702547/article/details/89629415?fileGuid=OnZDwoxFFL8bnP1c">https://blog.csdn.net/u012702547/article/details/89629415</a>）：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/062ed76a42e84bab92b6903c34dca4c5.png" alt="图片"></p><p>（引自江南一点雨的博客）</p><p>上面这张图一定要好好看，特别清晰，毕竟security是责任链的设计模式，是一堆过滤器链的组合，如果对于这个流程都不清楚，那么你就谈不上理解security。那么针对我们现在的这个系统，我们可以自己设计一个security的认证方案，结合江南一点雨大佬的博客，我们得到这样一套流程：</p><p><a href="https://www.processon.com/view/link/606b0b5307912932d09adcb3?fileGuid=OnZDwoxFFL8bnP1c">https://www.processon.com/view/link/606b0b5307912932d09adcb3</a></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/6c727925347b4349904e0731aa01d5ea.png" alt="图片"></p><p>流程说明：</p><ol><li>客户端发起一个请求，进入 Security 过滤器链。</li><li>当到 LogoutFilter 的时候判断是否是登出路径，如果是登出路径则到 logoutHandler ，如果登出成功则到 logoutSuccessHandler 登出成功处理。如果不是登出路径则直接进入下一个过滤器。</li><li>当到 UsernamePasswordAuthenticationFilter 的时候判断是否为登录路径，如果是，则进入该过滤器进行登录操作，如果登录失败则到 AuthenticationFailureHandler ，登录失败处理器处理，如果登录成功则到 AuthenticationSuccessHandler 登录成功处理器处理，如果不是登录请求则不进入该过滤器。</li><li>进入认证BasicAuthenticationFilter进行用户认证，成功的话会把认证了的结果写入到SecurityContextHolder中SecurityContext的属性authentication上面。如果认证失败就会交给AuthenticationEntryPoint认证失败处理类，或者抛出异常被后续ExceptionTranslationFilter过滤器处理异常，如果是AuthenticationException就交给AuthenticationEntryPoint处理，如果是AccessDeniedException异常则交给AccessDeniedHandler处理。</li><li>当到 FilterSecurityInterceptor 的时候会拿到 uri ，根据 uri 去找对应的鉴权管理器，鉴权管理器做鉴权工作，鉴权成功则到 Controller 层，否则到 AccessDeniedHandler 鉴权失败处理器处理。</li></ol><p>Spring Security 实战干货：必须掌握的一些内置 Filter：<a href="https://blog.csdn.net/qq_35067322/article/details/102690579?fileGuid=OnZDwoxFFL8bnP1c">https://blog.csdn.net/qq_35067322&#x2F;article&#x2F;details&#x2F;102690579</a></p><p>ok，上面我们说的流程中涉及到几个组件，有些是我们需要根据实际情况来重写的。因为我们是使用json数据进行前后端数据交互，并且我们返回结果也是特定封装的。我们先再总结一下我们需要了解的几个组件：</p><ul><li>LogoutFilter - 登出过滤器</li><li>logoutSuccessHandler - 登出成功之后的操作类</li><li>UsernamePasswordAuthenticationFilter - from提交用户名密码登录认证过滤器</li><li>AuthenticationFailureHandler - 登录失败操作类</li><li>AuthenticationSuccessHandler - 登录成功操作类</li><li>BasicAuthenticationFilter - Basic身份认证过滤器</li><li>SecurityContextHolder - 安全上下文静态工具类</li><li>AuthenticationEntryPoint - 认证失败入口</li><li>ExceptionTranslationFilter - 异常处理过滤器</li><li>AccessDeniedHandler - 权限不足操作类</li><li>FilterSecurityInterceptor - 权限判断拦截器、出口</li></ul><p>有了上面的组件，那么认证与授权两个问题我们就已经接近啦，我们现在需要做的就是去重写我们的一些关键类。</p><h4 id="引入Security与jwt"><a href="#引入Security与jwt" class="headerlink" title="引入Security与jwt"></a>引入Security与jwt</h4><p>首先我们导入security包，因为我们前后端交互用户凭证用的是JWT，所以我们也导入jwt的相关包，然后因为验证码的存储需要用到redis，所以引入redis。最后为了一些工具类，我们引入hutool。</p><ul><li>pom.xml</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- springboot security --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- jwt --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jjwt&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.9.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.axet&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kaptcha&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.0.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- hutool工具类--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;5.3.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.11&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>启动redis，然后我们再启动项目，这时候我们再去访问<a href="http://localhost:8081/test?fileGuid=OnZDwoxFFL8bnP1c">http://localhost:8081/test</a>，会发现系统会先判断到你未登录跳转到<a href="http://localhost:8081/login?fileGuid=OnZDwoxFFL8bnP1c">http://localhost:8081/login</a>，因为security内置了登录页，用户名为user，密码在启动项目的时候打印在了控制台。登录完成之后我们才可以正常访问接口。<br>因为每次启动密码都会改变，所以我们通过配置文件来配置一下默认的用户名和密码：</p><ul><li>application.yml</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  security:</span><br><span class="line">    user:</span><br><span class="line">      name: user</span><br><span class="line">      password: 111111</span><br></pre></td></tr></table></figure><h4 id="用户认证"><a href="#用户认证" class="headerlink" title="用户认证"></a>用户认证</h4><p>首先我们来解决用户认证问题，分为首次登陆，和二次认证。</p><ul><li>首次登录认证：用户名、密码和验证码完成登录</li><li>二次token认证：请求头携带Jwt进行身份认证</li></ul><p>使用用户名密码来登录的，然后我们还想添加图片验证码，那么security给我们提供的UsernamePasswordAuthenticationFilter能使用吗？</p><p>首先security的所有过滤器都是没有图片验证码这回事的，看起来不适用了。其实这里我们可以灵活点，如果你依然想沿用自带的UsernamePasswordAuthenticationFilter，那么我们就在这过滤器之前添加一个图片验证码过滤器。当然了我们也可以通过自定义过滤器继承UsernamePasswordAuthenticationFilter，然后自己把验证码验证逻辑和认证逻辑写在一起，这也是一种解决方式。</p><p>我们这次解决方式是在UsernamePasswordAuthenticationFilter之前自定义一个图片过滤器CaptchaFilter，提前校验验证码是否正确，这样我们就可以使用UsernamePasswordAuthenticationFilter了，然后登录正常或失败我们都可以通过对应的Handler来返回我们特定格式的封装结果数据。</p><h4 id="生成验证码"><a href="#生成验证码" class="headerlink" title="生成验证码"></a>生成验证码</h4><p>首先我们先生成验证码，之前我们已经引用了google的验证码生成器，我们先来配置一下图片验证码的生成规则：</p><ul><li>com.markerhub.config.KaptchaConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class KaptchaConfig &#123;</span><br><span class="line">   @Bean</span><br><span class="line">   public DefaultKaptcha producer() &#123;</span><br><span class="line">      Properties properties = new Properties();</span><br><span class="line">      properties.put(&quot;kaptcha.border&quot;, &quot;no&quot;);</span><br><span class="line">      properties.put(&quot;kaptcha.textproducer.font.color&quot;, &quot;black&quot;);</span><br><span class="line">      properties.put(&quot;kaptcha.textproducer.char.space&quot;, &quot;4&quot;);</span><br><span class="line">      properties.put(&quot;kaptcha.image.height&quot;, &quot;40&quot;);</span><br><span class="line">      properties.put(&quot;kaptcha.image.width&quot;, &quot;120&quot;);</span><br><span class="line">      properties.put(&quot;kaptcha.textproducer.font.size&quot;, &quot;30&quot;);</span><br><span class="line">      Config config = new Config(properties);</span><br><span class="line">      DefaultKaptcha defaultKaptcha = new DefaultKaptcha();</span><br><span class="line">      defaultKaptcha.setConfig(config);</span><br><span class="line">      return defaultKaptcha;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面我定义了图片验证码的长宽字体颜色等，自己可以调整哈。<br>然后我们通过控制器提供生成验证码的方法：</p><ul><li>com.markerhub.controller.AuthController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">public class AuthController extends BaseController&#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   private Producer producer;</span><br><span class="line">   /**</span><br><span class="line">    * 图片验证码</span><br><span class="line">    */</span><br><span class="line">   @GetMapping(&quot;/captcha&quot;)</span><br><span class="line">   public Result captcha(HttpServletRequest request, HttpServletResponse response) throws IOException &#123;</span><br><span class="line">      String code = producer.createText();</span><br><span class="line">      String key = UUID.randomUUID().toString();</span><br><span class="line">      BufferedImage image = producer.createImage(code);</span><br><span class="line">      ByteArrayOutputStream outputStream = new ByteArrayOutputStream();</span><br><span class="line">      ImageIO.write(image, &quot;jpg&quot;, outputStream);</span><br><span class="line">      BASE64Encoder encoder = new BASE64Encoder();</span><br><span class="line">      String str = &quot;data:image/jpeg;base64,&quot;;</span><br><span class="line">      String base64Img = str + encoder.encode(outputStream.toByteArray());</span><br><span class="line"></span><br><span class="line">      // 存储到redis中</span><br><span class="line">      redisUtil.hset(Const.captcha_KEY, key, code, 120);</span><br><span class="line">      log.info(&quot;验证码 -- &#123;&#125; - &#123;&#125;&quot;, key, code);</span><br><span class="line">      return Result.succ(</span><br><span class="line">            MapUtil.builder()</span><br><span class="line">            .put(&quot;token&quot;, key)</span><br><span class="line">            .put(&quot;base64Img&quot;, base64Img)</span><br><span class="line">            .build()</span><br><span class="line">      );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为前后端分离，我们禁用了session，所以我们把验证码放在了redis中，使用一个随机字符串作为key，并传送到前端，前端再把随机字符串和用户输入的验证码提交上来，这样我们就可以通过随机字符串获取到保存的验证码和用户的验证码进行比较了是否正确了。<br>然后因为图片验证码的方式，所以我们进行了encode，把图片进行了base64编码，这样前端就可以显示图片了。</p><p>而前端的处理，我们之前是使用了mockjs进行随机生成数据的，现在后端有接口之后，我们只需要在main.js中去掉mockjs的引入即可，这样前端就可以访问后端的接口而不被mock拦截了。</p><h4 id="验证码认证过滤器"><a href="#验证码认证过滤器" class="headerlink" title="验证码认证过滤器"></a>验证码认证过滤器</h4><p>图片验证码进行认证验证码是否正确。</p><ul><li>CaptchaFilter</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 图片验证码校验过滤器，在登录过滤器前</span><br><span class="line"> */</span><br><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">public class CaptchaFilter extends OncePerRequestFilter &#123;</span><br><span class="line">   private final String loginUrl = &quot;/login&quot;;</span><br><span class="line">   @Autowired</span><br><span class="line">   RedisUtil redisUtil;</span><br><span class="line">   @Autowired</span><br><span class="line">   LoginFailureHandler loginFailureHandler;</span><br><span class="line">   @Override</span><br><span class="line">   protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span><br><span class="line">         throws ServletException, IOException &#123;</span><br><span class="line">      String url = request.getRequestURI();</span><br><span class="line">      if (loginUrl.equals(url) &amp;&amp; request.getMethod().equals(&quot;POST&quot;)) &#123;</span><br><span class="line">         log.info(&quot;获取到login链接，正在校验验证码 -- &quot; + url);</span><br><span class="line">         try &#123;</span><br><span class="line">            validate(request);</span><br><span class="line">         &#125; catch (CaptchaException e) &#123;</span><br><span class="line">            log.info(e.getMessage());</span><br><span class="line">            // 交给登录失败处理器处理</span><br><span class="line">            loginFailureHandler.onAuthenticationFailure(request, response, e);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      filterChain.doFilter(request, response);</span><br><span class="line">   &#125;</span><br><span class="line">   private void validate(HttpServletRequest request) &#123;</span><br><span class="line">      String code = request.getParameter(&quot;code&quot;);</span><br><span class="line">      String token = request.getParameter(&quot;token&quot;);</span><br><span class="line">      if (StringUtils.isBlank(code) || StringUtils.isBlank(token)) &#123;</span><br><span class="line">         throw new CaptchaException(&quot;验证码不能为空&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      if(!code.equals(redisUtil.hget(Const.captcha_KEY, token))) &#123;</span><br><span class="line">         throw new CaptchaException(&quot;验证码不正确&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      // 一次性使用</span><br><span class="line">      redisUtil.hdel(Const.captcha_KEY, token);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码中，因为验证码需要存储，所以添加了RedisUtil工具类，这个工具类代码我们就不贴出来了。</p><ul><li>com.markerhub.util.RedisUtil</li></ul><p>然后验证码出错的时候我们返回异常信息，这是一个认证异常，所以我们自定了一个CaptchaException：</p><ul><li>com.javacat.common.exception.CaptchaException</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class CaptchaException extends AuthenticationException &#123;</span><br><span class="line">   public CaptchaException(String msg) &#123;</span><br><span class="line">      super(msg);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>com.markerhub.common.lang.Const</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public class Const &#123;</span><br><span class="line">   public static final String captcha_KEY = &quot;captcha&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后认证失败的话，我们之前说过，登录失败的时候交给AuthenticationFailureHandler，所以我们自定义了LoginFailureHandler</p><ul><li>com.markerhub.security.LoginFailureHandler</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class LoginFailureHandler implements AuthenticationFailureHandler &#123;</span><br><span class="line">   @Override</span><br><span class="line">   public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException &#123;</span><br><span class="line">      response.setContentType(&quot;application/json;charset=UTF-8&quot;);</span><br><span class="line">      ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">      Result result = Result.fail(</span><br><span class="line">            &quot;Bad credentials&quot;.equals(exception.getMessage()) ? &quot;用户名或密码不正确&quot; : exception.getMessage()</span><br><span class="line">      );</span><br><span class="line">      outputStream.write(JSONUtil.toJsonStr(result).getBytes(&quot;UTF-8&quot;));</span><br><span class="line">      outputStream.flush();</span><br><span class="line">      outputStream.close();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实主要就是获取异常的消息，然后封装到Result，最后转成json返回给前端而已哈。<br>然后我们配置SecurityConfig</p><ul><li>com.markerhub.config.SecurityConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableGlobalMethodSecurity(prePostEnabled = true)</span><br><span class="line">@EnableWebSecurity</span><br><span class="line">public class SecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   LoginFailureHandler loginFailureHandler;</span><br><span class="line"></span><br><span class="line">   @Autowired</span><br><span class="line">   CaptchaFilter captchaFilter;</span><br><span class="line"></span><br><span class="line">   public static final String[] URL_WHITELIST = &#123;</span><br><span class="line">         &quot;/webjars/**&quot;,</span><br><span class="line">         &quot;/favicon.ico&quot;,</span><br><span class="line"></span><br><span class="line">&quot;/captcha&quot;,</span><br><span class="line">         &quot;/login&quot;,</span><br><span class="line">         &quot;/logout&quot;,</span><br><span class="line">   &#125;;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   protected void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">      http.cors().and().csrf().disable()</span><br><span class="line">            .formLogin()</span><br><span class="line">            .failureHandler(loginFailureHandler)</span><br><span class="line"></span><br><span class="line">            .and()</span><br><span class="line">            .authorizeRequests()</span><br><span class="line">            .antMatchers(URL_WHITELIST).permitAll() //白名单</span><br><span class="line">            .anyRequest().authenticated()</span><br><span class="line">            // 不会创建 session</span><br><span class="line">            .and()</span><br><span class="line">            .sessionManagement()</span><br><span class="line">            .sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class="line"></span><br><span class="line">            .and()</span><br><span class="line">            .addFilterBefore(captchaFilter, UsernamePasswordAuthenticationFilter.class) // 登录验证码校验过滤器</span><br><span class="line">      ;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先formLogin我们定义了表单登录提交的方式以及定义了登录失败的处理器，后面我们还要定义登录成功的处理器的。然后authorizeRequests我们除了白名单的链接之外其他请求都会被拦截。再然后就是禁用session，最后是设定验证码过滤器在登录过滤器之前。<br>然后我们打开前端的&#x2F;login，发现出现了跨域的问题，后面我处理，我们先用postman调试接口。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/c40ace788e2d49e5855f854d021f468c.png" alt="图片"></p><p>可以看到，我们的随机码token和base64Img编码都是正常的。控制台上看到我们的验证是2yyxm：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/8780598dfff4442f85c6043b968be424.png" alt="图片"></p><p>然后我们尝试登录，因为之前我们已经设置了用户名密码为user&#x2F;111111，所以我们提交表单的时候再带上我们的token和验证码。</p><p>这时候我们就可以去提交表单了吗，其实还不可以，为啥？因为就算我们登录成功，security默认跳转到&#x2F;链接，但是又会因为没有权限访问&#x2F;，所有又会教你去登录，所以我们必须取消原先默认的登录成功之后的操作，根据我们之前分析的流程，登录成功之后会走AuthenticationSuccessHandler，因此在登录之前，我们先去自定义这个登录成功操作类：</p><ul><li>com.markerhub.security.LoginSuccessHandler</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class LoginSuccessHandler implements AuthenticationSuccessHandler &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException &#123;</span><br><span class="line">      response.setContentType(&quot;application/json;charset=UTF-8&quot;);</span><br><span class="line">      ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">      // 生成jwt返回</span><br><span class="line">      String jwt = jwtUtils.generateToken(authentication.getName());</span><br><span class="line">      response.setHeader(jwtUtils.getHeader(), jwt);</span><br><span class="line"></span><br><span class="line">      Result result = Result.succ(&quot;&quot;);</span><br><span class="line">      outputStream.write(JSONUtil.toJsonStr(result).getBytes(&quot;UTF-8&quot;));</span><br><span class="line">      outputStream.flush();</span><br><span class="line">      outputStream.close();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录成功之后我们利用用户名生成jwt，jwtUtils这个工具类我就不贴代码了哈，去看我们项目源码，然后把jwt作为请求头返回回去，名称就叫Authorization哈。我们需要在配置文件中配置一些jwt的一些密钥信息：</p><ul><li>application.yml</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">markerhub:</span><br><span class="line">  jwt:</span><br><span class="line">    # 加密秘钥</span><br><span class="line">    secret: f4e2e52034348f86b67cde581c0f9eb5</span><br><span class="line">    # token有效时长，7天，单位秒</span><br><span class="line">    expire: 604800</span><br><span class="line">    header: Authorization</span><br></pre></td></tr></table></figure><p>然后我们再security配置中添加上登录成功之后的操作类：</p><ul><li>com.markerhub.config.SecurityConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">LoginSuccessHandler loginSuccessHandler;</span><br><span class="line">...</span><br><span class="line"># configure代码：</span><br><span class="line">http.cors().and().csrf().disable()</span><br><span class="line">      .formLogin()</span><br><span class="line">      .failureHandler(loginFailureHandler)</span><br><span class="line">      .successHandler(loginSuccessHandler)</span><br></pre></td></tr></table></figure><p>然后我们去postman的进行我们的登录测试：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/707b7ba4f10840dba655ce1d760e176e.png" alt="图片"></p><p>上面我们可以看到，我们已经可以登录成功了。然后去结果的请求头中查看jwt：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/0eb7f7a703b34f568dfe21557ab312ec.png" alt="图片"></p><p>搞定，登录成功啦，验证码也正常验证了。</p><h4 id="身份认证-1"><a href="#身份认证-1" class="headerlink" title="身份认证 - 1"></a>身份认证 - 1</h4><p>登录成功之后前端就可以获取到了jwt的信息，前端中我们是保存在了store中，同时也保存在了localStorage中，然后每次axios请求之前，我们都会添加上我们的请求头信息，可以回顾一下：</p><ul><li>前端项目的axios.js</li></ul><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/0b2e368e1940427ca8a05e59d5c4836a.png" alt="图片"></p><p>所以后端进行用户身份识别的时候，我们需要通过请求头中获取jwt，然后解析出我们的用户名，这样我们就可以知道是谁在访问我们的接口啦，然后判断用户是否有权限等操作。</p><p>那么我们自定义一个过滤器用来进行识别jwt。</p><ul><li>JWTAuthenticationFilter</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">public class JWTAuthenticationFilter extends BasicAuthenticationFilter &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   JwtUtils jwtUtils;</span><br><span class="line">   @Autowired</span><br><span class="line">   RedisUtil redisUtil;</span><br><span class="line">   @Autowired</span><br><span class="line">   SysUserService sysUserService;</span><br><span class="line">   public JWTAuthenticationFilter(AuthenticationManager authenticationManager) &#123;</span><br><span class="line">      super(authenticationManager);</span><br><span class="line">   &#125;</span><br><span class="line">   @Override</span><br><span class="line">   protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain chain) throws IOException, ServletException &#123;</span><br><span class="line">      log.info(&quot;jwt 校验 filter&quot;);</span><br><span class="line">      String jwt = request.getHeader(jwtUtils.getHeader());</span><br><span class="line">      if (StrUtil.isBlankOrUndefined(jwt)) &#123;</span><br><span class="line">         chain.doFilter(request, response);</span><br><span class="line">         return;</span><br><span class="line">      &#125;</span><br><span class="line">      Claims claim = jwtUtils.getClaimByToken(jwt);</span><br><span class="line">      if (claim == null) &#123;</span><br><span class="line">         throw new JwtException(&quot;token异常！&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      if (jwtUtils.isTokenExpired(claim.getExpiration())) &#123;</span><br><span class="line">         throw new JwtException(&quot;token已过期&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      String username = claim.getSubject();</span><br><span class="line">      log.info(&quot;用户-&#123;&#125;，正在登陆！&quot;, username);</span><br><span class="line">      UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken</span><br><span class="line">            = new UsernamePasswordAuthenticationToken(username, null, new TreeSet&lt;&gt;());</span><br><span class="line">      SecurityContextHolder.getContext().setAuthentication(usernamePasswordAuthenticationToken);</span><br><span class="line">      chain.doFilter(request, response);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的逻辑也很简单，正如我前面说到的，获取到用户名之后我们直接把封装成UsernamePasswordAuthenticationToken，之后交给SecurityContextHolder参数传递authentication对象，这样后续security就能获取到当前登录的用户信息了，也就完成了用户认证。<br>当认证失败的时候会进入AuthenticationEntryPoint，于是我们自定义认证失败返回的数据：</p><ul><li>com.markerhub.security.JwtAuthenticationEntryPoint</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 定义认证失败处理类</span><br><span class="line"> */</span><br><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">public class JwtAuthenticationEntryPoint implements AuthenticationEntryPoint &#123;</span><br><span class="line">   @Override</span><br><span class="line">   public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span><br><span class="line">         throws IOException &#123;</span><br><span class="line">      log.info(&quot;认证失败！未登录！&quot;);</span><br><span class="line">      response.setContentType(&quot;application/json;charset=UTF-8&quot;);</span><br><span class="line">      response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);</span><br><span class="line">      ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line"></span><br><span class="line">      Result result = Result.fail(&quot;请先登录！&quot;);</span><br><span class="line">      outputStream.write(JSONUtil.toJsonStr(result).getBytes(&quot;UTF-8&quot;));</span><br><span class="line">      outputStream.flush();</span><br><span class="line">      outputStream.close();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过是啥原因，认证失败，我们就要求重新登录，所以返回的信息直接明了“请先登录！”哈哈。<br>然后我们把认证过滤器和认证失败入口配置到SecurityConfig中：</p><ul><li>com.markerhub.config.SecurityConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">JWTAuthenticationFilter jwtAuthenticationFilter() throws Exception &#123;</span><br><span class="line">   JWTAuthenticationFilter filter = new JWTAuthenticationFilter(authenticationManager());</span><br><span class="line">   return filter;</span><br><span class="line">&#125;</span><br><span class="line">.and()</span><br><span class="line">.exceptionHandling()</span><br><span class="line">.authenticationEntryPoint(jwtAuthenticationEntryPoint)</span><br><span class="line">.and()</span><br><span class="line">.addFilter(jwtAuthenticationFilter())</span><br><span class="line">.addFilterBefore(captchaFilter, UsernamePasswordAuthenticationFilter.class) // 登录验证码校验过滤器</span><br></pre></td></tr></table></figure><p>这样携带jwt请求头我们就可以正常访问我们的接口了。</p><h4 id="身份认证-2"><a href="#身份认证-2" class="headerlink" title="身份认证 - 2"></a>身份认证 - 2</h4><p>之前我们的用户名密码配置在配置文件中的，而且密码也用的是明文，这明显不符合我们的要求，我们的用户必须是存储在数据库中，密码也是得经过加密的。所以我们先来解决这个问题，然后再去弄授权。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/2b144e1469d544d8963d461fe5cdec15.png" alt="图片"></p><p>首先来插入一条用户数据，但这里有个问题，就是我们的密码怎么生成？密码怎么来的？这里我们使用Security内置了的BCryptPasswordEncoder，里面就有生成和匹配密码是否正确的方法，也就是加密和验证策略。因此我们再SecurityConfig中进行配置：</p><ul><li>com.markerhub.config.SecurityConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">BCryptPasswordEncoder bCryptPasswordEncoder() &#123;</span><br><span class="line">   return new BCryptPasswordEncoder();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样系统就会使用我们找个新的密码策略进行匹配密码是否正常了。之前我们配置文件配置的用户名密码去掉：</p><ul><li>application.yml</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#  security:</span><br><span class="line">#    user:</span><br><span class="line">#      name: user</span><br><span class="line">#      password: 111111</span><br></pre></td></tr></table></figure><p>ok，我们先使用BCryptPasswordEncoder给我们生成一个密码，给数据库添加一条数据先，我们再TestController中注入BCryptPasswordEncoder，然后使用encode进行密码加密，对了，记得在SecurityConfig中吧&#x2F;test&#x2F;**添加白名单哈，不然访问会提示你登录！！</p><ul><li>com.markerhub.controller.TestController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">BCryptPasswordEncoder bCryptPasswordEncoder;</span><br><span class="line">@GetMapping(&quot;/test/pass&quot;)</span><br><span class="line">public Result passEncode() &#123;</span><br><span class="line">   // 密码加密</span><br><span class="line">   String pass = bCryptPasswordEncoder.encode(&quot;111111&quot;);</span><br><span class="line"></span><br><span class="line">   // 密码验证</span><br><span class="line">   boolean matches = bCryptPasswordEncoder.matches(&quot;111111&quot;, pass);</span><br><span class="line"></span><br><span class="line">   return Result.succ(MapUtil.builder()</span><br><span class="line">         .put(&quot;pass&quot;, pass)</span><br><span class="line">         .put(&quot;marches&quot;, matches)</span><br><span class="line">         .build()</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到我密码是111111，加密以及验证的结果如下：$2a$10$R7zegeWzOXPw871CmNuJ6upC0v8D373GuLuTw8jn6NET4BkPRZfgK<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/c217d7cd9aa545e0a5b40aec0c344613.png" alt="图片"></p><p>data中的那一串字符串就是我们的密码了，可以看到marches也是true，说明密码验证也是正确的，我们添加到我们数据库sys_user表中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO `vueadmin`.`sys_user` (`id`, `username`, `password`, `avatar`, `email`, `city`, `created`, `updated`, `last_login`, `statu`) VALUES (&#x27;1&#x27;, &#x27;admin&#x27;, &#x27;$2a$10$R7zegeWzOXPw871CmNuJ6upC0v8D373GuLuTw8jn6NET4BkPRZfgK&#x27;, &#x27;https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/5a9f48118166308daba8b6da7e466aab.jpg&#x27;, &#x27;123@qq.com&#x27;, &#x27;广州&#x27;, &#x27;2021-01-12 22:13:53&#x27;, &#x27;2021-01-16 16:57:32&#x27;, &#x27;2020-12-30 08:38:37&#x27;, &#x27;1&#x27;);</span><br></pre></td></tr></table></figure><p>后面我们就可以使用admin&#x2F;111111登录我们的系统哈。<br>但是先我们登录过程系统不是从我们数据库中获取数据的，因此，我们需要重新定义这个查用户数据的过程，我们需要重写UserDetailsService接口。</p><ul><li>com.markerhub.security.UserDetailsServiceImpl</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Service</span><br><span class="line">public class UserDetailsServiceImpl implements UserDetailsService &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   SysUserService sysUserService;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123;</span><br><span class="line">      SysUser sysUser = sysUserService.getByUsername(username);</span><br><span class="line">      if (sysUser == null) &#123;</span><br><span class="line">         throw new UsernameNotFoundException(&quot;用户名或密码不正确!&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      return new AccountUser(sysUser.getId(), sysUser.getUsername(), sysUser.getPassword(), new TreeSet&lt;&gt;());</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为security在认证用户身份的时候会调用UserDetailsService.loadUserByUsername()方法，因此我们重写了之后security就可以根据我们的流程去查库获取用户了。然后我们把UserDetailsServiceImpl配置到SecurityConfig中：</p><ul><li>com.markerhub.config.SecurityConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line">UserDetailsServiceImpl userDetailsService;</span><br><span class="line">@Override</span><br><span class="line">protected void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</span><br><span class="line">   auth.userDetailsService(userDetailsService);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后上面UserDetailsService.loadUserByUsername()默认返回的UserDetails，我们自定义了AccountUser去重写了UserDetails，这也是为了后面我们可能会调整用户的一些数据等。</p><ul><li>com.markerhub.security.AccountUser</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public class AccountUser implements UserDetails &#123;</span><br><span class="line">   private Long userId;</span><br><span class="line">   private String password;</span><br><span class="line">   private final String username;</span><br><span class="line">   private final Collection&lt;? extends GrantedAuthority&gt; authorities;</span><br><span class="line">   private final boolean accountNonExpired;</span><br><span class="line">   private final boolean accountNonLocked;</span><br><span class="line">   private final boolean credentialsNonExpired;</span><br><span class="line">   private final boolean enabled;</span><br><span class="line">   public AccountUser(Long userId, String username, String password, Collection&lt;? extends GrantedAuthority&gt; authorities) &#123;</span><br><span class="line">      this(userId, username, password, true, true, true, true, authorities);</span><br><span class="line">   &#125;</span><br><span class="line">   public AccountUser(Long userId, String username, String password, boolean enabled,</span><br><span class="line">                      boolean accountNonExpired, boolean credentialsNonExpired, boolean accountNonLocked,</span><br><span class="line">                      Collection&lt;? extends GrantedAuthority&gt; authorities) &#123;</span><br><span class="line">      Assert.isTrue(username != null &amp;&amp; !&quot;&quot;.equals(username) &amp;&amp; password != null, &quot;Cannot pass null or empty values to constructor&quot;);</span><br><span class="line">      this.userId = userId;</span><br><span class="line">      this.username = username;</span><br><span class="line">      this.password = password;</span><br><span class="line">      this.enabled = enabled;</span><br><span class="line">      this.accountNonExpired = accountNonExpired;</span><br><span class="line">      this.credentialsNonExpired = credentialsNonExpired;</span><br><span class="line">      this.accountNonLocked = accountNonLocked;</span><br><span class="line">      this.authorities = authorities;</span><br><span class="line">   &#125;</span><br><span class="line">   public Long getUserId() &#123;</span><br><span class="line">      return userId;</span><br><span class="line">   &#125;</span><br><span class="line">   ...  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实数据基本没变，我就添加多了一个用户的id而已。<br>ok，万事俱备，我们再次尝试去登录，看能不能登录成功。</p><p>1、获取验证码：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/f8de03facfd54d2f94a692fa23becdd1.png" alt="图片"></p><p>2、从控制台获取到对应的验证码</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/5bde046bd26042ae885bcea30bfaa1ce.png" alt="图片"></p><p>3、提交登录表单</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/e7e798ecdc66452db7af24f28434a11d.png" alt="图片"></p><p>4、登录成功，并在请求头中获取到了Authorization，也就是JWT。完美！！</p><h4 id="解决授权"><a href="#解决授权" class="headerlink" title="解决授权"></a>解决授权</h4><p>然后关于权限部分，也是security的重要功能，当用户认证成功之后，我们就知道谁在访问系统接口，这是又有一个问题，就是这个用户有没有权限来访问我们这个接口呢，要解决这个问题，我们需要知道用户有哪些权限，哪些角色，这样security才能我们做权限判断。</p><p>之前我们已经定义及几张表，用户、角色、菜单、以及一些关联表，一般当权限粒度比较细的时候，我们都通过判断用户有没有此菜单或操作的权限，而不是通过角色判断，而用户和菜单是不直接做关联的，是通过用户拥有哪些角色，然后角色拥有哪些菜单权限这样来获得的。</p><p>问题1：我们是在哪里赋予用户权限的？有两个地方：</p><ul><li>1、用户登录，调用调用UserDetailsService.loadUserByUsername()方法时候可以返回用户的权限信息。</li><li>2、接口调用进行身份认证过滤器时候JWTAuthenticationFilter，需要返回用户权限信息</li></ul><p>问题2：在哪里决定什么接口需要什么权限？</p><p>Security内置的权限注解：</p><ul><li><a href="https://github.com/PreAuthorize">@PreAuthorize</a>：方法执行前进行权限检查</li><li><a href="https://github.com/PostAuthorize">@PostAuthorize</a>：方法执行后进行权限检查</li><li><a href="https://github.com/Secured">@Secured</a>：类似于 <a href="https://github.com/PreAuthorize">@PreAuthorize</a></li></ul><p>可以在Controller的方法前添加这些注解表示接口需要什么权限。</p><p>比如需要Admin角色权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@PreAuthorize(&quot;hasRole(&#x27;admin&#x27;)&quot;)</span><br></pre></td></tr></table></figure><p>比如需要添加管理员的操作权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:user:save&#x27;)&quot;)</span><br></pre></td></tr></table></figure><p>ok，我们再来整体梳理一下授权、验证权限的流程：</p><ol><li>用户登录或者调用接口时候识别到用户，并获取到用户的权限信息</li><li>注解标识Controller中的方法需要的权限或角色</li><li>Security通过FilterSecurityInterceptor匹配URI和权限是否匹配</li><li>有权限则可以访问接口，当无权限的时候返回异常交给AccessDeniedHandler操作类处理</li></ol><p>ok，流程清晰之后我们就开始我们的编码：</p><ul><li>UserDetailsServiceImpl</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException &#123;</span><br><span class="line">   ...   </span><br><span class="line">   return new AccountUser(sysUser.getId(), sysUser.getUsername(), sysUser.getPassword(), getUserAuthority(sysUser.getId()));</span><br><span class="line">&#125;</span><br><span class="line">public List&lt;GrantedAuthority&gt; getUserAuthority(Long userId) &#123;</span><br><span class="line">   // 通过内置的工具类，把权限字符串封装成GrantedAuthority列表</span><br><span class="line">   return  AuthorityUtils.commaSeparatedStringToAuthorityList(</span><br><span class="line">         sysUserService.getUserAuthorityInfo(userId)</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>com.markerhub.security.JWTAuthenticationFilter</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SysUser sysUser = sysUserService.getByUsername(username);</span><br><span class="line">List&lt;GrantedAuthority&gt; grantedAuthorities = userDetailsService.getUserAuthority(sysUser.getId());</span><br><span class="line">UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken</span><br><span class="line">      = new UsernamePasswordAuthenticationToken(username, null, grantedAuthorities);</span><br></pre></td></tr></table></figure><p>代码中的com.markerhub.service.impl.SysUserServiceImpl#getUserAuthorityInfo是重点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Service</span><br><span class="line">public class SysUserServiceImpl extends ServiceImpl&lt;SysUserMapper, SysUser&gt; implements SysUserService &#123;</span><br><span class="line">   ... </span><br><span class="line">   @Override</span><br><span class="line">   public String getUserAuthorityInfo(Long userId) &#123;</span><br><span class="line">      SysUser sysUser = this.getById(userId);</span><br><span class="line">      String authority = null;</span><br><span class="line"></span><br><span class="line">      if (redisUtil.hasKey(&quot;GrantedAuthority:&quot; + sysUser.getUsername())) &#123;</span><br><span class="line">         // 优先从缓存获取</span><br><span class="line">         authority = (String)redisUtil.get(&quot;GrantedAuthority:&quot; + sysUser.getUsername());</span><br><span class="line"></span><br><span class="line">      &#125; else &#123;</span><br><span class="line"></span><br><span class="line">         List&lt;SysRole&gt; roles = sysRoleService.list(new QueryWrapper&lt;SysRole&gt;()</span><br><span class="line">               .inSql(&quot;id&quot;, &quot;select role_id from sys_user_role where user_id = &quot; + userId));</span><br><span class="line">         List&lt;Long&gt; menuIds = sysUserMapper.getNavMenuIds(userId);</span><br><span class="line">         List&lt;SysMenu&gt; menus = sysMenuService.listByIds(menuIds);</span><br><span class="line"></span><br><span class="line">         String roleNames = roles.stream().map(r -&gt; &quot;ROLE_&quot; + r.getCode()).collect(Collectors.joining(&quot;,&quot;));</span><br><span class="line">         String permNames = menus.stream().map(m -&gt; m.getPerms()).collect(Collectors.joining(&quot;,&quot;));</span><br><span class="line"></span><br><span class="line">         authority = roleNames.concat(&quot;,&quot;).concat(permNames);</span><br><span class="line">         log.info(&quot;用户ID - &#123;&#125; ---拥有的权限：&#123;&#125;&quot;, userId, authority);</span><br><span class="line"></span><br><span class="line">         redisUtil.set(&quot;GrantedAuthority:&quot; + sysUser.getUsername(), authority, 60*60);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      return authority;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，我通过用户id分别获取到用户的角色信息和菜单信息，然后通过逗号链接起来，因为角色信息我们需要这样“ROLE_”+角色，所以才有了上面的写法：<br>比如用户拥有Admin角色和添加用户权限，则最后的字符串是：<strong>ROLE_admin,sys<img src="https://www.webpagefx.com/tools/emoji-cheat-sheet/graphics/emojis/user.png" alt=":user:">save</strong>。</p><p>同时为了避免多次查库，我做了一层缓存，这里理解应该不难。</p><p>然后sysUserMapper.getNavMenuIds(userId)因为要查询数据库，具体SQL如下：</p><ul><li>com.markerhub.mapper.SysUserMapper#getNavMenuIds</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;getNavMenuIds&quot; resultType=&quot;java.lang.Long&quot;&gt;</span><br><span class="line">    SELECT</span><br><span class="line">        DISTINCT rm.menu_id</span><br><span class="line">    FROM</span><br><span class="line">        sys_user_role ur</span><br><span class="line">    LEFT JOIN `sys_role_menu` rm ON rm.role_id = ur.role_id</span><br><span class="line">    WHERE</span><br><span class="line">        ur.user_id = #&#123;userId&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>上面表示通过用户ID获取用户关联的菜单的id，因此需要用到两个中间表的关联了。<br>ok，这样我们就赋予了用户角色和操作权限了。后面我们只需要在Controller添加上具体注解表示需要的权限，Security就会自动帮我们自动完成权限校验了。</p><h4 id="权限缓存"><a href="#权限缓存" class="headerlink" title="权限缓存"></a>权限缓存</h4><p>因为上面我在获取用户权限那里添加了个缓存，这时候问题来了，就是权限缓存的实时更新问题，比如当后台更新某个管理员的权限角色信息的时候如果权限缓存信息没有实时更新，就会出现操作无效的问题，那么我们现在点定义几个方法，用于清除某个用户或角色或者某个菜单的权限的方法：</p><ul><li>com.markerhub.service.impl.SysUserServiceImpl</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 删除某个用户的权限信息</span><br><span class="line">@Override</span><br><span class="line">public void clearUserAuthorityInfo(String username) &#123;</span><br><span class="line">   redisUtil.del(&quot;GrantedAuthority:&quot; + username);</span><br><span class="line">&#125;</span><br><span class="line">// 删除所有与该角色关联的用户的权限信息</span><br><span class="line">@Override</span><br><span class="line">public void clearUserAuthorityInfoByRoleId(Long roleId) &#123;</span><br><span class="line">   List&lt;SysUser&gt; sysUsers = this.list(new QueryWrapper&lt;SysUser&gt;()</span><br><span class="line">         .inSql(&quot;id&quot;, &quot;select user_id from sys_user_role where role_id = &quot; + roleId)</span><br><span class="line">   );</span><br><span class="line">   sysUsers.forEach(u -&gt; &#123;</span><br><span class="line">      this.clearUserAuthorityInfo(u.getUsername());</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br><span class="line">// 删除所有与该菜单关联的所有用户的权限信息</span><br><span class="line">@Override</span><br><span class="line">public void clearUserAuthorityInfoByMenuId(Long menuId) &#123;</span><br><span class="line">   List&lt;SysUser&gt; sysUsers = sysUserMapper.listByMenuId(menuId);</span><br><span class="line">   sysUsers.forEach(u -&gt; &#123;</span><br><span class="line">      this.clearUserAuthorityInfo(u.getUsername());</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面最后一个方法查到了与菜单关联的所有用户的，具体sql如下：</p><ul><li>com.markerhub.mapper.SysUserMapper#listByMenuId</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;listByMenuId&quot; resultType=&quot;com.javacat.entity.SysUser&quot;&gt;</span><br><span class="line">    SELECT</span><br><span class="line">    DISTINCT</span><br><span class="line">        su.*</span><br><span class="line">    FROM</span><br><span class="line">        sys_user_role ur</span><br><span class="line">    LEFT JOIN `sys_role_menu` rm ON rm.role_id = ur.role_id</span><br><span class="line">    LEFT JOIN `sys_user` su ON su.id = ur.user_id</span><br><span class="line">    WHERE</span><br><span class="line">        rm.menu_id = #&#123;menuId&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>有了这几个方法之后，在哪里调用？这就简单了，在更新、删除角色权限、更新、删除菜单的时候调用，虽然我们现在还没写到这几个方法，后续我们再写增删改查的时候记得加上就行啦。</p><h4 id="退出数据返回"><a href="#退出数据返回" class="headerlink" title="退出数据返回"></a>退出数据返回</h4><p>jwt -username</p><p>token - 随机码 - redis</p><ul><li>com.markerhub.security.JwtLogoutSuccessHandler</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class JwtLogoutSuccessHandler implements LogoutSuccessHandler &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   JwtUtils jwtUtils;</span><br><span class="line">   @Override</span><br><span class="line">   public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span><br><span class="line">         throws IOException, ServletException &#123;</span><br><span class="line">      if (authentication != null) &#123;</span><br><span class="line">         new SecurityContextLogoutHandler().logout(request, response, authentication);</span><br><span class="line">      &#125;</span><br><span class="line">      response.setContentType(&quot;application/json;charset=UTF-8&quot;);</span><br><span class="line">      response.setHeader(jwtUtils.getHeader(), &quot;&quot;);</span><br><span class="line">      ServletOutputStream out = response.getOutputStream();</span><br><span class="line">      Result result = Result.succ(&quot;&quot;);</span><br><span class="line">      out.write(JSONUtil.toJsonStr(result).getBytes(&quot;UTF-8&quot;));</span><br><span class="line">      out.flush();</span><br><span class="line">      out.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h4 id="无权限数据返回"><a href="#无权限数据返回" class="headerlink" title="无权限数据返回"></a>无权限数据返回</h4><ul><li>com.markerhub.security.JwtAccessDeniedHandler</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">public class JwtAccessDeniedHandler implements AccessDeniedHandler &#123;</span><br><span class="line">   @Override</span><br><span class="line">   public void handle(HttpServletRequest request, HttpServletResponse response, AccessDeniedException accessDeniedException)</span><br><span class="line">         throws IOException, ServletException &#123;</span><br><span class="line">//    response.sendError(HttpServletResponse.SC_FORBIDDEN, accessDeniedException.getMessage());</span><br><span class="line">      log.info(&quot;权限不够！！&quot;);</span><br><span class="line">      response.setContentType(&quot;application/json;charset=UTF-8&quot;);</span><br><span class="line">      response.setStatus(HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">      ServletOutputStream outputStream = response.getOutputStream();</span><br><span class="line">      Result result = Result.fail(accessDeniedException.getMessage());</span><br><span class="line">      outputStream.write(JSONUtil.toJsonStr(result).getBytes(&quot;UTF-8&quot;));</span><br><span class="line">      outputStream.flush();</span><br><span class="line">      outputStream.close();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>致此，SpringSecurity就已经完美整合到了我们的项目中来了。</p><h3 id="7-解决跨域问题"><a href="#7-解决跨域问题" class="headerlink" title="7. 解决跨域问题"></a>7. 解决跨域问题</h3><p>上面的调试我们都是使用的postman，如果我们和前端进行对接的时候，会出现跨域的问题，如何解决？</p><ul><li>com.markerhub.config.CorsConfig</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">public class CorsConfig implements WebMvcConfigurer &#123;</span><br><span class="line">   private CorsConfiguration buildConfig() &#123;</span><br><span class="line">      CorsConfiguration corsConfiguration = new CorsConfiguration();</span><br><span class="line">      corsConfiguration.addAllowedOrigin(&quot;*&quot;);</span><br><span class="line">      corsConfiguration.addAllowedHeader(&quot;*&quot;);</span><br><span class="line">      corsConfiguration.addAllowedMethod(&quot;*&quot;);</span><br><span class="line">      corsConfiguration.addExposedHeader(&quot;Authorization&quot;);</span><br><span class="line">      return corsConfiguration;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Bean</span><br><span class="line">   public CorsFilter corsFilter() &#123;</span><br><span class="line">      UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();</span><br><span class="line">      source.registerCorsConfiguration(&quot;/**&quot;, buildConfig());</span><br><span class="line">      return new CorsFilter(source);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public void addCorsMappings(CorsRegistry registry) &#123;</span><br><span class="line">      registry.addMapping(&quot;/**&quot;)</span><br><span class="line">            .allowedOrigins(&quot;*&quot;)</span><br><span class="line">//          .allowCredentials(true)</span><br><span class="line">            .allowedMethods(&quot;GET&quot;, &quot;POST&quot;, &quot;DELETE&quot;, &quot;PUT&quot;)</span><br><span class="line">            .maxAge(3600);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-前后端对接的问题"><a href="#8-前后端对接的问题" class="headerlink" title="8. 前后端对接的问题"></a>8. 前后端对接的问题</h3><p>因为我们之前开发前端的时候，我们都是使用mockjs返回随机数据的，一般来说问题不会很大，我就怕有些同学再去掉mock之后，和后端对接却显示不出数据，这就尴尬了。这时候我建议你去看我的开发视频哈。</p><p>后面因为都是接口的增删改查，难度其实不是特别大，所以大部分时候我都会直接贴代码，如果想看手把手教程，还是去看我的教学视频哈，B站搜索MarkerHub就可以啦，公众号也是叫MarkerHub。</p><h3 id="9-菜单接口开发"><a href="#9-菜单接口开发" class="headerlink" title="9. 菜单接口开发"></a>9. 菜单接口开发</h3><p>我们先来开发菜单的接口，因为这3个表：用户表、角色表、菜单表，才有菜单表是不需要通过其他表来获取信息的。比如用户需要关联角色，角色需要关联菜单，而菜单不需要主动关联其他表。因此菜单表的增删改查是最简单的。</p><p>再回到我们的前端项目，登录完成之后我们通过JWT获取项目的导航菜单和权限，那么接下来我们就先编写这个接口。</p><p>获取菜单导航和权限的链接是&#x2F;sys&#x2F;menu&#x2F;nav，然后我们的菜单导航的json数据应该是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   title: &#x27;角色管理&#x27;,</span><br><span class="line">   icon: &#x27;el-icon-rank&#x27;,</span><br><span class="line">   path: &#x27;/sys/roles&#x27;,</span><br><span class="line">   name: &#x27;SysRoles&#x27;,</span><br><span class="line">   component: &#x27;sys/Role&#x27;,</span><br><span class="line">   children: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后返回的权限数据应该是个数组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;sys:menu:list&quot;,&quot;sys:menu:save&quot;,&quot;sys:user:list&quot;...]</span><br></pre></td></tr></table></figure><p>注意导航菜单那里有个children，也就是子菜单，是个树形结构，因为我们的菜单可能这样：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">系统管理 - 菜单管理 - 添加菜单</span><br></pre></td></tr></table></figure><p>可以看到这就已经有3级了菜单了。<br>所以在打代码时候要注意这个关系的关联。我们的SysMenu实体类中有个parentId，但是没有children，因此我们可以在SysMenu中添加一个children，当然了其实不添加也可以，因为我们也需要一个dto，这样我们才能按照上面json数据格式返回。</p><p>我们还是来添加一个children吧：</p><ul><li>com.markerhub.entity.SysMenu</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@EqualsAndHashCode(callSuper = true)</span><br><span class="line">public class SysMenu extends BaseEntity &#123;</span><br><span class="line">   ...</span><br><span class="line">   @TableField(exist = false)</span><br><span class="line">   private List&lt;SysMenu&gt; children = new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们也先来定义一个SysMenuDto吧，知道要返回什么样的数据，我们就只需要去填充数据就好了</p><ul><li>com.markerhub.common.dto.SysMenuDto</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">public class SysMenuDto implements Serializable &#123;</span><br><span class="line">   private Long id;</span><br><span class="line">   private String title;</span><br><span class="line">   private String icon;</span><br><span class="line">   private String path;</span><br><span class="line">   private String name;</span><br><span class="line">   private String component;</span><br><span class="line">   List&lt;SysMenuDto&gt; children = new ArrayList&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ok，我们来开始我们的编码</p><ul><li>com.markerhub.controller.SysMenuController#nav</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 获取当前用户的菜单栏以及权限</span><br><span class="line"> */</span><br><span class="line">@GetMapping(&quot;/nav&quot;)</span><br><span class="line">public Result nav(Principal principal) &#123;</span><br><span class="line">   String username = principal.getName();</span><br><span class="line">   SysUser sysUser = sysUserService.getByUsername(username);</span><br><span class="line">   // ROLE_Admin,sys:user:save</span><br><span class="line">   String[] authoritys = StringUtils.tokenizeToStringArray(</span><br><span class="line">         sysUserService.getUserAuthorityInfo(sysUser.getId())</span><br><span class="line">         , &quot;,&quot;);</span><br><span class="line">   return Result.succ(</span><br><span class="line">         MapUtil.builder()</span><br><span class="line">               .put(&quot;nav&quot;, sysMenuService.getcurrentUserNav())</span><br><span class="line">               .put(&quot;authoritys&quot;, authoritys)</span><br><span class="line">               .map()</span><br><span class="line">   );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法中Principal principal表示注入当前用户的信息，getName就可以获取当当前用户的用户名了。sysUserService.getUserAuthorityInfo方法我们之前已经说过了，就在我们登录完成或者身份认证时候需要返回用户权限时候编写的。然后通过StringUtils.tokenizeToStringArray把字符串通过逗号分开组成数组形式。<br>重点在与sysMenuService.getcurrentUserNav，获取当前用户的菜单导航，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">@Service</span><br><span class="line">public class SysMenuServiceImpl extends ServiceImpl&lt;SysMenuMapper, SysMenu&gt; implements SysMenuService &#123;</span><br><span class="line">   ...</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * 获取当前用户菜单导航</span><br><span class="line">    */</span><br><span class="line">   @Override</span><br><span class="line">   public List&lt;SysMenuDto&gt; getcurrentUserNav() &#123;</span><br><span class="line">      String username = (String) SecurityContextHolder.getContext().getAuthentication().getPrincipal();</span><br><span class="line"></span><br><span class="line">      SysUser sysUser = sysUserService.getByUsername(username);</span><br><span class="line"></span><br><span class="line">      // 获取用户的所有菜单</span><br><span class="line">      List&lt;Long&gt; menuIds = sysUserMapper.getNavMenuIds(sysUser.getId());</span><br><span class="line"></span><br><span class="line">      List&lt;SysMenu&gt; menus = buildTreeMenu(this.listByIds(menuIds));</span><br><span class="line">      return convert(menus);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * 把list转成树形结构的数据</span><br><span class="line">    */</span><br><span class="line">   private List&lt;SysMenu&gt; buildTreeMenu(List&lt;SysMenu&gt; menus)&#123;</span><br><span class="line">      List&lt;SysMenu&gt; finalMenus = new ArrayList&lt;&gt;();</span><br><span class="line">      for (SysMenu menu : menus) &#123;</span><br><span class="line"></span><br><span class="line">         // 先寻找各自的孩子</span><br><span class="line">         for (SysMenu e : menus) &#123;</span><br><span class="line">            if (e.getParentId() == menu.getId()) &#123;</span><br><span class="line">               menu.getChildren().add(e);</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         // 提取出父节点</span><br><span class="line">         if (menu.getParentId() == 0L) &#123;</span><br><span class="line">            finalMenus.add(menu);</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      return finalMenus;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * menu转menuDto</span><br><span class="line">    */</span><br><span class="line">   private List&lt;SysMenuDto&gt; convert(List&lt;SysMenu&gt; menus) &#123;</span><br><span class="line">      List&lt;SysMenuDto&gt; menuDtos = new ArrayList&lt;&gt;();</span><br><span class="line">      menus.forEach(m -&gt; &#123;</span><br><span class="line">         SysMenuDto dto = new SysMenuDto();</span><br><span class="line">         dto.setId(m.getId());</span><br><span class="line">         dto.setName(m.getPerms());</span><br><span class="line">         dto.setTitle(m.getName());</span><br><span class="line">         dto.setComponent(m.getComponent());</span><br><span class="line">         dto.setIcon(m.getIcon());</span><br><span class="line">         dto.setPath(m.getPath());</span><br><span class="line">         if (m.getChildren().size() &gt; 0) &#123;</span><br><span class="line">            dto.setChildren(convert(m.getChildren()));</span><br><span class="line">         &#125;</span><br><span class="line">         menuDtos.add(dto);</span><br><span class="line">      &#125;);</span><br><span class="line">      return menuDtos;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口中sysUserMapper.getNavMenuIds我们之前就已经写过的了，通过用户id获取菜单的id，然后后面就是转成树形结构，buildTreeMenu方法的思想很简单，我们现实把菜单循环，让所有菜单先找到各自的子节点，然后我们在把最顶级的菜单获取出来，这样顶级下面有二级，二级也有自己的三级。最后就是convert把menu转成menuDto。这个比较简单，就不说了。<br>好了，导航菜单已经开发完毕，我们来写菜单管理的增删改查，因为菜单列表也是个树形接口，这次我们就不是获取当前用户的菜单列表的，而是所有菜单然后组成树形结构，一样的思想，数据不一样而已。</p><ul><li>com.markerhub.controller.SysMenuController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">@GetMapping(&quot;/info/&#123;id&#125;&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:menu:list&#x27;)&quot;)</span><br><span class="line">public Result info(@PathVariable(&quot;id&quot;) Long id) &#123;</span><br><span class="line">   return Result.succ(sysMenuService.getById(id));</span><br><span class="line">&#125;</span><br><span class="line">@GetMapping(&quot;/list&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:menu:list&#x27;)&quot;)</span><br><span class="line">public Result list() &#123;</span><br><span class="line">   List&lt;SysMenu&gt; menus = sysMenuService.tree();</span><br><span class="line">   return Result.succ(menus);</span><br><span class="line">&#125;</span><br><span class="line">@PostMapping(&quot;/save&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:menu:save&#x27;)&quot;)</span><br><span class="line">public Result save(@Validated @RequestBody SysMenu sysMenu) &#123;</span><br><span class="line">   sysMenu.setCreated(LocalDateTime.now());</span><br><span class="line">   sysMenu.setStatu(Const.STATUS_ON);</span><br><span class="line">   sysMenuService.save(sysMenu);</span><br><span class="line">   return Result.succ(sysMenu);</span><br><span class="line">&#125;</span><br><span class="line">@PostMapping(&quot;/update&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:menu:update&#x27;)&quot;)</span><br><span class="line">public Result update(@Validated @RequestBody SysMenu sysMenu) &#123;</span><br><span class="line">   sysMenu.setUpdated(LocalDateTime.now());</span><br><span class="line">   sysMenuService.updateById(sysMenu);</span><br><span class="line">   // 清除所有与该菜单相关的权限缓存</span><br><span class="line">   sysUserService.clearUserAuthorityInfoByMenuId(sysMenu.getId());</span><br><span class="line">   return Result.succ(sysMenu);</span><br><span class="line">&#125;</span><br><span class="line">@Transactional</span><br><span class="line">@PostMapping(&quot;/delete/&#123;id&#125;&quot;)</span><br><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:menu:delete&#x27;)&quot;)</span><br><span class="line">public Result delete(@PathVariable Long id) &#123;</span><br><span class="line">   int count = sysMenuService.count(new QueryWrapper&lt;SysMenu&gt;().eq(&quot;parent_id&quot;, id));</span><br><span class="line">   if (count &gt; 0) &#123;</span><br><span class="line">      return Result.fail(&quot;请先删除子菜单&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   // 先清除所有与该菜单相关的权限缓存</span><br><span class="line">   sysUserService.clearUserAuthorityInfoByMenuId(id);</span><br><span class="line">   sysMenuService.removeById(id);</span><br><span class="line"></span><br><span class="line">   // 同步删除</span><br><span class="line">   sysRoleMenuService.remove(new QueryWrapper&lt;SysRoleMenu&gt;().eq(&quot;menu_id&quot;, id));</span><br><span class="line">   return Result.succ(&quot;&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除、更新菜单的时候记得调用根据菜单id清楚用户权限缓存信息的方法哈。然后每个方法前都会带有权限注解：<a href="https://github.com/PreAuthorize">@PreAuthorize</a>(“hasAuthority(‘sys<img src="https://www.webpagefx.com/tools/emoji-cheat-sheet/graphics/emojis/menu.png" alt=":menu:">delete’)”)，这就要求用户有特定的操作权限才能调用这个接口，sys<img src="https://www.webpagefx.com/tools/emoji-cheat-sheet/graphics/emojis/menu.png" alt=":menu:">delete这些数据不是乱写出来的，我们必须和数据库的数据保持一致才行，然后component字段，也是要和前端进行沟通，因为这个是链接到的前端的组件页面。<br>有了增删改查，我们就去先添加我们的所有的菜单权限数据先。效果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/45a01b161a5d4e15b8d92beb9452fd87.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/2a97dff391384a0783ee135bceb4aa41.png" alt="图片"></p><p>基本上线填好所有菜单的列表和增删改查操作权限，就ok。</p><h3 id="10-角色接口开发"><a href="#10-角色接口开发" class="headerlink" title="10. 角色接口开发"></a>10. 角色接口开发</h3><p>角色的增删改查其实也简单，而且字段这么少，基本上吧菜单的增删改查复制过来，然后把menu改成role，在调整一下就差不多啦。然后有个角色关联菜单的操作，这个我们等下讲讲，先来看代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/sys/role&quot;)</span><br><span class="line">public class SysRoleController extends BaseController &#123;</span><br><span class="line">   @GetMapping(&quot;/info/&#123;id&#125;&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:list&#x27;)&quot;)</span><br><span class="line">   public Result info(@PathVariable Long id) &#123;</span><br><span class="line">      SysRole role = sysRoleService.getById(id);</span><br><span class="line">      List&lt;SysRoleMenu&gt; roleMenus = sysRoleMenuService.list(new QueryWrapper&lt;SysRoleMenu&gt;().eq(&quot;role_id&quot;, id));</span><br><span class="line">      List&lt;Long&gt; menuIds = roleMenus.stream().map(p -&gt; p.getMenuId()).collect(Collectors.toList());</span><br><span class="line">      role.setMenuIds(menuIds);</span><br><span class="line">      return Result.succ(role);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @GetMapping(&quot;/list&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:list&#x27;)&quot;)</span><br><span class="line">   public Result list(String name) &#123;</span><br><span class="line">      Page&lt;SysRole&gt; roles = sysRoleService.page(getPage(),</span><br><span class="line">            new QueryWrapper&lt;SysRole&gt;()</span><br><span class="line">                  .like(StrUtil.isNotBlank(name), &quot;name&quot;, name)</span><br><span class="line">      );</span><br><span class="line">      return Result.succ(roles);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @PostMapping(&quot;/save&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:save&#x27;)&quot;)</span><br><span class="line">   public Result save(@Validated @RequestBody SysRole sysRole) &#123;</span><br><span class="line">      sysRole.setCreated(LocalDateTime.now());</span><br><span class="line">      sysRole.setStatu(Const.STATUS_ON);</span><br><span class="line">      sysRoleService.save(sysRole);</span><br><span class="line">      return Result.succ(sysRole);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @PostMapping(&quot;/update&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:update&#x27;)&quot;)</span><br><span class="line">   public Result update(@Validated @RequestBody SysRole sysRole) &#123;</span><br><span class="line">      sysRole.setUpdated(LocalDateTime.now());</span><br><span class="line">      sysRoleService.updateById(sysRole);</span><br><span class="line">      return Result.succ(sysRole);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Transactional</span><br><span class="line">   @PostMapping(&quot;/delete&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:delete&#x27;)&quot;)</span><br><span class="line">   public Result delete(@RequestBody Long[] ids)&#123;</span><br><span class="line">      sysRoleService.removeByIds(Arrays.asList(ids));</span><br><span class="line">      // 同步删除</span><br><span class="line">      sysRoleMenuService.remove(new QueryWrapper&lt;SysRoleMenu&gt;().in(&quot;role_id&quot;, ids));</span><br><span class="line">      sysUserRoleService.remove(new QueryWrapper&lt;SysUserRole&gt;().in(&quot;role_id&quot;, ids));</span><br><span class="line">      return Result.succ(&quot;&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Transactional</span><br><span class="line">   @PostMapping(&quot;/perm/&#123;roleId&#125;&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:role:perm&#x27;)&quot;)</span><br><span class="line">   public Result perm(@PathVariable Long roleId, @RequestBody Long[] menuIds) &#123;</span><br><span class="line">      List&lt;SysRoleMenu&gt; sysRoleMenus = new ArrayList&lt;&gt;();</span><br><span class="line">      Arrays.stream(menuIds).forEach(menuId -&gt; &#123;</span><br><span class="line">         SysRoleMenu roleMenu = new SysRoleMenu();</span><br><span class="line">         roleMenu.setMenuId(menuId);</span><br><span class="line">         roleMenu.setRoleId(roleId);</span><br><span class="line">         sysRoleMenus.add(roleMenu);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      sysRoleMenuService.remove(new QueryWrapper&lt;SysRoleMenu&gt;().eq(&quot;role_id&quot;, roleId));</span><br><span class="line"></span><br><span class="line">      sysRoleMenuService.saveBatch(sysRoleMenus);</span><br><span class="line"></span><br><span class="line">      // 清除所有用户的权限缓存信息</span><br><span class="line">      sysUserService.clearUserAuthorityInfoByRoleId(roleId);</span><br><span class="line">      return Result.succ(menuIds);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面方法中：</p><ul><li>info方法</li></ul><p>获取角色信息的方法，因为我们不仅仅在编辑角色时候会用到这个方法，在回显角色关联菜单的时候也需要被调用，因此我们需要把角色关联的所有的菜单的id也一并查询出来，也就是分配权限的操作。对应到前端就是这样的，点击分配权限，会弹出出所有的菜单列表，然后根据角色已经关联的菜单的id回显勾选上已经关联过的。效果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/6dccd31a977741cca5f07ce5763498e6.png" alt="图片"></p><p>然后点击保存分配权限的时候，我们需要把角色的id和所有勾选上的菜单id的数组一起传过来，所以才有了controller中的这样的写法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@PreAuthorize(&quot;hasAuthority(&#x27;sys:role:perm&#x27;)&quot;)</span><br><span class="line">public Result perm(@PathVariable Long roleId, @RequestBody Long[] menuIds) &#123;</span><br><span class="line">    ...代码上面贴出来</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，因为<a href="https://github.com/RequestBody">@RequestBody</a>，我们知道menuIds是否安装body里面的，这个需要注意，对应到的前端写法就是这样：<br><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/6b5a83cb2b5045d6904f58fc99745b78.png" alt="图片"></p><p>ok，角色管理就讲到这里了，其他增删改查自己看下代码，不难哈。</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/70ee8be9d9de49d9b2d8a52bebe0ee12.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/beb238751bd3488c88d43f227467f77e.png" alt="图片"></p><h3 id="11-用户接口开发"><a href="#11-用户接口开发" class="headerlink" title="11. 用户接口开发"></a>11. 用户接口开发</h3><p>用户管理里面有个用户关联角色的分配角色操作，和角色关联菜单的写法差不多的，其他增删改查也复制黏贴改改就好，哈哈。</p><ul><li>com.markerhub.controller.SysUserController</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 公众号：MarkerHub</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/sys/user&quot;)</span><br><span class="line">public class SysUserController extends BaseController &#123;</span><br><span class="line">   @Autowired</span><br><span class="line">   PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">   @GetMapping(&quot;/info/&#123;id&#125;&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:list&#x27;)&quot;)</span><br><span class="line">   public Result info(@PathVariable Long id) &#123;</span><br><span class="line">      SysUser user = sysUserService.getById(id);</span><br><span class="line">      Assert.notNull(user, &quot;找不到该管理员！&quot;);</span><br><span class="line">      List&lt;SysRole&gt; roles = sysRoleService.listRolesByUserId(user.getId());</span><br><span class="line">      user.setRoles(roles);</span><br><span class="line">      return Result.succ(user);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * 用户自己修改密码</span><br><span class="line">    *</span><br><span class="line">    */</span><br><span class="line">   @PostMapping(&quot;/updataPass&quot;)</span><br><span class="line">   public Result updataPass(@Validated @RequestBody PassDto passDto, Principal principal) &#123;</span><br><span class="line">      SysUser sysUser = sysUserService.getByUsername(principal.getName());</span><br><span class="line">      boolean matches = passwordEncoder.matches(passDto.getCurrentPass(), sysUser.getPassword());</span><br><span class="line">      if (!matches) &#123;</span><br><span class="line">         return Result.fail(&quot;旧密码不正确！&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      sysUser.setPassword(passwordEncoder.encode(passDto.getPassword()));</span><br><span class="line">      sysUser.setUpdated(LocalDateTime.now());</span><br><span class="line">      sysUserService.updateById(sysUser);</span><br><span class="line">      return Result.succ(null);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * 超级管理员重置密码</span><br><span class="line">    */</span><br><span class="line">   @PostMapping(&quot;/repass&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:repass&#x27;)&quot;)</span><br><span class="line">   public Result repass(@RequestBody Long userId) &#123;</span><br><span class="line">      SysUser sysUser = sysUserService.getById(userId);</span><br><span class="line">      sysUser.setPassword(passwordEncoder.encode(Const.DEFAULT_PASSWORD));</span><br><span class="line">      sysUser.setUpdated(LocalDateTime.now());</span><br><span class="line">      sysUserService.updateById(sysUser);</span><br><span class="line">      return Result.succ(null);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @GetMapping(&quot;/list&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:list&#x27;)&quot;)</span><br><span class="line">   public Result page(String username) &#123;</span><br><span class="line">      Page&lt;SysUser&gt; users = sysUserService.page(getPage(),</span><br><span class="line">            new QueryWrapper&lt;SysUser&gt;()</span><br><span class="line">                  .like(StrUtil.isNotBlank(username), &quot;username&quot;, username)</span><br><span class="line">      );</span><br><span class="line">      users.getRecords().forEach(u -&gt; &#123;</span><br><span class="line">         u.setRoles(sysRoleService.listRolesByUserId(u.getId()));</span><br><span class="line">      &#125;);</span><br><span class="line">      return Result.succ(users);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @PostMapping(&quot;/save&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:save&#x27;)&quot;)</span><br><span class="line">   public Result save(@Validated @RequestBody SysUser sysUser) &#123;</span><br><span class="line">      sysUser.setCreated(LocalDateTime.now());</span><br><span class="line">      sysUser.setStatu(Const.STATUS_ON);</span><br><span class="line">      // 初始默认密码</span><br><span class="line">      sysUser.setPassword(Const.DEFAULT_PASSWORD);</span><br><span class="line">      if (StrUtil.isBlank(sysUser.getPassword())) &#123;</span><br><span class="line">         return Result.fail(&quot;密码不能为空&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      String password = passwordEncoder.encode(sysUser.getPassword());</span><br><span class="line">      sysUser.setPassword(password);</span><br><span class="line">      // 默认头像</span><br><span class="line">      sysUser.setAvatar(Const.DEFAULT_AVATAR);</span><br><span class="line">      sysUserService.save(sysUser);</span><br><span class="line">      return Result.succ(sysUser);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @PostMapping(&quot;/update&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:update&#x27;)&quot;)</span><br><span class="line">   public Result update(@Validated @RequestBody SysUser sysUser) &#123;</span><br><span class="line">      sysUser.setUpdated(LocalDateTime.now());</span><br><span class="line">      if (StrUtil.isNotBlank(sysUser.getPassword())) &#123;</span><br><span class="line">         String password = passwordEncoder.encode(sysUser.getPassword());</span><br><span class="line">         sysUser.setPassword(password);</span><br><span class="line">      &#125;</span><br><span class="line">      sysUserService.updateById(sysUser);</span><br><span class="line">      return Result.succ(sysUser);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @PostMapping(&quot;/delete&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:delete&#x27;)&quot;)</span><br><span class="line">   public Result delete(@RequestBody Long[] ids)&#123;</span><br><span class="line">      sysUserService.removeByIds(Arrays.asList(ids));</span><br><span class="line">      sysUserRoleService.remove(new QueryWrapper&lt;SysUserRole&gt;().in(&quot;user_id&quot;, ids));</span><br><span class="line">      return Result.succ(&quot;&quot;);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   /**</span><br><span class="line">    * 分配角色</span><br><span class="line">    * @return</span><br><span class="line">    */</span><br><span class="line">   @Transactional</span><br><span class="line">   @PostMapping(&quot;/role/&#123;userId&#125;&quot;)</span><br><span class="line">   @PreAuthorize(&quot;hasAuthority(&#x27;sys:user:role&#x27;)&quot;)</span><br><span class="line">   public Result perm(@PathVariable Long userId, @RequestBody Long[] roleIds) &#123;</span><br><span class="line">      System.out.println(roleIds);</span><br><span class="line">      List&lt;SysUserRole&gt; userRoles = new ArrayList&lt;&gt;();</span><br><span class="line">      Arrays.stream(roleIds).forEach(roleId -&gt; &#123;</span><br><span class="line">         SysUserRole userRole = new SysUserRole();</span><br><span class="line">         userRole.setRoleId(roleId);</span><br><span class="line">         userRole.setUserId(userId);</span><br><span class="line">         userRoles.add(userRole);</span><br><span class="line">      &#125;);</span><br><span class="line">      sysUserRoleService.remove(new QueryWrapper&lt;SysUserRole&gt;().eq(&quot;user_id&quot;, userId));</span><br><span class="line">      sysUserRoleService.saveBatch(userRoles);</span><br><span class="line">      // 清除权限信息</span><br><span class="line">      SysUser sysUser = sysUserService.getById(userId);</span><br><span class="line">      sysUserService.clearUserAuthorityInfo(sysUser.getUsername());</span><br><span class="line">      return Result.succ(roleIds);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面用到一个sysRoleService.listRolesByUserId，通过用户id获取所有关联的角色，用到了中间表，可以写sql，这里我这样写的：</p><ul><li>com.markerhub.service.impl.SysRoleServiceImpl#listRolesByUserId</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">public List&lt;SysRole&gt; listRolesByUserId(Long userId) &#123;</span><br><span class="line">   return this.list(</span><br><span class="line">         new QueryWrapper&lt;SysRole&gt;()</span><br><span class="line">               .inSql(&quot;id&quot;, &quot;select role_id from sys_user_role where user_id = &quot; + userId));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>userId一定要是自己数据库查出来的，千万别让前端传过来啥就直接调用这个方法，不然会可能会被攻击，嘿嘿嘿~最委托就是写完整的sql，而不是这样半个sql的写法。<br>最后效果如下：</p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/bdb2ed5063dc4b778518a749a03a5275.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/362ccbcdb7984e66bc6f36725b02157b.png" alt="图片"></p><p><img src="https://image-1300566513.cos.ap-guangzhou.myqcloud.com/upload/images/20210423/154225e173a349699da0d576ba77e3be.png" alt="图片"></p><h2 id="12-项目部署"><a href="#12-项目部署" class="headerlink" title="12. 项目部署"></a>12. 项目部署</h2><p>部署项目其实和vueblog的部署是一样的，自己调整一下吧少年，我有写了视频和文档的：</p><h2 id="13-项目总结"><a href="#13-项目总结" class="headerlink" title="13. 项目总结"></a>13. 项目总结</h2><p>好了，我们终于又写完了一个项目，希望能让你们学到点东西，这次写的文档有点乱，多多担待，太长了，写着写着就不知道写哪了，哈哈。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-后端笔记&quot;&gt;&lt;a href=&quot;#开发SpringBoot-Jwt-Vue的前后端分离后台管理系统VueAdmin-后端笔记&quot; class=&quot;headerlink&quot; title=&quot;开发</summary>
      
    
    
    
    
    <category term="VueAdmin后端" scheme="http://example.com/tags/VueAdmin%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Java新人入职——配置环境及安装开发工具</title>
    <link href="http://example.com/2022/10/07/%E6%96%B0%E4%BA%BA%E5%85%A5%E8%81%8C%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/10/07/%E6%96%B0%E4%BA%BA%E5%85%A5%E8%81%8C%E9%85%8D%E7%BD%AE/</id>
    <published>2022-10-07T04:00:35.000Z</published>
    <updated>2022-10-07T04:01:05.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java新人入职——配置环境及安装开发工具"><a href="#Java新人入职——配置环境及安装开发工具" class="headerlink" title="Java新人入职——配置环境及安装开发工具"></a>Java新人入职——配置环境及安装开发工具</h1><p>很多新人对于进入新公司，相关工具的安装和<a href="https://so.csdn.net/so/search?q=%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F&spm=1001.2101.3001.7020">环境变量</a>的设定很苦恼。又苦于没有完整的配置开发环境的资料，我这里写一篇操作步骤的案例， 至少让你能把开发工具安装起来，并实用起来，就不会那么无助了。毕竟连开发环境都弄不好的人，leader对你肯定也不抱希望。废话少说，具体操作如下：</p><h3 id="一、首先肯定是安装jdk"><a href="#一、首先肯定是安装jdk" class="headerlink" title="一、首先肯定是安装jdk"></a>一、首先肯定是安装jdk</h3><p>1、下载jdk版本</p><p>这里我的电脑是64位的，用的是Java8  ， jdk版本是jdk1.8.0_92。  下载地址：链接：<a href="http://pan.baidu.com/s/1pLht3eF">http://pan.baidu.com/s/1pLht3eF</a> 密码：vgwu 或者我的：</p><p><a href="https://pan.baidu.com/s/1GBK5E7y7pQNvwNW2Rc-Veg?pwd=ri85">https://pan.baidu.com/s/1GBK5E7y7pQNvwNW2Rc-Veg?pwd=ri85</a></p><p>ri85</p><p>这里我也提供一个Java7 的版本： 链接：<a href="http://pan.baidu.com/s/1hsOlk80">http://pan.baidu.com/s/1hsOlk80</a> 密码：i6k4</p><p>2、安装，并设定jdk、jre安装路径</p><p>安装路径你可以用默认的，但是一定要记住安装的地址，我一般指定额外的安装路径，比如E盘。如下图：</p><p><img src="https://img-blog.csdn.net/20170817113753930?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><h3 id="二、配置环境变量"><a href="#二、配置环境变量" class="headerlink" title="二、配置环境变量"></a>二、配置环境变量</h3><p>安装好jdk和jre后，就需要配置环境变量</p><p><strong>1、安装JDK开发环境</strong></p><p>下载网站：<a href="http://www.oracle.com/index.html">http://www.oracle.com/</a></p><p><strong>2、配置环境变量：</strong></p><p>对于Java程序开发而言，主要会使用JDK的两个命令：javac.exe、java.exe。路径：C:\Java\jdk 1.7.0 _09\bin。但是这些命令由于不属于windows自己的命令，所以要想使用，就需要进行路径配置。 </p><p>单击“计算机-属性-高级系统设置”，单击“环境变量”。在“系统变量”栏下单击“新建”，创建新的系统环境变量。</p><p><a href="https://images0.cnblogs.com/blog/641601/201406/141837179201878.png"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMwLmNuYmxvZ3MuY29tL2Jsb2cvNjQxNjAxLzIwMTQwNi8xNDE4MzcxODM3NDc4MDYucG5n?x-oss-process=image/format,png" alt="50aa00df-6bb9-471c-81a7-363845b6f2b3"></a></p><p><strong>(1)新建-&gt;变量名”JAVA_HOME”，变量值”C:\Java\jdk1.8.0_05”（即JDK的安装路径）<br>(2)编辑-&gt;变量名”Path”，在原变量值的最后面加上“;%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin”<br>(3)新建-&gt;变量名“CLASSPATH”,变量值“.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar”</strong></p><p>如：<strong>JAVA_HOME环境变量的操作如下：</strong></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMwLmNuYmxvZ3MuY29tL2Jsb2cvNjQxNjAxLzIwMTQwNi8xNDE4MzcyMTMxMTIwNzQucG5n?x-oss-process=image/format,png" alt="img"></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMwLmNuYmxvZ3MuY29tL2Jsb2cvNjQxNjAxLzIwMTQwNi8xNDE4MzcyMjI4MDQxNDUuanBn?x-oss-process=image/format,png" alt="01747df9-c309-438d-a6f7-ea68f43c416c[1]"></p><p><strong>3、确认环境配置是否真确：</strong></p><p>在控制台分别输入java，javac，java -version 命令，出现如下所示的JDK的编译器信息，包括修改命令的语法和参数选项等信息。</p><p>java命令：</p><p>javac命令：</p><p>java -version命令：</p><p><strong>4、在控制台下验证第一个java程序：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class Test &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(&quot;Hello Java&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用记事本编写好，点击“保存”，并存入C盘根目录后，输入javac Test.java和java Test命令，即可运行程序（打印出结果“Hello Java”）。注：这两个命令是在D:\java\jdk1.8.0_20\bin目录下。</p><p><strong>程序解析：</strong></p><p>首先编写java源代码程序，扩展名.java；</p><p>在命令行模式中，输入命令：javac 源文件名.java，对源代码进行编译，生成class字节码文件；</p><p>编译完成后，如果没有报错信息，输入命令：java HelloWorld，对class字节码文件进行解释运行,执行时不需要添加.class扩展名。见下图：<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMwLmNuYmxvZ3MuY29tL2Jsb2cvNjQxNjAxLzIwMTQxMi8wNDEzMzk1MjQzNjg2NzEuanBn?x-oss-process=image/format,png" alt="img"></p><p>注：若在CMD中输入javac test.java命令后，显示’javac’不是内部或外部命令，原因是因为没有提前安装好JDK开发环境或环境变量配置有误。 </p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWFnZXMwLmNuYmxvZ3MuY29tL2kvNjQxNjAxLzIwMTQwNi8xNzA5MDY0NzE0NTcxODMucG5n?x-oss-process=image/format,png" alt="img"></p><h3 id="三、安装开发工具。"><a href="#三、安装开发工具。" class="headerlink" title="三、安装开发工具。"></a>三、安装开发工具。</h3><p>1、这里我用的是eclipse，具体开发工具用啥，大家看着处理：链接：<a href="https://pan.baidu.com/s/1MeNwUsYCtOerLswuMngBEg">https://pan.baidu.com/s/1MeNwUsYCtOerLswuMngBEg</a> 密码：rw2u</p><p>下载后解压即可用。</p><p>2、配置eclipse使用的java版本</p><p>打开eclipse，选择Windows——Preferences——Java——Installed JREs 。  设定你的jre环境，具体如下图：</p><p><img src="https://img-blog.csdn.net/20170817115316547?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>3、配置svn插件</p><p>下载地址：链接：<a href="http://pan.baidu.com/s/1mifxHMg">http://pan.baidu.com/s/1mifxHMg</a> 密码：aj84 。  下载完后解压，把subSvn&#x2F;eclipse 目录下features、plugins两个目录下的jar文件，分别拷贝到对应的 eclipse 安装目录的对应的features、plugins文件夹目录下。重启eclipse，这样svn插件就弄好了</p><p>4、配置tomcat</p><p>a、下载tomcat，我这里用的是tomcat8 。 下载地址：链接：<a href="http://pan.baidu.com/s/1eSPBiee">http://pan.baidu.com/s/1eSPBiee</a> 密码：2883 ， 下载完成后解压到你的指定目录。</p><p>b、打开eclipse，选择Windows——Preferences——Server——Runtime Environments。  然后你可以添加一个服务，选择Apache服务，选择你的tomcat版本，具体操作如下图：</p><p><img src="https://img-blog.csdn.net/20170817115804150?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>选择好后，点击Next</p><p><img src="https://img-blog.csdn.net/20170817162444385?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>c、配置完成后，到eclipse的Server窗口，右键New一个Server。具体如下图：</p><p><img src="https://img-blog.csdn.net/20170817164150530?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>到这里，tomcat就配置完成了，但是很多人的项目发布目录还是eclipse自带的目录，建议更改到tomcat的webapps目录下。具体操作如下：</p><p><img src="https://img-blog.csdn.net/20170817164611043?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p><img src="https://img-blog.csdn.net/20170817164624363?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>这里就配置完成了，保存下即可</p><p>5、配置maven</p><p>a、下载maven，并解压  ，下载地址：链接：<a href="http://pan.baidu.com/s/1gf9ufb9">http://pan.baidu.com/s/1gf9ufb9</a> 密码：kdh1</p><p><a href="https://pan.baidu.com/s/1voiaKRSAyRDihcxJGJQKcg?pwd=8vsx">https://pan.baidu.com/s/1voiaKRSAyRDihcxJGJQKcg?pwd=8vsx</a>密码：8vsx</p><p>b、打开eclipse，选择Windows——Preferences——Maven——Installations——Add ，添加一个maven，选择maven的解压目录。 具体如下图：</p><p><img src="https://img-blog.csdn.net/20170817163554517?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>c、指定settings目录。在当前的maven配置窗口，选择User Settings，并在User Settings路径那里指定你配置的maven的 settings文件。具体如下图：</p><p><img src="https://img-blog.csdn.net/20170817163802081?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbW9uZXlzaGk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p>6、其他配置</p><p>（1） 开发工具的编码配置</p><p>（2） 注释模板的配置</p><p>（3） 快捷键的设置</p><p>（4）背景色、字体等设置</p><p>（5）快速定位文件位置插件配置、快速打开cmd配置 等等，这些就需各位看官自己去百度啦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java新人入职——配置环境及安装开发工具&quot;&gt;&lt;a href=&quot;#Java新人入职——配置环境及安装开发工具&quot; class=&quot;headerlink&quot; title=&quot;Java新人入职——配置环境及安装开发工具&quot;&gt;&lt;/a&gt;Java新人入职——配置环境及安装开发工具&lt;/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>人脸识别笔记</title>
    <link href="http://example.com/2022/09/13/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/09/13/%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%AC%94%E8%AE%B0/</id>
    <published>2022-09-13T01:59:16.000Z</published>
    <updated>2022-09-13T02:07:26.156Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.yby6.com/archives/face">从零玩转人脸识别验证 (yby6.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.yby6.com/archives/face&quot;&gt;从零玩转人脸识别验证 (yby6.com)&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>MongoDB安装教程</title>
    <link href="http://example.com/2022/09/04/MongoDB%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2022/09/04/MongoDB%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2022-09-04T08:36:38.000Z</published>
    <updated>2022-09-04T08:37:12.591Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、MongoDB简介"><a href="#一、MongoDB简介" class="headerlink" title="一、MongoDB简介"></a>一、MongoDB简介</h1><p>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB将数据存储为一个文档，数据结构由键值(key&#x3D;&gt;value)对组成，MongoDB文档类似于JSON对象，字段值可以包含其他文档，数组及文档数组。</p><p>MongoDB服务端可运行在Linux、Windows或mac os x平台，支持32位和64位应用，默认端口为27017。</p><p>MongoDB支持各种编程语言: Python，Java，C++，PHP，C#等多种语言。</p><h1 id="二、下载MongoDB"><a href="#二、下载MongoDB" class="headerlink" title="二、下载MongoDB"></a>二、下载MongoDB</h1><p>MongoDB提供了可用于32位系统和64位系统的预编译二进制包（新版本没有了32位系统的安装文件），你可以进入MongoDB官网下载安装，MongoDB的预编译二进制包的下载地址为：<a href="https://www.mongodb.com/download-center/community%EF%BC%8C%E6%89%93%E5%BC%80%E4%B9%8B%E5%90%8E%E4%BC%9A%E7%9C%8B%E5%88%B0%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%8C%E7%9B%B4%E6%8E%A5%E7%82%B9%E5%87%BBDownload%E4%B8%8B%E8%BD%BD%E5%8D%B3%E5%8F%AF%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%9C%A8Version%E4%B8%AD%E9%80%89%E6%8B%A9%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84%E7%89%88%E6%9C%AC%EF%BC%9A">https://www.mongodb.com/download-center/community，打开之后会看到如下图，直接点击Download下载即可，也可以在Version中选择你想要的版本：</a></p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327105035963-209099635.png" alt="img"></p><h1 id="三、安装MongoDB"><a href="#三、安装MongoDB" class="headerlink" title="三、安装MongoDB"></a>三、安装MongoDB</h1><p>双击打开文件进行安装，在安装过程中，可以通过点击 “Custom(自定义)” 按钮来设置你的安装目录。</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327110956254-767522594.png" alt="img"></p><p>这里我选择安装在E:\MongoDB这个目录下（安装目录会影响我们后面的配置）。</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327111030712-1940620224.png" alt="img"></p><p>这里选择直接next：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327111202101-1153181920.png" alt="img"></p><p>这里安装 <strong>“Install MongoDB Compass”</strong> 不勾选，否则可能要很长时间都一直在执行安装，MongoDB Compass是一个图形界面管理工具，这里不安装也是没有问题的，可以自己去下载一个图形界面管理工具，比如<a href="https://robomongo.org/">Robo3T</a>。</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327111309421-1373386005.png" alt="img"></p><p>之后稍微等待一会就安装好了。</p><h1 id="四、配置MongoDB"><a href="#四、配置MongoDB" class="headerlink" title="四、配置MongoDB"></a>四、配置MongoDB</h1><p>MongoDB的安装过程是很简单的，但是配置就比较麻烦了，可能会遇到各种各样的问题，需要你有足够的耐心和仔细。</p><p>首先要在MongoDB的data文件夹里新建一个db文件夹和一个log文件夹：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327111744600-236215096.png" alt="img"></p><p>然后在log文件夹下新建一个mongo.log：</p><p> <img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327111924389-669177821.png" alt="img"></p><p>然后将E:\MongoDB\bin添加到环境变量path中，此时打开cmd窗口运行一下mongo命令，出现如下情况：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327112251064-657563650.png" alt="img"></p><p>这是为什么呢？这是因为我们还没有启动MongoDB服务，自然也就连接不上服务了。那要怎么启动呢？在cmd窗口中运行如下命令：</p><blockquote><p> mongod –dbpath E:\MongoDB\data\db</p></blockquote><p>需要注意的是：如果你没有提前创建db文件夹，是无法启动成功的。运行成功之后，我们打开浏览器，输入127.0.0.1:27017，看到如下图，就说明MongoDB服务已经成功启动了。</p><p> <img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327113150719-1117519860.png" alt="img"></p><p>但是如果每次都要这么启动服务的话也太麻烦了吧，这里你可以选择设置成开机自启动，也可以选择用命令net start mongodb来手动启动，这里我选择使用后者，具体方法如下。</p><p>还是打开cmd窗口，不过这次是以管理员身份运行，然后输入如下命令：</p><blockquote><p>mongod –dbpath “E:\MongoDB\data\db” –logpath “E:\MongoDB\data\log\mongo.log” -install -serviceName “MongoDB”</p></blockquote><p>如果没有报错的话就说明成功添加到服务里了，可以使用win+R然后输入services.msc命令进行查看：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327114446897-920534286.png" alt="img"></p><p>默认是自动运行的，这里我选择把它改成手动的。然后在cmd窗口中运行net start mongodb：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327114857667-1105846938.png" alt="img"></p><p>怎么解决呢？两个步骤：</p><p>1）运行sc delete mongodb删除服务；</p><p>2）再运行一次配置服务的命令：</p><blockquote><p>mongod –dbpath “E:\MongoDB\data\db” –logpath “E:\MongoDB\data\log\mongo.log” -install -serviceName “MongoDB”</p></blockquote><p>然后再运行net start mongodb，服务启动成功：</p><p><img src="https://img2018.cnblogs.com/blog/1450803/201903/1450803-20190327115145389-952518290.png" alt="img"></p><h1 id="五、可能遇到的问题"><a href="#五、可能遇到的问题" class="headerlink" title="五、可能遇到的问题"></a>五、可能遇到的问题</h1><p><strong>1.mongod不是内部或外部命令</strong></p><p>出现这种问题说明你没有把bin目录添加到环境变量之中，重新添加一下即可解决。</p><p><strong>2.服务名无效</strong></p><p>首先是看你输入的服务名称是否有误，然后再查看本地服务中有没有MongoDB服务，如果没有服务，则运行命令添加服务即可。</p><p><strong>3.发生服务特定错误：100</strong></p><p>删除db文件夹下的mongod.lock和storage.bson两个文件，若删除完之后仍然出现这种问题，用sc delete mongodb删除服务，再配置一下服务就能解决了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、MongoDB简介&quot;&gt;&lt;a href=&quot;#一、MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;一、MongoDB简介&quot;&gt;&lt;/a&gt;一、MongoDB简介&lt;/h1&gt;&lt;p&gt;MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringCloud微服务项目</title>
    <link href="http://example.com/2022/09/01/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2022/09/01/SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-09-01T02:01:10.000Z</published>
    <updated>2022-09-06T05:51:27.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前后端分离-微服务项目"><a href="#前后端分离-微服务项目" class="headerlink" title="前后端分离-微服务项目"></a>前后端分离-微服务项目</h1><h2 id="01-项目搭建与创作者接口-数据库创建"><a href="#01-项目搭建与创作者接口-数据库创建" class="headerlink" title="01-项目搭建与创作者接口-数据库创建"></a>01-项目搭建与创作者接口-数据库创建</h2><h3 id="创建数据库与表"><a href="#创建数据库与表" class="headerlink" title="创建数据库与表"></a>创建数据库与表</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095704833.png" alt="image-20220822095704833"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `video_author` (</span><br><span class="line">`id` <span class="type">CHAR</span> ( <span class="number">19</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创作者ID&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span> ( <span class="number">20</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创作者姓名&#x27;</span>,</span><br><span class="line">`intro` <span class="type">VARCHAR</span> ( <span class="number">500</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;创作者简介&#x27;</span>,</span><br><span class="line">`career` <span class="type">VARCHAR</span> ( <span class="number">500</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者经历介绍&#x27;</span>,</span><br><span class="line">`level` <span class="type">INT</span> ( <span class="number">10</span> ) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;1:普通创作者 2:特约创作者&#x27;</span>,</span><br><span class="line">`avatar` <span class="type">VARCHAR</span> ( <span class="number">255</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创作者头像&#x27;</span>,</span><br><span class="line">`sort` <span class="type">INT</span> ( <span class="number">10</span> ) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;排序&#x27;</span>,</span><br><span class="line">`is_deleted` TINYINT ( <span class="number">1</span> ) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">`gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">`gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY ( `id` ),</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY `uk_name` ( `name` ) </span><br><span class="line">) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8mb4 COMMENT <span class="operator">=</span> <span class="string">&#x27;创作者&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095716706.png" alt="image-20220822095716706"></p><h3 id="数据库设计规范"><a href="#数据库设计规范" class="headerlink" title="数据库设计规范"></a>数据库设计规范</h3><blockquote><ul><li>数据库名称尽量与应用名称保存一致</li><li>表名：业务名称_表的作用，video_author</li><li>表名, 字段名必须使用小写, 禁止以数字开头, 不要使用关键字</li><li>表名起的时候, 尽量不要使用复数名称</li><li>表当中必备三个字段：id：主键，gmt_create：记录创建的时间，gmt_modified：记录修改时间</li><li>如果一个表当中记录比较多的时候，超过了500万条，或者容量超过了2G考虑做分库分表, 假设表的内容3年都达不到500万条数据, 不要做分库分表</li><li>数据库当中字段如果是表示，<code>是</code> 与 <code>否</code>，通常字段起名，<code>is_xxx</code> 数据类型 使用 <code>tinyint(1 表示真, 0表示假)</code></li><li>表示金钱的字段, 必须使用 decimal, 不能使用 float 或者 double, 有时候会都把小数类型统一使用 decimal</li><li>如果一个字段存储的内容几乎长度都相等，建议使用 char 类型，定长字符串类型</li><li>varhcar 可变字符串, 不预先分配存储空间, 如果长充超过 5000, 不建议使用 varchar, 建议使用 text，建议使用独立的一张表来进行存储, 全部都放到一起, 会影响查询速度</li><li>主索引, 起名: <code>uk_字段</code>, 普通索引, <code>idx_字段名称</code></li><li>如果两个表有外键 ,不要在数据库当中添加外键约束，在应用层进行处理外键，不利于 <code>分布式</code>, 不利于做 <code>并发</code> <code>集群</code></li></ul></blockquote><h2 id="02-项目搭建与创作者接口-父工程搭建"><a href="#02-项目搭建与创作者接口-父工程搭建" class="headerlink" title="02-项目搭建与创作者接口-父工程搭建"></a>02-项目搭建与创作者接口-父工程搭建</h2><h3 id="创建父工程"><a href="#创建父工程" class="headerlink" title="创建父工程"></a>创建父工程</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095748482.png" alt="image-20220822095748482"></p><p>删除 src</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095809554.png" alt="image-20220822095809554"></p><p>配置 maven 地址</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095826023.png" alt="image-20220822095826023"></p><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>配置父工程的打包方式为 <code>pom</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095849100.png" alt="image-20220822095849100"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="定义版本信息"><a href="#定义版本信息" class="headerlink" title="定义版本信息"></a>定义版本信息</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327111056673-219027945.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327111056673-219027945.png" alt="img"></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">velocity.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">velocity.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun.oss.version</span>&gt;</span>2.8.3<span class="tag">&lt;/<span class="name">aliyun.oss.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-core.version</span>&gt;</span>4.3.3<span class="tag">&lt;/<span class="name">aliyun-java-sdk-core.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-oss.version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">aliyun-sdk-oss.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span>2.15.2<span class="tag">&lt;/<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-vod-upload.version</span>&gt;</span>1.4.11<span class="tag">&lt;/<span class="name">aliyun-java-vod-upload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span>1.4.11<span class="tag">&lt;/<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">json.version</span>&gt;</span>20170516<span class="tag">&lt;/<span class="name">json.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-dbutils.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">commons-dbutils.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canal.client.version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">canal.client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>zx<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cloud-alibaba.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">cloud-alibaba.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="锁定依赖信息"><a href="#锁定依赖信息" class="headerlink" title="锁定依赖信息"></a>锁定依赖信息</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095912525.png" alt="image-20220822095912525"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring Cloud--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;velocity.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xlsx--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aliyun--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-vod.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-vod-upload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;json.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-dbutils.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;canal.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="03-项目搭建与创作者接口-创建-service-模块以及-service-video-子模块"><a href="#03-项目搭建与创作者接口-创建-service-模块以及-service-video-子模块" class="headerlink" title="03-项目搭建与创作者接口-创建 service 模块以及 service_video 子模块"></a>03-项目搭建与创作者接口-创建 service 模块以及 service_video 子模块</h2><p> 在父工程 video-parent 下面创建模块 service</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100116379.png" alt="image-20220822100116379"></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327112258267-1180895361.png"></a></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100136415.png" alt="image-20220822100136415"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100151967.png" alt="image-20220822100151967"></p><p>打包方式改为 <code>pom</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100012312.png" alt="image-20220822100012312"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 service 模块中添加项目需要的依赖，修改 service 模块的 pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--lombok用来简化实体类：需要安装lombok插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在父工程 service 模块下面创建子模块 service_video 创建方式同上只不过是创建之后的位置不同而已这个是 service 的子模块，service 模块的 <code>src</code> 也不需要删除</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100236418.png" alt="image-20220822100236418"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100251656.png" alt="image-20220822100251656"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100310180.png" alt="image-20220822100310180"></p><h2 id="04-项目搭建与创作者接口-service-video工程"><a href="#04-项目搭建与创作者接口-service-video工程" class="headerlink" title="04-项目搭建与创作者接口-service-video工程"></a>04-项目搭建与创作者接口-service-video工程</h2><p>创建配置文件 <code>application.yml</code>, 添加配置信息，配置内容如下，需要改为你实际的信息，如下是我的</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-video</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">HikariPool</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># SQL打印</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="使用代码生成器生成代码"><a href="#使用代码生成器生成代码" class="headerlink" title="使用代码生成器生成代码"></a>使用代码生成器生成代码</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100404184.png" alt="image-20220822100404184"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGeneratorTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_video\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成 service 层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_video&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;video_author&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略,驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;video_&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上的配置需要你自行修改为你自己的如上还是那句话是我的实际信息，配置完毕了之后运行启动即可完成生成, 生成完毕之后删除生成器的 <code>java</code> 文件即可</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100439263.png" alt="image-20220822100439263"></p><h3 id="获取作者列表功能"><a href="#获取作者列表功能" class="headerlink" title="获取作者列表功能"></a>获取作者列表功能</h3><p>创建入口文件 <code>service_video</code> 模块启动类，需要注意的是存放的位置，只要按照我放的位置来放即可，原因很简单，扫描的时候会扫描当前层级的文件和子文件，如果你放在某一个包中那么其它包中的文件就会扫描不到了，所以我放到了所有文件的外面这样就可以全部扫描到了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VideoApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(VideoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100505743.png" alt="image-20220822100505743"></p><p>修改 application.yml 配置文件，小小的改动一下，添加一些额外的配置信息如下，你也可以复制我下面的直接替换之前的全部内容即可，改为你自己的实际信息即可</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100519934.png" alt="image-20220822100519934"></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-video</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">GuliHikariPool</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># SQL打印</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><h3 id="配置-mybatis-plus"><a href="#配置-mybatis-plus" class="headerlink" title="配置 mybatis-plus"></a>配置 mybatis-plus</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100543490.png" alt="image-20220822100543490"></p><h3 id="测试-Controller"><a href="#测试-Controller" class="headerlink" title="测试 Controller"></a>测试 Controller</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100555214.png" alt="image-20220822100555214"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 创作者 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-03-27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/author&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthorController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getAuthorList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAuthorList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;getAuthorList&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动访问接口，效果如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100618964.png" alt="image-20220822100618964"></p><p>修改 Controller 编写创建者接口</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100642159.png" alt="image-20220822100642159"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 创作者 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-03-27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/author&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthorController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用代码生成器生成的 service 当中已经有很多的基础服务，直接调用即可</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AuthorService authorService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AuthorController</span><span class="params">(AuthorService authorService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.authorService = authorService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getAuthorList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Author&gt; <span class="title function_">getAuthorList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authorService.list(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在浏览器中测试接口如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100659062.png" alt="image-20220822100659062"></p><h3 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h3><p>配置逻辑删除 Bean</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100713622.png" alt="image-20220822100713622"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 逻辑删除配置Bean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ISqlInjector <span class="title function_">iSqlInjector</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LogicSqlInjector</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在实体类当中, 添加逻辑删除的注解</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100824114.png" alt="image-20220822100824114"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br></pre></td></tr></table></figure><p>在控制当中，编写删除的方法</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100836364.png" alt="image-20220822100836364"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 根据Id删除创作者</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;/deleteAuthor/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteAuthor</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> authorService.removeById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试，如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100902013.png" alt="image-20220822100902013"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822100913772.png" alt="image-20220822100913772"></p><h2 id="05-项目搭建与创作者接口-集成SWagger2"><a href="#05-项目搭建与创作者接口-集成SWagger2" class="headerlink" title="05-项目搭建与创作者接口-集成SWagger2"></a>05-项目搭建与创作者接口-集成SWagger2</h2><p>在工程当中创建一个公共模块 common 模块，并且修改打包方式为 <code>pom</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101101511.png" alt="image-20220822101101511"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101115019.png" alt="image-20220822101115019"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加 swagger 依赖</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101127906.png" alt="image-20220822101127906"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--lombok插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>common 模块下的 <code>src</code> 删除不需要，在 common 下面创建子模块 <code>common_base</code> 模块</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101143441.png" alt="image-20220822101143441"></p><p>在模块 common_base 中，创建 swagger 的配置类</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101211665.png" alt="image-20220822101211665"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">webApiConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)</span><br><span class="line">                .groupName(<span class="string">&quot;webApi&quot;</span>)</span><br><span class="line">                .apiInfo(webApiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                <span class="comment">// 排除指定的路径,不生成api</span></span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/admin/.*&quot;</span>)))</span><br><span class="line">                .paths(Predicates.not(PathSelectors.regex(<span class="string">&quot;/error.*&quot;</span>)))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">webApiInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;视频中心API文档&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;课程中心微服务接口&quot;</span>)</span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>)</span><br><span class="line">                .contact(<span class="keyword">new</span> <span class="title class_">Contact</span>(<span class="string">&quot;BNTang&quot;</span>, <span class="string">&quot;https://www.cnblogs.com/BNTang&quot;</span>, <span class="string">&quot;303158131@qq.com&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在模块 service 模块中引入 common_base</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101241994.png" alt="image-20220822101241994"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--common_base--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.it6666<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_base<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 service_video 启动类上添加注解</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327155529319-381022317.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327155529319-381022317.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span></span><br></pre></td></tr></table></figure><p>然后在 Controller 当中添加 api 注解</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101305022.png" alt="image-20220822101305022"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 创作者 前端控制器</span></span><br><span class="line"><span class="comment"> * Api 注解代表：分组</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-03-27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/author&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;作者组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthorController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用代码生成器生成的 service 当中已经有很多的基础服务，直接调用即可</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AuthorService authorService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AuthorController</span><span class="params">(AuthorService authorService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.authorService = authorService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 获取创作者列表</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;所有的作者列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getAuthorList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Author&gt; <span class="title function_">getAuthorList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authorService.list(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 根据Id删除创作者</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;逻辑删除作者&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/deleteAuthor/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteAuthor</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;作者Id&quot;, required = true)</span> <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> authorService.removeById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>详细说明请参考：<a href="https://www.cnblogs.com/zhuhui-site/p/10092322.html">https://www.cnblogs.com/zhuhui-site/p/10092322.html</a></p><p>重启工程访问：<a href="http://localhost:8001/swagger-ui.html">http://localhost:8001/swagger-ui.html</a></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101352597.png" alt="image-20220822101352597"></p><h3 id="swagger2-汉化"><a href="#swagger2-汉化" class="headerlink" title="swagger2 汉化"></a>swagger2 汉化</h3><p>汉化 2.7 以下的版本，首先在自己项目当中的 <code>resources</code> 中创建 <code>META-INF\resourece</code> 文件夹如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101405386.png" alt="image-20220822101405386"></p><p>需要注意有一个 <code>/</code> 不是以 <code>.</code> 来进行创建</p><p>把 <code>swagger-ui.html</code> 复制到自己工程的 <code>META-INF\resourece</code> 中, 添加两行 <code>js</code> js内容如下</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101421267.png" alt="image-20220822101421267"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101433215.png" alt="image-20220822101433215"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 加入国际化的js --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;webjars/springfox-swagger-ui/lang/translator.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;webjars/springfox-swagger-ui/lang/zh-cn.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="06-项目搭建与创作者接口-统一返回数据格式"><a href="#06-项目搭建与创作者接口-统一返回数据格式" class="headerlink" title="06-项目搭建与创作者接口-统一返回数据格式"></a>06-项目搭建与创作者接口-统一返回数据格式</h2><p>在 common 模块中创建 <code>common_utils</code> 子模块</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101515064.png" alt="image-20220822101515064"></p><p>在 <code>top.it6666.common_utils.utils</code> 下创建一个接口为 <code>状态码</code> 新建 <code>ResultCode</code> 内容如下</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101526664.png" alt="image-20220822101526664"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ResultCode</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">SUCCESS</span> <span class="operator">=</span> <span class="number">20000</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败的状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">ERROR</span> <span class="operator">=</span> <span class="number">20001</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着在 <code>top.it6666.common_utils.utils</code> 下创建一个统一返回结果的类 <code>ResponseResult.java</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822101546226.png" alt="image-20220822101546226"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseResult</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">ResponseResult</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;是否成功&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;状态码&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回消息&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;返回的数据&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt; data = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 提供工具方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResponseResult <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ResponseResult</span> <span class="variable">responseResult</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResponseResult</span>();</span><br><span class="line">        responseResult.setSuccess(<span class="literal">true</span>);</span><br><span class="line">        responseResult.setCode(ResultCode.SUCCESS);</span><br><span class="line">        responseResult.setMessage(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ResponseResult <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ResponseResult</span> <span class="variable">responseResult</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ResponseResult</span>();</span><br><span class="line">        responseResult.setSuccess(<span class="literal">false</span>);</span><br><span class="line">        responseResult.setCode(ResultCode.ERROR);</span><br><span class="line">        responseResult.setMessage(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> responseResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">success</span><span class="params">(Boolean success)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">message</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">code</span><span class="params">(Integer code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">data</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">data</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重点07-项目搭建与创作者接口-创作者CRUD"><a href="#重点07-项目搭建与创作者接口-创作者CRUD" class="headerlink" title="重点07-项目搭建与创作者接口-创作者CRUD"></a><font color="red">重点07-项目搭建与创作者接口-创作者CRUD</font></h2><h3 id="引入-common-utils"><a href="#引入-common-utils" class="headerlink" title="引入 common_utils"></a>引入 common_utils</h3><p>首先需要引入 common_utils 依赖的模块为 <code>common_base</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327164422283-639657652.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327164422283-639657652.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.it6666<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后紧接着 <code>service</code> 模块也引入了 common_utils 了为啥呢，看下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327164711659-341473242.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210327164711659-341473242.png" alt="img"></a></p><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><h4 id="配置-Mp-分页插件"><a href="#配置-Mp-分页插件" class="headerlink" title="配置 Mp 分页插件"></a>配置 Mp 分页插件</h4><p>至于修改那个模块中的那个文件我就以为图来表示了，以文字太麻烦了如下图，当然了你可以手写也可以直接拷贝我下方给出来的代码</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091504788.png" alt="image-20220822091504788"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 配置分页插件</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> PaginationInterceptor <span class="title function_">paginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在作者控制器中编写分页查询的代码，如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091533458.png" alt="image-20220822091533458"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 分页查询创作者</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;作者分页列表数据&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/pageList/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">pageList</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;page&quot;, value = &quot;当前页&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long page,</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;limit&quot;, value = &quot;每页记录数&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long limit)</span> &#123;</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    Page&lt;Author&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    authorService.page(pageInfo, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前页的数据</span></span><br><span class="line">    List&lt;Author&gt; records = pageInfo.getRecords();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取总记录</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageInfo.getTotal();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;total&quot;</span>, total).data(<span class="string">&quot;rows&quot;</span>, records);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加分页条件筛选"><a href="#添加分页条件筛选" class="headerlink" title="添加分页条件筛选"></a>添加分页条件筛选</h3><ul><li>需求：根据名称 <code>name</code>，头衔 <code>level</code>、时间 <code>gmt_create</code></li><li>把前端传的数据给封装到一个类当中, 放到 <code>VO</code> 包中，新建 <code>VO</code> 包</li><li>vo 当中的实体，是用与前端交互封装数据对象的实体类</li></ul><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091625036.png" alt="image-20220822091625036"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthorQuery</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer level;</span><br><span class="line">    <span class="keyword">private</span> String begin;</span><br><span class="line">    <span class="keyword">private</span> String end;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在分页方法当中添加查询的参数，在添加之前需要修改掉请求方式为 Post，get 请求没有办法传递 JSON，mp 生成的基础服务的分页方法满足不了我们自己的需求，这个时候我们需要自己手动的去添加方法并实现，修改 <code>AuthorService.java</code> 添加如下方法</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091650385.png" alt="image-20220822091650385"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 带条件查询的分页</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pageInfo    分页信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> authorQuery 查询条件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">pageQuery</span><span class="params">(Page&lt;Author&gt; pageInfo, AuthorQuery authorQuery)</span>;</span><br></pre></td></tr></table></figure><p>紧接着就是在对应的实现类当中进行实现该方法</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091709234.png" alt="image-20220822091709234"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pageQuery</span><span class="params">(Page&lt;Author&gt; pageInfo, AuthorQuery authorQuery)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;Author&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    queryWrapper.orderByAsc(<span class="string">&quot;sort&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (Objects.isNull(authorQuery)) &#123;</span><br><span class="line">        <span class="comment">// 没有条件</span></span><br><span class="line">        baseMapper.selectPage(pageInfo, queryWrapper);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有条件，判断条件是否为空</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(authorQuery.getName())) &#123;</span><br><span class="line">        <span class="comment">// 模糊查询 name</span></span><br><span class="line">        queryWrapper.like(<span class="string">&quot;name&quot;</span>, authorQuery.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!Objects.isNull(authorQuery.getLevel())) &#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;level&quot;</span>, authorQuery.getLevel());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询创建的时间大于等于开始时间</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(authorQuery.getBegin())) &#123;</span><br><span class="line">        queryWrapper.ge(<span class="string">&quot;gmt_create&quot;</span>, authorQuery.getBegin());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询创建的时间在小于等于结束时间</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(authorQuery.getEnd())) &#123;</span><br><span class="line">        queryWrapper.le(<span class="string">&quot;gmt_create&quot;</span>, authorQuery.getEnd());</span><br><span class="line">    &#125;</span><br><span class="line">    baseMapper.selectPage(pageInfo, queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>AuthorController</code> 修改内容如下图，当然你可以直接拷贝我下面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 分页查询创作者,还可以添加过滤条件进行查询</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;作者分页列表数据&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/pageList/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">pageList</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;page&quot;, value = &quot;当前页&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long page,</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;limit&quot;, value = &quot;每页记录数&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long limit,</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;authorQuery&quot;, value = &quot;查询对象&quot;)</span></span></span><br><span class="line"><span class="params">        <span class="meta">@RequestBody(required = false)</span> AuthorQuery authorQuery)</span> &#123;</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    Page&lt;Author&gt; pageInfo = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line"></span><br><span class="line">    authorService.pageQuery(pageInfo, authorQuery);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前页的数据</span></span><br><span class="line">    List&lt;Author&gt; records = pageInfo.getRecords();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取总记录</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> pageInfo.getTotal();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;total&quot;</span>, total).data(<span class="string">&quot;rows&quot;</span>, records);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>改造完毕之后访问 swagger 页面进行测试一下接口效果如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091358244.png" alt="image-20220822091358244"></p><h3 id="根据-ID-查询"><a href="#根据-ID-查询" class="headerlink" title="根据 ID 查询"></a>根据 ID 查询</h3><p>测试自行访问 swagger 自测，后续不在贴图，代码如下修改 <code>AuthorController.java</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091830384.png" alt="image-20220822091830384"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 根据id查询作者</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作者Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 查询到的作者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据id查询作者&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getAuthorWithId/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getAuthorWithId</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;作者的id&quot;, required = true)</span> <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="type">Author</span> <span class="variable">author</span> <span class="operator">=</span> authorService.getById(id);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, author);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加作者"><a href="#添加作者" class="headerlink" title="添加作者"></a>添加作者</h3><h4 id="配置自动填充"><a href="#配置自动填充" class="headerlink" title="配置自动填充"></a>配置自动填充</h4><p>移动 mp 依赖的位置原先 mp 依赖是放在 service 模块当中，现在移动到 common_base 当中因为我们在 service 引入了 common_base 所以就会包含 mp 的依赖</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091924443.png" alt="image-20220822091924443"></p><p>创建处理器, 设置自动填充日期</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091936547.png" alt="image-20220822091936547"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtCreate&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;gmtModified&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在实体类当中添加自动填充的注解</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822091955609.png" alt="image-20220822091955609"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br></pre></td></tr></table></figure><p>然后继续完善添加创作者的接口，修改 <code>AuthorController</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822092025051.png" alt="image-20220822092025051"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 添加作者</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> author 需要添加的创作者</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 添加结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;添加作者&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/addAuthor&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">addAuthor</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;author&quot;, value = &quot;作者对象&quot;, required = true)</span> <span class="meta">@RequestBody</span> Author author)</span> &#123;</span><br><span class="line">    authorService.save(author);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新创作者"><a href="#更新创作者" class="headerlink" title="更新创作者"></a>更新创作者</h3><p>修改 <code>AuthorController</code></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822092101023.png" alt="image-20220822092101023"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 更新创作者</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> author 更新的创作者</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 更新结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;更新创作者&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/updateAuthor&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">updateAuthor</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@ApiParam(name = &quot;author&quot;, value = &quot;作者对象&quot;, required = true)</span> <span class="meta">@RequestBody</span> Author author)</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> authorService.updateById(author);</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="08-项目搭建与创作者接口-统一异常与日志处理"><a href="#08-项目搭建与创作者接口-统一异常与日志处理" class="headerlink" title="08-项目搭建与创作者接口-统一异常与日志处理"></a>08-项目搭建与创作者接口-统一异常与日志处理</h2><h3 id="统一异常处理简介"><a href="#统一异常处理简介" class="headerlink" title="统一异常处理简介"></a>统一异常处理简介</h3><p>让异常结果显示为统一的样式结构，例如</p><ul><li>错误信息</li><li>错误提示</li></ul><p>可以使用 <code>@ControllerAdvice</code> 这个注解来进行实现这是 SpringMVC 提供的</p><h3 id="实用步骤"><a href="#实用步骤" class="headerlink" title="实用步骤"></a>实用步骤</h3><p>在 common_base 模块中引入依赖, 想要使用这个注解得要有 SpringMVC Web 相关的依赖才可以，所以这里需要将 Spring Web 启动器的依赖移动到 common_base 当中如下图，为啥要移动呢，因为 service_video 模块中依赖了 common_base 所以你把依赖移动到了 common_base 中 自然而然的 service_video 当中也会有，后面我们还有其它很多的依赖，都直接依赖一下这个 common_base 模块即可完成依赖共享</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020312692-2125813272.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020312692-2125813272.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编辑全局异常处理器"><a href="#编辑全局异常处理器" class="headerlink" title="编辑全局异常处理器"></a>编辑全局异常处理器</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020500021-1433466444.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020500021-1433466444.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * 全局异常处理器, 只要发生了异常,如果在自己控制当中.没有去捕获,就会到此控制器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">error</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.error();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020651188-351983063.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020651188-351983063.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020635233-392679624.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210328020635233-392679624.png" alt="img"></a></p><h2 id="09-创作者前端-前后端分离与建立前端工程"><a href="#09-创作者前端-前后端分离与建立前端工程" class="headerlink" title="09-创作者前端-前后端分离与建立前端工程"></a>09-创作者前端-前后端分离与建立前端工程</h2><h3 id="什么是前后端分离"><a href="#什么是前后端分离" class="headerlink" title="什么是前后端分离"></a>什么是前后端分离</h3><ul><li>前端单独进行部署</li><li>后端也是单独进行部署</li><li>两个系统之间使用 JSON 进行传输</li></ul><h3 id="建立前端工程"><a href="#建立前端工程" class="headerlink" title="建立前端工程"></a>建立前端工程</h3><p>前端是基于 Vue 来进行开发的，所以我本次使用的 UI 为 vue-element-amdin 进行二次开发, 不过使用的是 template 模板 admin 那套内容太多了，所以在这里我将一步一步的来完善该系统</p><p>前端使用的开发工具为 WebStorm 可以和我一样也可以不一样，本次编写博主使用的为 WebStorm</p><h3 id="UI-模板的目录结构"><a href="#UI-模板的目录结构" class="headerlink" title="UI 模板的目录结构"></a>UI 模板的目录结构</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093314873.png" alt="image-20220822093314873"></p><p>下载模板，<a href="https://github.com/PanJiaChen/vue-admin-template">https://github.com/PanJiaChen/vue-admin-template</a></p><p>如果对 Git 了解可以使用 SSH 的方式进行下载，没有的话就直接下载 zip 即可，下载解压之后的效果图如下</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093347325.png" alt="image-20220822093347325"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093358319.png" alt="image-20220822093358319"></p><p>在跑起来这个前端之前你需要准备一个东西就是安装 Node.js 看本教程的时候如果你基础不好我建议还是先去学学前面的内容，在来回头看本教程，Node.js 的安装方式参考链接为：<a href="https://www.cnblogs.com/BNTang/p/13674486.html">https://www.cnblogs.com/BNTang/p/13674486.html</a></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093425315.png" alt="image-20220822093425315"></p><p>还有就是需要配置一下包的下载源对象，默认是从国外进行下载，博主已经改好了，改到了国内的阿里源，切换方式上图的文章列表当中也有如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093439735.png" alt="image-20220822093439735"></p><p>配置 Node</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093453822.png" alt="image-20220822093453822"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093501359.png" alt="image-20220822093501359"></p><p>如上图打开终端，然后下载前端对应的包在终端当中执行如下脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建议不要用 cnpm 安装 会有各种诡异的bug 可以通过如下操作解决 npm 下载速度慢的问题</span></span><br><span class="line">npm install --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>配置运行脚本如下图，就不用每次运行都在终端当中自己打对应的运行脚本了</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093531645.png" alt="image-20220822093531645"></p><p>如上如果都配置好了，那么就直接点击启动的按钮启动工程，最终得到的效果图如下</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093551838.png" alt="image-20220822093551838"></p><h3 id="前端开发步骤"><a href="#前端开发步骤" class="headerlink" title="前端开发步骤"></a>前端开发步骤</h3><p>路径对应路由, 路由当中会对应我们的页面</p><p>添加路由</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093610990.png" alt="image-20220822093610990"></p><p>引入路由的页面</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093627561.png" alt="image-20220822093627561"></p><p>进入到组件当中, 编写页面, 加载对应的 js, 发送网络请求</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093642271.png" alt="image-20220822093642271"></p><p>发送网络请求</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093702953.png" alt="image-20220822093702953"></p><p>在 api 当中创建对应的 js 文件, 定义接口地址参数</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093714951.png" alt="image-20220822093714951"></p><h3 id="前端界面修改"><a href="#前端界面修改" class="headerlink" title="前端界面修改"></a>前端界面修改</h3><h4 id="添加Log"><a href="#添加Log" class="headerlink" title="添加Log"></a>添加Log</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093839631.png" alt="image-20220822093839631"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;logo_img&quot;</span> <span class="attr">src</span>=<span class="string">&quot;@/assets/logo_image/logo.jpg&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>添加样式</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822093918100.png" alt="image-20220822093918100"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">color</span>: $light_gray;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">20px</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.logo_img</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br></pre></td></tr></table></figure><h4 id="修改-favicon-ico"><a href="#修改-favicon-ico" class="headerlink" title="修改 favicon.ico"></a>修改 favicon.ico</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094108039.png" alt="image-20220822094108039"></p><h4 id="修改-Title"><a href="#修改-Title" class="headerlink" title="修改 Title"></a>修改 Title</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094124147.png" alt="image-20220822094124147"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094132583.png" alt="image-20220822094132583"></p><h3 id="前端请求流程"><a href="#前端请求流程" class="headerlink" title="前端请求流程"></a>前端请求流程</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094149274.png" alt="image-20220822094149274"></p><h3 id="替换前端请求服务器地址"><a href="#替换前端请求服务器地址" class="headerlink" title="替换前端请求服务器地址"></a>替换前端请求服务器地址</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094211697.png" alt="image-20220822094211697"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094219303.png" alt="image-20220822094219303"></p><h3 id="编写服务器登录请求接口"><a href="#编写服务器登录请求接口" class="headerlink" title="编写服务器登录请求接口"></a>编写服务器登录请求接口</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094244888.png" alt="image-20220822094244888"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;用户组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 登录成功之后的信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;登录&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;token&quot;</span>, <span class="string">&quot;admin-token&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 登录之后的用户信息</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 登录之后的用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/info&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取登录之后的用户信息&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok()</span><br><span class="line">                .data(<span class="string">&quot;roles&quot;</span>, <span class="string">&quot;[admin]&quot;</span>)</span><br><span class="line">                .data(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;BNTang&quot;</span>)</span><br><span class="line">                .data(<span class="string">&quot;avatar&quot;</span>, <span class="string">&quot;https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在前端调用请求的时候会产生跨域的问题，至于什么是跨域我就不在介绍了，自行问度娘，后续我在出文章进行讲解，目前没有统一的处理跨域所以需要在每一个 Controller 添加一个允许跨域访问的注解就是 <code>@CrossOrigin</code> 没有指定路径，代表当前下的所有都允许跨域访问</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094309488.png" alt="image-20220822094309488"></p><p>然后在修改 <code>user.js</code> 中的 api 为我们自己后台的地址修改文件和修改内容如下图所示</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094325957.png" alt="image-20220822094325957"></p><h2 id="10-创作者前端-创作者列表"><a href="#10-创作者前端-创作者列表" class="headerlink" title="10-创作者前端-创作者列表"></a>10-创作者前端-创作者列表</h2><h3 id="修改路由跳转"><a href="#修改路由跳转" class="headerlink" title="修改路由跳转"></a>修改路由跳转</h3><h4 id="修改路由"><a href="#修改路由" class="headerlink" title="修改路由"></a>修改路由</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094606319.png" alt="image-20220822094606319"></p><p>需要注意把如下图的地方给注释掉，不要纠结为啥，因为路由重复了</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094619517.png" alt="image-20220822094619517"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="comment">// redirect: &#x27;/dashboard&#x27;,</span></span><br><span class="line">    <span class="attr">children</span>: [&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;首页&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/dashboard/index&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span>&#125;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/author&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;/author/table&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;创作者管理&#x27;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;创作者管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span>&#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;table&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;创作者列表&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/author/list&#x27;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;创作者列表&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span>&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;save&#x27;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;添加创作者&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/author/save&#x27;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;添加创作者&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在上图中我新建了两个组件，如何新建的呢，快捷键为 Ctrl + Alt + Shift + insert 即可弹出如下的框子选择 <code>Vue Component</code> 如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094645077.png" alt="image-20220822094645077"></p><p>不使用快捷键的话那么就直接在需要添加组件的文件包上面鼠标右键选择 <code>New</code> 也可以出现如上图的选项卡</p><h4 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h4><p>一个 list，一个 save 内容如下图所示</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094708464.png" alt="image-20220822094708464"></p><h3 id="编写-api-请求数据"><a href="#编写-api-请求数据" class="headerlink" title="编写 api 请求数据"></a>编写 api 请求数据</h3><h4 id="列表数据请求"><a href="#列表数据请求" class="headerlink" title="列表数据请求"></a>列表数据请求</h4><p>在 api 文件夹当中创建请求的 js 文件</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094731028.png" alt="image-20220822094731028"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 1.作者列表-分页查询</span></span><br><span class="line">  <span class="title function_">getAuthorListPage</span>(<span class="params">page, limit, authorQuery</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="comment">// 路由参数拼接</span></span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/author/pageList/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>/`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="comment">// data 会自动转成 json 传递到接口当中</span></span><br><span class="line">      <span class="attr">data</span>: authorQuery</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 list.vue 当中引入对应的 js</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094803302.png" alt="image-20220822094803302"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 author.js 调用对应的请求方法</span></span><br><span class="line"><span class="keyword">import</span> author <span class="keyword">from</span> <span class="string">&#x27;@/api/video/author/author&#x27;</span>;</span><br></pre></td></tr></table></figure><p>定义成员变量, 发送请求</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094833495.png" alt="image-20220822094833495"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;list&quot;</span>,</span><br><span class="line">  <span class="comment">// 定义变量与初始值</span></span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">// 查询的结果集</span></span><br><span class="line">      <span class="attr">list</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="comment">// 当前页</span></span><br><span class="line">      <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="comment">// 每页多少条记录</span></span><br><span class="line">      <span class="attr">limit</span>: <span class="number">10</span>,</span><br><span class="line">      <span class="comment">// 总记录数</span></span><br><span class="line">      <span class="attr">total</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="comment">// 查询封装的对象</span></span><br><span class="line">      <span class="attr">authorQuery</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 自定义方法</span></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">getAuthorList</span>(<span class="params">page = <span class="number">1</span></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">page</span> = page</span><br><span class="line">      author.<span class="title function_">getAuthorListPage</span>(<span class="variable language_">this</span>.<span class="property">page</span>, <span class="variable language_">this</span>.<span class="property">limit</span>, <span class="variable language_">this</span>.<span class="property">authorQuery</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function"><span class="params">resp</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 处理请求成功</span></span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(resp);</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 请求失败</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 页面渲染之前会自动调用此方法</span></span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在后端服务器接口当中添加跨域注解</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094901722.png" alt="image-20220822094901722"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@CrossOrigin</span><br></pre></td></tr></table></figure><p>前端和后端工程都启动点击创作者列表效果如下图所示</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094920001.png" alt="image-20220822094920001"></p><h3 id="Element-ui-表格组件"><a href="#Element-ui-表格组件" class="headerlink" title="Element-ui 表格组件"></a>Element-ui 表格组件</h3><p><a href="https://element.eleme.io/#/zh-CN/component/table">https://element.eleme.io/#/zh-CN/component/table</a></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094939664.png" alt="image-20220822094939664"></p><h3 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h3><p>创作者列表数据展示</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822094954496.png" alt="image-20220822094954496"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">表格</span><br><span class="line">--&gt;</span><br><span class="line">&lt;el-table</span><br><span class="line">  :data=&quot;list&quot;</span><br><span class="line">  border</span><br><span class="line">  fit</span><br><span class="line">  highlight-current-row&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;序号&quot; align=&quot;center&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;名称&quot; align=&quot;center&quot; prop=&quot;name&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;级别&quot; align=&quot;center&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;创作者简介&quot; align=&quot;center&quot; prop=&quot;intro&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;添加时间&quot; align=&quot;center&quot; prop=&quot;gmtCreate&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;排序&quot; align=&quot;center&quot; prop=&quot;sort&quot;/&gt;</span><br><span class="line">  &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot; icon=&quot;el-icon-edit&quot;&gt;修改&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; icon=&quot;el-icon-delete&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-table-column&gt;</span><br><span class="line">&lt;/el-table&gt;</span><br></pre></td></tr></table></figure><p>处理请求成功的回调如下</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095030797.png" alt="image-20220822095030797"></p><p>序号与级别处理</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095044548.png" alt="image-20220822095044548"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 通过 slot 拿到表格当中绑定的数据 --&gt;</span><br><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">  &#123;&#123; scope.$index + 1 &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 通过 slot 拿到表格当中绑定的数据 --&gt;</span><br><span class="line">&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">  &#123;&#123; scope.row.level === 1 ? &quot;普通创作者&quot; : &quot;特约创作者&quot; &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="11-创作者前端-添加分页"><a href="#11-创作者前端-添加分页" class="headerlink" title="11-创作者前端-添加分页"></a>11-创作者前端-添加分页</h2><h3 id="使用-Element-ui-分页组件"><a href="#使用-Element-ui-分页组件" class="headerlink" title="使用 Element-ui 分页组件"></a>使用 Element-ui 分页组件</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095205115.png" alt="image-20220822095205115"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--分页--&gt;</span><br><span class="line">&lt;el-pagination</span><br><span class="line">  style=&quot;padding: 30px 0; text-align: center&quot;</span><br><span class="line">  background</span><br><span class="line">  :current-page=&quot;page&quot;</span><br><span class="line">  :page-size=&quot;limit&quot;</span><br><span class="line">  layout=&quot;total, prev, pager, next, jumper &quot;</span><br><span class="line">  :total=&quot;total&quot;</span><br><span class="line">  @current-change=&quot;getAuthorList&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>定义请求方法，如下的方法代码之前的文章已经有了不在贴</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095225792.png" alt="image-20220822095225792"></p><p>修改使用汉字 Element-UI 显示，不然分页信息是英文如下图</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095237297.png" alt="image-20220822095237297"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095245211.png" alt="image-20220822095245211"></p><p>修改 main.js 即可进行切换为汉字显示</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822095256116.png" alt="image-20220822095256116"></p><h2 id="12-创作者前端-条件查询"><a href="#12-创作者前端-条件查询" class="headerlink" title="12-创作者前端-条件查询"></a>12-创作者前端-条件查询</h2><h3 id="添加查询表单"><a href="#添加查询表单" class="headerlink" title="添加查询表单"></a>添加查询表单</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822103039430.png" alt="image-20220822103039430"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 表单查询 --&gt;</span><br><span class="line">&lt;el-form :inline=&quot;true&quot; :model=&quot;authorQuery&quot; class=&quot;demo-form-inline&quot;&gt;</span><br><span class="line">  &lt;!-- 姓名 --&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;姓名&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;authorQuery.name&quot; placeholder=&quot;姓名&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;!-- 下拉列表 --&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;级别&quot;&gt;</span><br><span class="line">    &lt;el-select v-model=&quot;authorQuery.level&quot; clearable placeholder=&quot;选择级别&quot;&gt;</span><br><span class="line">      &lt;el-option label=&quot;特约创作者&quot; value=&quot;0&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">      &lt;el-option label=&quot;普通创作者&quot; value=&quot;1&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;!--日期选择--&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;authorQuery.begin&quot;</span><br><span class="line">      type=&quot;datetime&quot;</span><br><span class="line">      value-format=&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">      default-time=&quot;00:00:00&quot;</span><br><span class="line">      placeholder=&quot;选择开始时间&quot;&gt;</span><br><span class="line">    &lt;/el-date-picker&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=&quot;authorQuery.end&quot;</span><br><span class="line">      type=&quot;datetime&quot;</span><br><span class="line">      value-format=&quot;yyyy-MM-dd HH:mm:ss&quot;</span><br><span class="line">      default-time=&quot;00:00:00&quot;</span><br><span class="line">      placeholder=&quot;选择截止时间&quot;&gt;</span><br><span class="line">    &lt;/el-date-picker&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;getAuthorList()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;default&quot; @click=&quot;resetData()&quot;&gt;清空&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure><h3 id="添加清空查询条件数据方法"><a href="#添加清空查询条件数据方法" class="headerlink" title="添加清空查询条件数据方法"></a>添加清空查询条件数据方法</h3><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822103111816.png" alt="image-20220822103111816"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 清空查询的数据</span></span><br><span class="line"><span class="title function_">resetData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 清空表单</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">authorQuery</span> = &#123;&#125;;</span><br><span class="line">  <span class="comment">// 重新查询</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-创作者前端-逻辑删除创作者"><a href="#13-创作者前端-逻辑删除创作者" class="headerlink" title="13-创作者前端-逻辑删除创作者"></a>13-创作者前端-逻辑删除创作者</h2><p>监听删除按钮的点击，然后传入当前删除记录的 id 进行逻辑删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">  &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot; icon=&quot;el-icon-edit&quot;&gt;修改&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; icon=&quot;el-icon-delete&quot;</span><br><span class="line">               @click=&quot;deleteAuthorWithId(scope.row.id)&quot;&gt;删除</span><br><span class="line">    &lt;/el-button&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure><h3 id="实现删除的方法"><a href="#实现删除的方法" class="headerlink" title="实现删除的方法"></a>实现删除的方法</h3><p>编写删除的前端 api</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822103233861.png" alt="image-20220822103233861"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.删除作者</span></span><br><span class="line"><span class="title function_">deleteAuthorWithId</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="comment">// 路由参数拼接</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/author/deleteAuthor/<span class="subst">$&#123;id&#125;</span>/`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后端的接口</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220822103312250.png" alt="image-20220822103312250"></p><p>实现前端删除的方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330221422438-727638782.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330221422438-727638782.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除创作者</span></span><br><span class="line"><span class="title function_">deleteAuthorWithId</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="comment">// 用户提示</span></span><br><span class="line">  <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;此操作将永久删除该创作者！, 是否继续?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 调用删除的api</span></span><br><span class="line">    author.<span class="title function_">deleteAuthorWithId</span>(id).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 重新加载数据</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;删除失败！&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;已取消删除&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-创作者前端-添加创作者"><a href="#14-创作者前端-添加创作者" class="headerlink" title="14-创作者前端-添加创作者"></a>14-创作者前端-添加创作者</h2><p>编写添加界面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330230336007-771215017.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330230336007-771215017.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作者名称&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;author.name&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label=&quot;排序&quot;&gt;</span><br><span class="line">        &lt;el-input-number v-model=&quot;author.sort&quot; controls-position=&quot;right&quot; :min=&quot;0&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label=&quot;级别&quot;&gt;</span><br><span class="line">        &lt;el-select v-model=&quot;author.level&quot; clearable placeholder=&quot;选择级别&quot;&gt;</span><br><span class="line">          &lt;el-option label=&quot;特约创作者&quot; value=&quot;0&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">          &lt;el-option label=&quot;普通创作者&quot; value=&quot;1&quot;&gt;&lt;/el-option&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label=&quot;工作经历&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;author.career&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label=&quot;创作者简介&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;author.intro&quot; type=&quot;textarea&quot; :rows=&quot;10&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button :disabled=&quot;false&quot; type=&quot;primary&quot; @click=&quot;saveClick()&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>编写添加接口 api</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330225328891-1735778743.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330225328891-1735778743.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.添加</span></span><br><span class="line"><span class="title function_">addAuthor</span>(<span class="params">author</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/author/addAuthor`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="comment">// data 会自动转成 json 传递到接口当中</span></span><br><span class="line">    <span class="attr">data</span>: author</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>引入添加的接口，处理添加的请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330230455891-779233552.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210330230455891-779233552.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> author <span class="keyword">from</span> <span class="string">&quot;@/api/video/author/author&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;save&quot;</span>,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">author</span>: &#123;</span><br><span class="line">        <span class="comment">// 排序默认值</span></span><br><span class="line">        <span class="attr">sort</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">saveClick</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//保存，添加 / 更新</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">addAuthor</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 添加</span></span><br><span class="line">    <span class="title function_">addAuthor</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 调用接口，做添加操作</span></span><br><span class="line">      author.<span class="title function_">addAuthor</span>(<span class="variable language_">this</span>.<span class="property">author</span>).<span class="title function_">then</span>(<span class="function"><span class="params">resposne</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 添加成功</span></span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: resposne.<span class="property">message</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 跳转到列表页</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/author/table&#x27;</span>&#125;)</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;添加失败！&#x27;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="15-创作者前端-更新创作者"><a href="#15-创作者前端-更新创作者" class="headerlink" title="15-创作者前端-更新创作者"></a>15-创作者前端-更新创作者</h2><p>点击编辑按钮进行页面路由跳转</p><p>定义点击编辑按钮的路由如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331223622642-1994713130.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331223622642-1994713130.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;edit/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;编辑&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/author/save&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;编辑&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改编辑按钮，修改点击编辑按钮跳转的路由地址，使用 <code>router-link</code> 如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331223720885-472657697.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331223720885-472657697.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">修改跳转,让其跳转到路由当中,编辑路由页面和添加的是一样，编辑当中是有参数</span><br><span class="line">--&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#x27;/author/edit/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot; icon=&quot;el-icon-edit&quot;&gt;修改&lt;/el-button&gt;</span><br><span class="line">&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h3 id="更新数据回显"><a href="#更新数据回显" class="headerlink" title="更新数据回显"></a>更新数据回显</h3><p>编写请求 api</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331224724096-915205001.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331224724096-915205001.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4.根据id查询作者</span></span><br><span class="line"><span class="title function_">getOneAuthor</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="comment">// 路由参数拼接</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/author/getAuthorWithId/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取参数，然后发送请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331225102452-812355676.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331225102452-812355676.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一进来就要获取参数</span></span><br><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 判断有没有参数，如果有，获取参数</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> authorId = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>;</span><br><span class="line">    <span class="comment">// 根据id获取该条参数对应的数据,发送请求到服务器当中获取数据</span></span><br><span class="line">    author.<span class="title function_">getOneAuthor</span>(authorId).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">author</span> = res.<span class="property">data</span>.<span class="property">item</span>;</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;服务器繁忙，请稍后再试！&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">author</span> = &#123;</span><br><span class="line">      <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">level</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让下拉列表进行默认选中</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331224935290-1287713323.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331224935290-1287713323.png" alt="img"></a></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>添加更新创作者的请求 api</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230152456-96210100.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230152456-96210100.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 5.更新创作者</span></span><br><span class="line"><span class="title function_">updateAuthor</span>(<span class="params">author</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/service_video/author/updateAuthor&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="comment">// data会自动转成JSON传递到接口当中</span></span><br><span class="line">    <span class="attr">data</span>: author</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写更新创作者请求的方法如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230316878-1363337643.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230316878-1363337643.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新</span></span><br><span class="line"><span class="title function_">updateAuthor</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 调用更新的api</span></span><br><span class="line">  author.<span class="title function_">updateAuthor</span>(<span class="variable language_">this</span>.<span class="property">author</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 更新成功</span></span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;更新成功!&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;更新失败！&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 跳转到创作者列表页</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/author/table&#x27;</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改之前的添加方法，判断，当前是否为更新或者添加，达到复用</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230418629-893693451.png"><img src="https://img2020.cnblogs.com/blog/2105804/202103/2105804-20210331230418629-893693451.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">saveClick</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 根据有没有 id 判断，是添加还是更新</span></span><br><span class="line">  <span class="comment">// 如果有id，那么就是更新，否则就是添加</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">author</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="comment">// 更新</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateAuthor</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 添加</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">addAuthor</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="16-创作者前端-云对象存储"><a href="#16-创作者前端-云对象存储" class="headerlink" title="16-创作者前端-云对象存储"></a>16-创作者前端-云对象存储</h2><h3 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h3><p>首先进入阿里云官网：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a> 搜索 <code>oss</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120053213-768450886.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120053213-768450886.png" alt="img"></a></p><p>点击管理控制台，进去之后, 点击立即开通</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120345186-507450181.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120345186-507450181.png" alt="img"></a></p><p>开通之后的样子如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120442932-947980182.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120442932-947980182.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120406697-578889913.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120406697-578889913.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120530653-2011256197.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120530653-2011256197.png" alt="img"></a></p><h3 id="申请密钥"><a href="#申请密钥" class="headerlink" title="申请密钥"></a>申请密钥</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120620624-583609961.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120620624-583609961.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120640289-869350431.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120640289-869350431.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120702235-1578196613.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120702235-1578196613.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120718524-415737432.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120718524-415737432.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120755512-138518618.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120755512-138518618.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120821997-684776233.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120821997-684776233.png" alt="img"></a></p><h3 id="Api-地址"><a href="#Api-地址" class="headerlink" title="Api 地址"></a>Api 地址</h3><p>地址：<a href="https://help.aliyun.com/document_detail/32011.html?spm=a2c4g.11186623.6.939.68ec46a1Dmwj0L">https://help.aliyun.com/document_detail/32011.html?spm=a2c4g.11186623.6.939.68ec46a1Dmwj0L</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120926451-949208435.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403120926451-949208435.png" alt="img"></a></p><h3 id="创建-service-upload-服务"><a href="#创建-service-upload-服务" class="headerlink" title="创建 service_upload 服务"></a>创建 service_upload 服务</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403121325241-1156064171.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403121325241-1156064171.png" alt="img"></a></p><p>修改 service_upload 服务的 pom.xml 引入依赖</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122334776-1644420724.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122334776-1644420724.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 阿里云oss依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 日期工具类依赖 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加启动类并排除加载数据库相关信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122152415-53381302.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122152415-53381302.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> OSS云上传服务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/3 12:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UpLoadApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        exclude = DataSourceAutoConfiguration.class：默认会加载数据库相关信息，现在是上传服务，里面用不到数据库相关信息,不让工程加载数据库相关信息</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        SpringApplication.run(UpLoadApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>resources</code> 中添加配置文件 <code>application.yml</code> 内容如下</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8002</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-video</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义oss相关属性</span></span><br><span class="line"><span class="attr">oss:</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">oss-cn-hangzhou.aliyuncs.com</span></span><br><span class="line">  <span class="attr">accessKeyId:</span> <span class="string">LTAI4GH19ep2P8caxW2E2N6A</span></span><br><span class="line">  <span class="attr">accessKeySecret:</span> <span class="string">NAmWiBmKXofw7hs4JRcx7SLhF1MN6P</span></span><br><span class="line">  <span class="attr">bucketName:</span> <span class="string">BNTang</span></span><br></pre></td></tr></table></figure><p>oss 相关属性怎么来的呢，继续进入到我们上方开通好的 oss 管理控制台中选择 <code>Bucket 管理</code> 如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122642515-1904847350.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122642515-1904847350.png" alt="img"></a></p><p>按照我如下图进行选择即可，读写不能设置为私有，不然就不能访问了，同城冗余存储代表的是，如果出现故障了，它可以做备份，之前的数据还有，其它的就没什么要注意的了创建即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122844363-721456685.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403122844363-721456685.png" alt="img"></a></p><p>创建好了之后界面如下图所示，我下图选中了一个 <code>Endpoint</code> 就是我们上方 oss 相关属性的 Endpoint 配置值，其它的在哪里呢，继续往下看 <code>accessKey</code> 就是我们之前创建的那个 <code>accessKey</code> 的界面中的 accessKey，不知道找了可以参考下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123517631-149328232.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123517631-149328232.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123816927-581167759.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123816927-581167759.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123841330-255602506.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123841330-255602506.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123938263-1500844431.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403123938263-1500844431.png" alt="img"></a></p><p>可能你一来不是显示的，需要获取验证码输入之后就可以看到了，复制上方的一些信息替换成你自己实际的即可配置完毕了, <code>bucketName</code> 就是你创建的 bucketName 的名称</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403124125027-1775556320.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403124125027-1775556320.png" alt="img"></a></p><p>定义工具类加载配置信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403125122567-560875593.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403125122567-560875593.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 读取配置的属性信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/3 12:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OssConstant</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oss.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oss.accessKeyId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oss.accessKeySecret&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;oss.bucketName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ENDPOINT;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ASSESS_KEY_ID;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ASSESS_KEY_SECRET;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String BUCKET_NAME;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在属性文件加载完毕后属性也设置完毕之后, 会自动调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterPropertiesSet</span><span class="params">()</span> &#123;</span><br><span class="line">        ENDPOINT = endpoint;</span><br><span class="line">        ASSESS_KEY_ID = accessKeyId;</span><br><span class="line">        ASSESS_KEY_SECRET = accessKeySecret;</span><br><span class="line">        BUCKET_NAME = bucketName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义上传的控制器接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165122803-838436467.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165122803-838436467.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 上传oss控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/3 12:53</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_upload/file&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;上传OSS&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UpLoadController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UpLoadService upLoadService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UpLoadController</span><span class="params">(UpLoadService upLoadService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.upLoadService = upLoadService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 上传文件</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 上传之后的文件下载地址 url</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/uploadOssFile&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">uploadOssFile</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;url&quot;</span>, upLoadService.uploadFile(file));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义上传的接口业务</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165249370-238901943.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165249370-238901943.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 上传服务接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/3 12:56</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UpLoadService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 上传OSS文件</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 上传之后的url</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">uploadFile</span><span class="params">(MultipartFile file)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OSS 上传业务实现</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165511249-1662596868.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403165511249-1662596868.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> OSS上传业务实现</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/3 12:57</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UpLoadServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UpLoadService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadFile</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="comment">// Endpoint以上海为例，其它Region请按实际情况填写。</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">endpoint</span> <span class="operator">=</span> OssConstant.ENDPOINT;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 云账号AccessKey有所有API访问权限</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeyId</span> <span class="operator">=</span> OssConstant.ASSESS_KEY_ID;</span><br><span class="line">        <span class="type">String</span> <span class="variable">accessKeySecret</span> <span class="operator">=</span> OssConstant.ASSESS_KEY_SECRET;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketName</span> <span class="operator">=</span> OssConstant.BUCKET_NAME;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">        <span class="type">OSS</span> <span class="variable">ossClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建OSSClient实例。</span></span><br><span class="line">            ossClient = <span class="keyword">new</span> <span class="title class_">OSSClientBuilder</span>().build(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 上传文件流。</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理文件名称</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> uuid + file.getOriginalFilename();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 把同一天上传的文件 放到同一个文件夹当中  2020/10/1/fileName</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DateTime</span>().toString(<span class="string">&quot;yyyy/MM/dd&quot;</span>);</span><br><span class="line">            fileName = date + <span class="string">&quot;/&quot;</span> + fileName;</span><br><span class="line"></span><br><span class="line">            ossClient.putObject(bucketName, fileName, inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// https://bntang.oss-cn-shanghai.aliyuncs.com/01-%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B01.png</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;https://&quot;</span> + bucketName + <span class="string">&quot;.&quot;</span> + endpoint + <span class="string">&quot;/&quot;</span> + fileName;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 关闭OSSClient。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != ossClient) &#123;</span><br><span class="line">                ossClient.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启工程进行测试上传，访问 swagger 选择需要上传的文件进行上传，在进行访问 swagger 的时候发现，弹出了如下图的内容，如果出现了下图中的内容就代表没有添加扫描包的注解</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170004511-1159084315.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170004511-1159084315.png" alt="img"></a></p><p>修改 service_upload 的启动类添加如下注解即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170557242-1843100419.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170557242-1843100419.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span></span><br></pre></td></tr></table></figure><p>测试上传，成功，如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170423695-1413887640.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170423695-1413887640.png" alt="img"></a></p><p>查看阿里云 OSS 存储文件列表如下图，发现已经OK了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170532891-461199861.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403170532891-461199861.png" alt="img"></a></p><h2 id="17-创作者前端-前后端分离多服务之间的访问调用"><a href="#17-创作者前端-前后端分离多服务之间的访问调用" class="headerlink" title="17-创作者前端-前后端分离多服务之间的访问调用"></a>17-创作者前端-前后端分离多服务之间的访问调用</h2><p>利用 <code>nginx</code>，在 <code>nginx</code> 当中配置服务地址代理规则</p><p>下载 nginx，<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403171620738-1353276971.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403171620738-1353276971.png" alt="img"></a></p><p>修改 nginx 配置，修改 <code>nginx-1.16.1\conf</code> 目录下的 <code>nginx.conf</code> 文件，修改内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172253755-946127943.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172253755-946127943.png" alt="img"></a></p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">location ~ /service_video &#123;</span><br><span class="line">    proxy_pass http://localhost:8001;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /service_upload &#123;</span><br><span class="line">    proxy_pass http://localhost:8002;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动 nginx，然后在浏览器中访问 <a href="http://localhost/">http://localhost/</a> 看到如下界面说明 nginx 已经启动好了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172356494-1945287669.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172356494-1945287669.png" alt="img"></a></p><p>那么如何关闭 nginx 呢，你们的有可能有一个命令行窗口，你关闭那个窗口其实 nginx 并没有真正的关闭，你不信你关闭了之后你在访问 <a href="http://localhost/">http://localhost/</a> 还是可以看到如上图的界面，那么怎么关闭呢，关闭方式如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172525929-1943693494.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172525929-1943693494.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172610067-1173652130.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172610067-1173652130.png" alt="img"></a></p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -s stop</span><br></pre></td></tr></table></figure><p>再次访问如上 nginx 的地址你会发现访问不到了，就说明关闭啦，配置好了 nginx 之后呢，然后在前端工程当中配置接口地址为 <code>nginx</code> 地址即可完成多服务访问的效果了，修改前端的 <code>.env.development</code> 修改内容如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172734239-987055984.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172734239-987055984.png" alt="img"></a></p><p>如上的内容都配置完毕了之后这个时候你启动后端和前端来测试一下，还有 nginx 也需要启动，来看看可不可以达到多服务的访问呢</p><p>启动后端</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172839646-2094413180.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172839646-2094413180.png" alt="img"></a></p><p>访问登录发现出错了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172904468-109367762.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403172904468-109367762.png" alt="img"></a></p><p>问题原因就是我们登录的 Controller 没有加模块的前缀路径，修改 <code>LoginController</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173016854-31611424.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173016854-31611424.png" alt="img"></a></p><p>紧接着前端登录接口的路径也需要同理的修改，如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173223005-1446613152.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173223005-1446613152.png" alt="img"></a></p><p>修改之后在访问，发现全部都OK啦，效果如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173258194-1999252729.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403173258194-1999252729.png" alt="img"></a></p><h2 id="18-创作者前端-头像上传前端"><a href="#18-创作者前端-头像上传前端" class="headerlink" title="18-创作者前端-头像上传前端"></a>18-创作者前端-头像上传前端</h2><p>添加缩略图，和上传图片的组件，上传图片的组件我是从 vue-element-admin 中进行拷贝过来的，如果你想使用和我不同的上传组件可以自行去弄一个，我的话就使用 vue-element-admin 提供的了，下载 vue-element-admin</p><p>下载地址：<a href="https://github.com/PanJiaChen/vue-element-admin">https://github.com/PanJiaChen/vue-element-admin</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403181342673-1558821332.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403181342673-1558821332.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182208859-1485594958.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182208859-1485594958.png" alt="img"></a></p><p>在添加创作者页面当中导入该组件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182534811-660572070.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182534811-660572070.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> imageCropper <span class="keyword">from</span> <span class="string">&quot;@/components/ImageCropper&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> panThumb <span class="keyword">from</span> <span class="string">&quot;@/components/PanThumb&quot;</span>;</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">components</span>: &#123;imageCropper, panThumb&#125;,</span><br></pre></td></tr></table></figure><p>修改添加页面，添加缩略图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182951653-654884152.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403182951653-654884152.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  &lt;pan-thumb :width=&quot;String(&#x27;100px&#x27;)&quot; :height=&quot;String(&#x27;100px&#x27;)&quot; :image=&quot;String(author.avatar)&quot;/&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>上传界面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403183205995-923377412.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403183205995-923377412.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item&gt;</span><br><span class="line">  &lt;pan-thumb :width=&quot;String(&#x27;100px&#x27;)&quot; :height=&quot;String(&#x27;100px&#x27;)&quot; :image=&quot;String(author.avatar)&quot;/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;el-button type=&quot;primary&quot; @click=&quot;imageCropperShow=true&quot;&gt;上传头像&lt;/el-button&gt;</span><br><span class="line">  &lt;!--</span><br><span class="line">  上传头像的界面</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;image-cropper</span><br><span class="line">    v-show=&quot;imageCropperShow&quot;</span><br><span class="line">    :width=&quot;500&quot;</span><br><span class="line">    :height=&quot;300&quot;</span><br><span class="line">    :key=&quot;cropperKey&quot;</span><br><span class="line">    :url=&quot;BASE_API+&#x27;/service_upload/file/uploadOssFile&#x27;&quot;</span><br><span class="line">    field=&quot;file&quot;</span><br><span class="line">    @close=&quot;close&quot;</span><br><span class="line">    @crop-upload-success=&quot;cropSuccess&quot;</span><br><span class="line">  /&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p>事件处理</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403183850318-1036544184.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403183850318-1036544184.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">author</span>: &#123;</span><br><span class="line">      <span class="comment">// 排序默认值</span></span><br><span class="line">      <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">level</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">imageCropperShow</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">cropperKey</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">BASE_API</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403184106978-1722551225.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403184106978-1722551225.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 关闭弹框</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">imageCropperShow</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">// 该代码可以清空上传组件的默认样式，也就是说每次弹出来的窗口都是新的</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">cropperKey</span> = <span class="variable language_">this</span>.<span class="property">cropperKey</span> + <span class="number">1</span>;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">cropSuccess</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="comment">// 关闭弹框</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">imageCropperShow</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="comment">// 显示图片</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">author</span>.<span class="property">avatar</span> = data.<span class="property">url</span>;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">cropperKey</span> = <span class="variable language_">this</span>.<span class="property">cropperKey</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上内容都完成好了之后，测试上传效果图如下所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403185636068-926996684.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403185636068-926996684.png" alt="img"></a></p><h2 id="19-分类管理-数据库表创建"><a href="#19-分类管理-数据库表创建" class="headerlink" title="19-分类管理-数据库表创建"></a>19-分类管理-数据库表创建</h2><p>数据库语句如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `video_category` (</span><br><span class="line">`id` CHAR ( 19 ) NOT NULL COMMENT &#x27;类别ID&#x27;,</span><br><span class="line">`title` VARCHAR ( 10 ) NOT NULL COMMENT &#x27;类别名称&#x27;,</span><br><span class="line">`parent_id` CHAR ( 19 ) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;父ID&#x27;,</span><br><span class="line">`sort` INT ( 10 ) UNSIGNED NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">`gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">`gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">PRIMARY KEY ( `id` ),</span><br><span class="line">KEY `idx_parent_id` ( `parent_id` ) </span><br><span class="line">) ENGINE = INNODB DEFAULT CHARSET = utf8mb4 ROW_FORMAT = COMPACT COMMENT = &#x27;科目分类&#x27;;</span><br></pre></td></tr></table></figure><h2 id="20-分类管理-上传分类前端"><a href="#20-分类管理-上传分类前端" class="headerlink" title="20-分类管理-上传分类前端"></a>20-分类管理-上传分类前端</h2><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403191804810-932327535.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403191804810-932327535.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/category&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&#x27;/category/list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;视频分类管理&#x27;</span>,</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;视频分类管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">children</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;视频分类列表&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/category/list&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;视频分类列表&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span>&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;save&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;上传视频分类&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/category/save&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;上传视频分类&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>完善上传页面，上传页面也就是所谓的添加页面，现在大部分使用 excel 导致的比较多，所以这次就采用 excel 导入上传的形式来做添加，添加内容如下，添加了之后会报错，因为方法还没添加，不过没什么问题，先添加，添加完毕了之后紧接着就是去写 excel 上传解析接口了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      下载 excel 模板</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;描述信息&quot;&gt;</span><br><span class="line">        &lt;el-tag type=&quot;info&quot;&gt;excel模板说明&lt;/el-tag&gt;</span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        &lt;el-tag&gt;</span><br><span class="line">          &lt;i class=&quot;el-icon-download&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:(0)&quot;&gt;点击下载模板&lt;/a&gt;</span><br><span class="line">        &lt;/el-tag&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      上传excel</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;上传信息&quot;&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">          ref=&quot;upload&quot;</span><br><span class="line">          action=&quot;https://jsonplaceholder.typicode.com/posts/&quot;</span><br><span class="line">          :auto-upload=&quot;false&quot;</span><br><span class="line">          :on-success=&quot;uploadSuccess&quot;</span><br><span class="line">          :on-error=&quot;uploadError&quot;</span><br><span class="line">          accept=&quot;.xls, .xlsx&quot;</span><br><span class="line">          :limit=&quot;1&quot;</span><br><span class="line">          :disabled=&quot;btnDisabled&quot;</span><br><span class="line">          name=&quot;file&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-button slot=&quot;trigger&quot; size=&quot;small&quot; type=&quot;primary&quot;&gt;选取文件&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button style=&quot;margin-left: 10px;&quot; size=&quot;small&quot; type=&quot;success&quot;</span><br><span class="line">                     @click=&quot;submitUpload&quot;&gt;上传到服务器</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/el-upload&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;save&quot;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="21-分类管理-后台接口编写"><a href="#21-分类管理-后台接口编写" class="headerlink" title="21-分类管理-后台接口编写"></a>21-分类管理-后台接口编写</h2><h3 id="EasyExcel"><a href="#EasyExcel" class="headerlink" title="EasyExcel"></a>EasyExcel</h3><h4 id="EasyExcel-概述"><a href="#EasyExcel-概述" class="headerlink" title="EasyExcel 概述"></a>EasyExcel 概述</h4><p>Java 解析、生成 excel 比较有名的框架有 Apache poi、jxl，但他们都存在一个严重的问题就是非常耗内存，easyExcel 也是用来解析 excel 用的，但是他却解决了这个问题</p><h4 id="EasyExcel-的原理"><a href="#EasyExcel-的原理" class="headerlink" title="EasyExcel 的原理"></a>EasyExcel 的原理</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403205450746-91259428.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403205450746-91259428.png" alt="img"></a></p><h3 id="写数据"><a href="#写数据" class="headerlink" title="写数据"></a>写数据</h3><p>创建模型，在创建模型之前在 service_video 模型中添加单元测试和热加载相关的依赖，如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403222030234-1004678625.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210403222030234-1004678625.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在引入 easyExcel 相关的依赖</p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模型内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020657995-562868455.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020657995-562868455.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentData</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;学号&quot;, index = 0)</span></span><br><span class="line">    <span class="keyword">private</span> Integer no;</span><br><span class="line">    <span class="meta">@ExcelProperty(value = &quot;姓名&quot;, index = 1)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写数据，也就是导出 excel 文件</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/3 22:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServiceVideoApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">writeExcel</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;D:\\01.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">        List&lt;StudentData&gt; studentDataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="type">StudentData</span> <span class="variable">studentData</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StudentData</span>();</span><br><span class="line"></span><br><span class="line">            studentData.setNo(i);</span><br><span class="line">            studentData.setName(<span class="string">&quot;BNTang&quot;</span> + i);</span><br><span class="line"></span><br><span class="line">            studentDataList.add(studentData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 1.fileName：文件路径与名称</span></span><br><span class="line"><span class="comment">         * 2.StudentData.class：模型的字节码</span></span><br><span class="line"><span class="comment">         * 3.sheet：名称</span></span><br><span class="line"><span class="comment">         * 4.doWrite：要写的数据，是一个list</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        EasyExcel.write(fileName, StudentData.class).sheet(<span class="string">&quot;学生&quot;</span>).doWrite(studentDataList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行测试类，最终结果如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020822957-2066477392.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020822957-2066477392.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020845122-434877068.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404020845122-434877068.png" alt="img"></a></p><h3 id="读数据"><a href="#读数据" class="headerlink" title="读数据"></a>读数据</h3><p>创建监听器</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404021112749-1997089309.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404021112749-1997089309.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelListener</span> <span class="keyword">extends</span> <span class="title class_">AnalysisEventListener</span>&lt;StudentData&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 一行一行读取数据</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentData     读取到的一行数据模型对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisContext analysisContext</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(StudentData studentData, AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;data = &quot;</span> + studentData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invokeHeadMap</span><span class="params">(Map&lt;Integer, String&gt; headMap, AnalysisContext context)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;表头: &quot;</span> + headMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 所有的数据读取完毕之后会自动调用</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> analysisContext analysisContext</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;读取完毕&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404021243456-1838718955.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404021243456-1838718955.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ReadExcel</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> <span class="string">&quot;D:\\01.xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 每读取一行数据的时候, 就会调用监听器当中的方法</span></span><br><span class="line">    EasyExcel.read(fileName, StudentData.class, <span class="keyword">new</span> <span class="title class_">ExcelListener</span>()).sheet().doRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="应用到工程当中"><a href="#应用到工程当中" class="headerlink" title="应用到工程当中"></a>应用到工程当中</h3><h4 id="建立模型"><a href="#建立模型" class="headerlink" title="建立模型"></a>建立模型</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022421387-1955581545.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022421387-1955581545.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/4 2:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分类excel上传的模型类</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryData</span> &#123;</span><br><span class="line">    <span class="meta">@ExcelProperty(index = 0)</span></span><br><span class="line">    <span class="keyword">private</span> String oneCategoryData;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(index = 1)</span></span><br><span class="line">    <span class="keyword">private</span> String twoCategoryData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建监听器</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022648075-690675502.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022648075-690675502.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/4 2:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分类管理上传excel监听器</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryExcelListener</span> <span class="keyword">extends</span> <span class="title class_">AnalysisEventListener</span>&lt;CategoryData&gt; &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(CategoryData categoryData, AnalysisContext analysisContext)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写控制器，用来接收文件，然后编写对应文件处理的业务</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022853966-2064679854.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404022853966-2064679854.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/4 2:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分类管理控制器</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/category&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CategoryController</span><span class="params">(CategoryService categoryService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.categoryService = categoryService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/addCategory&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">addCategory</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用业务上传excel</span></span><br><span class="line">        categoryService.saveCategory(file);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上报错是因为还没有编写对应的接口和实现类所以找不到下面我们就来编写，在继续往下写之前我先来弥补一下我之前的一个错误就是把 mp 的代码生成器给删除了，这个时候要生成分类管理表相关的实体了，所以这个时候把之前的生成器代码拿回来放到测试包下，然后改一下生成的表名，把之前新建的分类管理的 <code>Controller</code> 删除用 mp 生成器生成的</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404023720077-421782479.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404023720077-421782479.png" alt="img"></a></p><p>改好了之前点击启动生成即可，这个类以后就保留着，然后把如上 Controller 写的内容复制到 mp 生成器生成的 Controller 中去即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404023855292-1097642576.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404023855292-1097642576.png" alt="img"></a></p><p>修改对应的业务类，修改 <code>CategoryService</code> 接口，也就是分类管理的接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024019574-1127205993.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024019574-1127205993.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 上传excel</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file 上传的文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">saveCategory</span><span class="params">(MultipartFile file)</span>;</span><br></pre></td></tr></table></figure><p>然后就是编写业务类了，内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024212805-697630825.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024212805-697630825.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 科目分类 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;CategoryMapper, Category&gt; <span class="keyword">implements</span> <span class="title class_">CategoryService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * excel监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CategoryExcelListener categoryExcelListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CategoryServiceImpl</span><span class="params">(CategoryExcelListener categoryExcelListener)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.categoryExcelListener = categoryExcelListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCategory</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="comment">// 读取excel</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            EasyExcel.read(file.getInputStream(), CategoryData.class, categoryExcelListener).sheet().doRead();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>剩余的内容就是完善一下我们 excel 上传解析的监听器了，主要就是在监听器当中保存数据，最终监听器代码如下</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/4 2:25</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分类管理上传excel监听器</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryExcelListener</span> <span class="keyword">extends</span> <span class="title class_">AnalysisEventListener</span>&lt;CategoryData&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CategoryExcelListener</span><span class="params">(CategoryService categoryService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.categoryService = categoryService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(CategoryData categoryData, AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        <span class="comment">// 写入到数据库当中</span></span><br><span class="line">        <span class="keyword">if</span> (!Objects.isNull(categoryData)) &#123;</span><br><span class="line">            <span class="comment">// 如果一级分类不存在,就保存到数据库当中</span></span><br><span class="line">            <span class="type">Category</span> <span class="variable">oneCategory</span> <span class="operator">=</span> <span class="built_in">this</span>.isExistOneCategory(categoryData);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Objects.isNull(oneCategory)) &#123;</span><br><span class="line">                oneCategory = <span class="keyword">new</span> <span class="title class_">Category</span>();</span><br><span class="line">                oneCategory.setTitle(categoryData.getOneCategoryData());</span><br><span class="line">                oneCategory.setParentId(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"></span><br><span class="line">                categoryService.save(oneCategory);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 保存2级分类,先判断2级分类是否已经存在</span></span><br><span class="line">            <span class="type">Category</span> <span class="variable">twoCategory</span> <span class="operator">=</span> <span class="built_in">this</span>.isExistTwoCategory(categoryData, oneCategory.getId());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (Objects.isNull(twoCategory)) &#123;</span><br><span class="line">                twoCategory = <span class="keyword">new</span> <span class="title class_">Category</span>();</span><br><span class="line">                twoCategory.setTitle(categoryData.getTwoCategoryData());</span><br><span class="line">                twoCategory.setParentId(oneCategory.getId());</span><br><span class="line"></span><br><span class="line">                categoryService.save(twoCategory);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 判断1级分类是否已经存在</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Category <span class="title function_">isExistOneCategory</span><span class="params">(CategoryData categoryData)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;Category&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;title&quot;</span>, categoryData.getOneCategoryData());</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;parent_id&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> categoryService.getOne(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 判断2级分类是否已经存在</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Category <span class="title function_">isExistTwoCategory</span><span class="params">(CategoryData categoryData, String pid)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;Category&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;title&quot;</span>, categoryData.getTwoCategoryData());</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;parent_id&quot;</span>, pid);</span><br><span class="line">        <span class="keyword">return</span> categoryService.getOne(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 所有的数据读取完毕之后会自动调用</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;上传分类 excel 解析完毕！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上主要的业务就是先看看数据库存不存在当前的分类有就不添加没有就添加，核心的方法为如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024844384-230135189.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404024844384-230135189.png" alt="img"></a></p><p>然后启动工程发现出现了循环依赖注入的问题</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030552555-970742108.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030552555-970742108.png" alt="img"></a></p><p>为啥会出现这个问题呢，可参考：<a href="https://mrbird.cc/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Spring%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96.html">https://mrbird.cc/深入理解Spring循环依赖.html</a></p><p>修改所有注入的地方都改为 <code>@Resource</code> 的方式即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030844663-1177676833.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030844663-1177676833.png" alt="img"></a></p><p>启动工程上传模板发现，报错了，模板的内容如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030929331-1637717227.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030929331-1637717227.png" alt="img"></a></p><p>很明显就是我们少添加了自动填充的实体类配置</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030955770-1032999254.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404030955770-1032999254.png" alt="img"></a></p><p>修改实体类如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404031108927-159556836.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404031108927-159556836.png" alt="img"></a></p><p>然后在修改我们之前的分类 Controller 因为少加了一些内容加的内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404031349351-1786650127.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404031349351-1786650127.png" alt="img"></a></p><p>再次重启测试效果如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404032217663-680765931.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404032217663-680765931.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404032231497-1388475649.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404032231497-1388475649.png" alt="img"></a></p><h2 id="22-分类管理-前端上传接口调试"><a href="#22-分类管理-前端上传接口调试" class="headerlink" title="22-分类管理-前端上传接口调试"></a>22-分类管理-前端上传接口调试</h2><p>首先添加两个事件的回调方法一个是上传成功的，另一个是上传失败的，分别如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113421285-576271899.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113421285-576271899.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113851157-1520704830.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113851157-1520704830.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">submitUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">upload</span>.<span class="title function_">submit</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">btnDisabled</span> = <span class="literal">true</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">uploadSuccess</span>(<span class="params">response</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳转到列表页</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/category/list&#x27;</span>&#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">uploadError</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;上传失败！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 data 中添加需要的变量等信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113911276-1288197442.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404113911276-1288197442.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">btnDisabled</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">loading</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">BASE_API</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>给上传服务器按钮添加加载效果如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404114007756-169322140.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404114007756-169322140.png" alt="img"></a></p><p>上传服务器的地址绑定属性值的时候需要注意如下图所示的地方要使用 <code>:</code> 来绑定</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404114052257-144367432.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404114052257-144367432.png" alt="img"></a></p><p>下载模板功能我就不做了，我在这里说一下大概怎么做吧，就是你把模板上传到服务器当中拿到下载地址然后放在对应的 a 标签中即可完成下载</p><h2 id="23-分类管理-分类列表"><a href="#23-分类管理-分类列表" class="headerlink" title="23-分类管理-分类列表"></a>23-分类管理-分类列表</h2><p>添加 <code>el-tree</code> 组件到 <code>list.vue</code> 当中，当然你可以直接复制我下方的整体代码</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115130131-959833215.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115130131-959833215.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;filterText&quot; placeholder=&quot;Filter keyword&quot; style=&quot;margin-bottom:30px;&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-tree</span><br><span class="line">      ref=&quot;tree2&quot;</span><br><span class="line">      :data=&quot;data2&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :filter-node-method=&quot;filterNode&quot;</span><br><span class="line">      class=&quot;filter-tree&quot;</span><br><span class="line">      default-expand-all</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;list&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      filterText: &#x27;&#x27;,</span><br><span class="line">      data2: [&#123;</span><br><span class="line">        id: 1,</span><br><span class="line">        label: &#x27;Level one 1&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          id: 4,</span><br><span class="line">          label: &#x27;Level two 1-1&#x27;,</span><br><span class="line">          children: [&#123;</span><br><span class="line">            id: 9,</span><br><span class="line">            label: &#x27;Level three 1-1-1&#x27;</span><br><span class="line">          &#125;, &#123;</span><br><span class="line">            id: 10,</span><br><span class="line">            label: &#x27;Level three 1-1-2&#x27;</span><br><span class="line">          &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        id: 2,</span><br><span class="line">        label: &#x27;Level one 2&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          id: 5,</span><br><span class="line">          label: &#x27;Level two 2-1&#x27;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: 6,</span><br><span class="line">          label: &#x27;Level two 2-2&#x27;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        id: 3,</span><br><span class="line">        label: &#x27;Level one 3&#x27;,</span><br><span class="line">        children: [&#123;</span><br><span class="line">          id: 7,</span><br><span class="line">          label: &#x27;Level two 3-1&#x27;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">          id: 8,</span><br><span class="line">          label: &#x27;Level two 3-2&#x27;</span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;label&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    filterText(val) &#123;</span><br><span class="line">      this.$refs.tree2.filter(val)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    filterNode(value, data) &#123;</span><br><span class="line">      if (!value) return true</span><br><span class="line">      return data.label.indexOf(value) !== -1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>现在去编写后端接口，封装好对应的模型数据返回，渲染即可，在服务器端建立模型</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115453358-1794481027.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115453358-1794481027.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/4 11:53</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 分类管理列表树形数据类模型</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LevelCategory</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> List&lt;LevelCategory&gt; children = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 Controller 处理请求及业务，Controller 层的内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115816444-1796993880.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404115816444-1796993880.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 获取分类列表树形结构</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getTreeCategory&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getTreeCategory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;list&quot;</span>, categoryService.getTreeCategory());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在实现类当中创建上图中报错的那个方法如下，首先在接口当中添加方法修改 <code>CategoryService.java</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404120021739-1439278241.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404120021739-1439278241.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 获取分类列表树形结构</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 树形结构分类Data</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;LevelCategory&gt; <span class="title function_">getTreeCategory</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>紧接着就是编写实现类</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404120559369-1037456708.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404120559369-1037456708.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;LevelCategory&gt; <span class="title function_">getTreeCategory</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 1.读取1级分类</span></span><br><span class="line">    QueryWrapper&lt;Category&gt; oneQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    oneQueryWrapper.eq(<span class="string">&quot;parent_id&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    List&lt;Category&gt; oneCategories = baseMapper.selectList(oneQueryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.读取2级分类</span></span><br><span class="line">    QueryWrapper&lt;Category&gt; twoQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    twoQueryWrapper.ne(<span class="string">&quot;parent_id&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    List&lt;Category&gt; twoCategories = baseMapper.selectList(twoQueryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 封装模型数据</span></span><br><span class="line">    List&lt;LevelCategory&gt; resultData = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    oneCategories.forEach(oneCategory -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把Category转成LevelCategory</span></span><br><span class="line">        <span class="type">LevelCategory</span> <span class="variable">oneLevelCategory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LevelCategory</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 属性的复制</span></span><br><span class="line">        <span class="comment">// 把前一个对象当中的属性值复制到后一个对象当中相同的属性中去</span></span><br><span class="line">        <span class="comment">// 如果前一个对象在后一个对象当中没有找到相同的属性,就不复制</span></span><br><span class="line">        BeanUtils.copyProperties(oneCategory, oneLevelCategory);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取当前子分类有哪些</span></span><br><span class="line">        <span class="comment">// 遍历所有的二级分类</span></span><br><span class="line">        twoCategories.forEach(twoCategory -&gt; &#123;</span><br><span class="line">            <span class="comment">// 二级分类的parent_id=一级分类的id,就是当前一级分类,的子级</span></span><br><span class="line">            <span class="keyword">if</span> (twoCategory.getParentId().equals(oneCategory.getId())) &#123;</span><br><span class="line">                <span class="type">LevelCategory</span> <span class="variable">twoLevelCategory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">LevelCategory</span>();</span><br><span class="line"></span><br><span class="line">                BeanUtils.copyProperties(twoCategory, twoLevelCategory);</span><br><span class="line"></span><br><span class="line">                oneLevelCategory.getChildren().add(twoLevelCategory);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        resultData.add(oneLevelCategory);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resultData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果的业务我在代码当中写了注释，大致意思就是把一级二级都查询出来，先遍历一级，转换一级，然后在遍历二级看一下二级的父Id，是否等于一级是的话就是子分类，添加到 Children 当中，重启工程测试接口，效果如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404121014968-1602506538.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404121014968-1602506538.png" alt="img"></a></p><h2 id="24-分类管理-前端列表请求展示渲染"><a href="#24-分类管理-前端列表请求展示渲染" class="headerlink" title="24-分类管理-前端列表请求展示渲染"></a>24-分类管理-前端列表请求展示渲染</h2><p>编写请求接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404122722566-1882535999.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404122722566-1882535999.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 1.获取分类数据</span></span><br><span class="line">  <span class="title function_">getCategoryData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/category/getTreeCategory`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在列表页，导入请求，然后在调用请求 Api 拿到分类树形结构数据渲染</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404123745961-1095305823.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404123745961-1095305823.png" alt="img"></a></p><p>因为我们后台给的是 <code>title</code> 而且 el-tree 默认的是 lable 需要改下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404123913006-836559192.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210404123913006-836559192.png" alt="img"></a></p><p>最终的代码如下，参考自己写也行，复制也可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;filterText&quot; placeholder=&quot;Filter keyword&quot; style=&quot;margin-bottom:30px;&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;el-tree</span><br><span class="line">      ref=&quot;tree&quot;</span><br><span class="line">      :data=&quot;list&quot;</span><br><span class="line">      :props=&quot;defaultProps&quot;</span><br><span class="line">      :filter-node-method=&quot;filterNode&quot;</span><br><span class="line">      class=&quot;filter-tree&quot;</span><br><span class="line">      default-expand-all</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import category from &#x27;@/api/video/category/category&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;list&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      filterText: &#x27;&#x27;,</span><br><span class="line">      list: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;title&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    filterText(val) &#123;</span><br><span class="line">      this.$refs.tree.filter(val)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    filterNode(value, data) &#123;</span><br><span class="line">      if (!value) return true</span><br><span class="line">      return data.title.indexOf(value) !== -1</span><br><span class="line">    &#125;,</span><br><span class="line">    getTreeCategory() &#123;</span><br><span class="line">      category.getCategoryData().then(res =&gt; &#123;</span><br><span class="line">        this.list = res.data.list;</span><br><span class="line">      &#125;).catch(error =&gt; &#123;</span><br><span class="line">        this.$message.error(&quot;服务器繁忙！&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    // 一进入页面就加载分类列表数据</span><br><span class="line">    this.getTreeCategory();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="25-作品管理-创建数据库表以及表之间的关系"><a href="#25-作品管理-创建数据库表以及表之间的关系" class="headerlink" title="25-作品管理-创建数据库表以及表之间的关系"></a>25-作品管理-创建数据库表以及表之间的关系</h2><h3 id="作品表"><a href="#作品表" class="headerlink" title="作品表"></a>作品表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `video_content` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;作品ID&#x27;,</span><br><span class="line">  `author_id` char(19) NOT NULL COMMENT &#x27;作者ID&#x27;,</span><br><span class="line">  `category_id` char(19) NOT NULL COMMENT &#x27;分类ID&#x27;,</span><br><span class="line">  `category_parent_id` char(19) NOT NULL COMMENT &#x27;分类父级ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;作品标题&#x27;,</span><br><span class="line">  `price` decimal(10,2) unsigned NOT NULL DEFAULT &#x27;0.00&#x27; COMMENT &#x27;价格，设置为0则可免费观看&#x27;,</span><br><span class="line">  `conntent_num` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;作品个数&#x27;,</span><br><span class="line">  `cover` varchar(255) CHARACTER SET utf8 NOT NULL COMMENT &#x27;作品&#x27;,</span><br><span class="line">  `buy_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;销售数量&#x27;,</span><br><span class="line">  `view_count` bigint(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;浏览数量&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `status` varchar(10) NOT NULL DEFAULT &#x27;Draft&#x27; COMMENT &#x27;课程状态 Draft未发布  Normal已发布&#x27;,</span><br><span class="line">  `is_deleted` tinyint(3) DEFAULT NULL COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_title` (`title`),</span><br><span class="line">  KEY `idx_category_id` (`category_id`),</span><br><span class="line">  KEY `idx_author_id` (`author_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;作品表&#x27;;</span><br></pre></td></tr></table></figure><h3 id="作品简介表"><a href="#作品简介表" class="headerlink" title="作品简介表"></a>作品简介表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `video_content_description` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;作品ID&#x27;,</span><br><span class="line">  `description` text COMMENT &#x27;作品简介&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=&#x27;作品简介&#x27;;</span><br></pre></td></tr></table></figure><h3 id="作品视频表"><a href="#作品视频表" class="headerlink" title="作品视频表"></a>作品视频表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `video_content_video` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;视频ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;作品ID&#x27;,</span><br><span class="line">  `chapter_id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;节点名称&#x27;,</span><br><span class="line">  `video_source_id` varchar(100) DEFAULT NULL COMMENT &#x27;云端视频资源&#x27;,</span><br><span class="line">  `video_original_name` varchar(100) DEFAULT NULL COMMENT &#x27;原始文件名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序字段&#x27;,</span><br><span class="line">  `play_count` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;播放次数&#x27;,</span><br><span class="line">  `is_free` tinyint(1) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;是否可以试听：0收费 1免费&#x27;,</span><br><span class="line">  `duration` float NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频时长（秒）&#x27;,</span><br><span class="line">  `status` varchar(20) NOT NULL DEFAULT &#x27;Empty&#x27; COMMENT &#x27;Empty未上传 Transcoding转码中  Normal正常&#x27;,</span><br><span class="line">  `size` bigint(20) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;视频源文件大小（字节）&#x27;,</span><br><span class="line">  `version` bigint(20) unsigned NOT NULL DEFAULT &#x27;1&#x27; COMMENT &#x27;乐观锁&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`),</span><br><span class="line">  KEY `idx_chapter_id` (`chapter_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;作品视频&#x27;;</span><br></pre></td></tr></table></figure><h3 id="作品章节表"><a href="#作品章节表" class="headerlink" title="作品章节表"></a>作品章节表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `video_chapter` (</span><br><span class="line">  `id` char(19) NOT NULL COMMENT &#x27;章节ID&#x27;,</span><br><span class="line">  `course_id` char(19) NOT NULL COMMENT &#x27;作品ID&#x27;,</span><br><span class="line">  `title` varchar(50) NOT NULL COMMENT &#x27;章节名称&#x27;,</span><br><span class="line">  `sort` int(10) unsigned NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;显示排序&#x27;,</span><br><span class="line">  `gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">  `gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  KEY `idx_course_id` (`course_id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPACT COMMENT=&#x27;作品章节&#x27;;</span><br></pre></td></tr></table></figure><h3 id="表之间的关系"><a href="#表之间的关系" class="headerlink" title="表之间的关系"></a>表之间的关系</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408231722178-156423389.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408231722178-156423389.png" alt="img"></a></p><h2 id="26-作品管理-作品信息管理"><a href="#26-作品管理-作品信息管理" class="headerlink" title="26-作品管理-作品信息管理"></a>26-作品管理-作品信息管理</h2><h3 id="Mp-生成表对应层级代码"><a href="#Mp-生成表对应层级代码" class="headerlink" title="Mp 生成表对应层级代码"></a>Mp 生成表对应层级代码</h3><p>修改 <code>CodeGeneratorTest.java</code> 复制出一个全新的测试方式，就是用来存储上一个章节中新建的表，如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408233140556-1004237063.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408233140556-1004237063.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGeneratorTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">generate_video_author</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_video\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成 service 层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_video&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;video_author&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略,驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;video_&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">generate_video_category</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_video\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成 service 层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_video&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;video_category&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略,驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;video_&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">generate_video_chapter_video_content_video_content_description_video_content_video</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_video\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成 service 层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_video&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;video_chapter&quot;</span>, <span class="string">&quot;video_content&quot;</span>, <span class="string">&quot;video_content_description&quot;</span>, <span class="string">&quot;video_content_video&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略,驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;video_&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接拷贝我的即可，你也可以自行修改，供参考</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408233426598-750221031.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408233426598-750221031.png" alt="img"></a></p><h3 id="编写后端"><a href="#编写后端" class="headerlink" title="编写后端"></a>编写后端</h3><p><strong>保存基本信息, 接收请求</strong>, 在接收之前首先先添加一个 VO 实体，实体代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二级分类ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String categoryId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一级分类ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String categoryParentId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String authorId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 总视频数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer contentNum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 简介</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408234514690-1922461105.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408234514690-1922461105.png" alt="img"></a></p><p>紧接着修改 <code>ContentController</code> 内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品表 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/content&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;作品组&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ContentService contentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/addContentInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">addContentInfo</span><span class="params">(ContentVO contentVO)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用contentService处理添加作品信息业务</span></span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;contentId&quot;</span>, contentService.saveContentInfo(contentVO));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408234718722-1354751802.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210408234718722-1354751802.png" alt="img"></a></p><p>在对应的接口当中添加对应的方法如下不贴图了，不重要的部分</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品表 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ContentService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Content&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 保存基本信息</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentVO 基本信息实体VO</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 添加之后生成的ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">saveContentInfo</span><span class="params">(ContentVO contentVO)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现业务方法，分为两步，一，先保存基本信息，获取自增ID后再保存简介设置简介ID为刚刚自增之后得到的ID入库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品表 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ContentMapper, Content&gt; <span class="keyword">implements</span> <span class="title class_">ContentService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注入简介的业务 保存简介</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ContentDescriptionService contentDescriptionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">saveContentInfo</span><span class="params">(ContentVO contentVO)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.保存基本信息</span></span><br><span class="line">        <span class="type">Content</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Content</span>();</span><br><span class="line">        BeanUtils.copyProperties(contentVO, content);</span><br><span class="line">        <span class="comment">// 1.1.保存到数据当中</span></span><br><span class="line">        baseMapper.insert(content);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.保存简介</span></span><br><span class="line">        <span class="comment">// 2.1.获取刚保存基本信息的id,之后再设置自己的简介id</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">id</span> <span class="operator">=</span> content.getId();</span><br><span class="line">        <span class="type">ContentDescription</span> <span class="variable">contentDescription</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentDescription</span>();</span><br><span class="line">        contentDescription.setId(id);</span><br><span class="line">        contentDescription.setDescription(contentVO.getDescription());</span><br><span class="line">        contentDescriptionService.save(contentDescription);</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>基本信息修改，后端接口</strong>，获取一条数据，ContentController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 根据ID获取一条作品简介信息数据</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getContentWithInfoId/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getContentWithInfoId</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;contentVO&quot;</span>, contentService.getContentWithInfoId(id));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 根据ID获取一条作品简介信息数据</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 作品简介信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ContentVO <span class="title function_">getContentWithInfoId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ContentVO <span class="title function_">getContentWithInfoId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">ContentVO</span> <span class="variable">contentVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVO</span>();</span><br><span class="line">    <span class="comment">// 查询基本信息</span></span><br><span class="line">    <span class="type">Content</span> <span class="variable">content</span> <span class="operator">=</span> baseMapper.selectById(id);</span><br><span class="line">    BeanUtils.copyProperties(content, contentVO);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询简介信息</span></span><br><span class="line">    <span class="type">ContentDescription</span> <span class="variable">description</span> <span class="operator">=</span> contentDescriptionService.getById(id);</span><br><span class="line">    contentVO.setDescription(description.getDescription());</span><br><span class="line">    <span class="keyword">return</span> contentVO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加，修改作品基本信息接口，修改 ContentController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 修改作品基本信息</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;updateContentInfo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">updateContentInfo</span><span class="params">(<span class="meta">@RequestBody</span> ContentVO contentVO)</span> &#123;</span><br><span class="line">    contentService.updateContentInfo(contentVO);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 修改作品基本信息</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentVO 基本信息VO实体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateContentInfo</span><span class="params">(ContentVO contentVO)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateContentInfo</span><span class="params">(ContentVO contentVO)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.修改基本信息</span></span><br><span class="line">    <span class="type">Content</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Content</span>();</span><br><span class="line">    BeanUtils.copyProperties(contentVO, content);</span><br><span class="line">    baseMapper.updateById(content);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.修改描述信息</span></span><br><span class="line">    <span class="type">ContentDescription</span> <span class="variable">contentDescription</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentDescription</span>();</span><br><span class="line">    contentDescription.setId(content.getId());</span><br><span class="line">    contentDescription.setDescription(contentVO.getDescription());</span><br><span class="line">    contentDescriptionService.updateById(contentDescription);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="27-作品管理-作品信息管理-前端"><a href="#27-作品管理-作品信息管理-前端" class="headerlink" title="27-作品管理-作品信息管理(前端)"></a>27-作品管理-作品信息管理(前端)</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><h4 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h4><p>首先是基础路由</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224127210-261586653.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224127210-261586653.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/content&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&#x27;/content/list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;作品管理&#x27;</span>,</span><br><span class="line">  <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;作品管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;el-icon-s-help&#x27;</span> &#125;,</span><br><span class="line">  <span class="attr">children</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;list&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;作品列表&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/content/list&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;作品列表&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;table&#x27;</span> &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;添加作品&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/content/info&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;添加作品&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>添加切换路由</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224315659-1989134445.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224315659-1989134445.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;info/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;添加作品&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/content/info&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;添加作品&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;chapter/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;章节信息&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/content/chapter&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;章节信息&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;send/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;最终发布&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/content/send&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;最终发布&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上的路由的配置主要是用来进行组件之间切换的时候使用的，自行把对应的组件新建好，如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224526330-1153963824.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409224526330-1153963824.png" alt="img"></a></p><p>到了这里，可以自行的把前端跑起来看一下</p><h4 id="编写添加界面"><a href="#编写添加界面" class="headerlink" title="编写添加界面"></a>编写添加界面</h4><p><strong>info</strong>，基础界面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;添加作品&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;1&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label-width=&quot;作品标题&quot;&gt;</span><br><span class="line">        &lt;el-input placeholder=&quot;请填写作品标题&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;next&quot;&gt;下一步&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;info&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      active: 0</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    next() &#123;</span><br><span class="line">      // 路由跳转</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/content/chapter/1&#x27;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>chapter</strong>，基础界面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;章节信息&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;2&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;h1&gt;章节信息&lt;/h1&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;pre&quot;&gt;上一步&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;next&quot;&gt;下一步&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;chapter&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      active: 0</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    pre() &#123;</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/content/info/1&#x27;&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    next() &#123;</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/content/send/1&#x27;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>send</strong>，基础界面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;最终发布&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;3&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;pre&quot;&gt;上一步&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot;&gt;发布&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;send&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      active: 0</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    pre() &#123;</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/content/chapter/1&#x27;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="组件之间的跳转"><a href="#组件之间的跳转" class="headerlink" title="组件之间的跳转"></a>组件之间的跳转</h4><p>基本信息保存下一步，首先来新建一个编写 api 请求的文件如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409231735545-787268337.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409231735545-787268337.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 1.作者列表-分页查询</span></span><br><span class="line">  <span class="title function_">getAuthorList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/author/getAuthorList`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 2.添加作品信息</span></span><br><span class="line">  <span class="title function_">addContentInfo</span>(<span class="params">contentVO</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/content/addContentInfo`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: contentVO</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409232207701-1640173926.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409232207701-1640173926.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">saveAndNext</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">addContentInfo</span>(<span class="variable language_">this</span>.<span class="property">contentVO</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//路由跳转</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/chapter/&#x27;</span> + res.<span class="property">data</span>.<span class="property">contentId</span>&#125;)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;添加失败&quot;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发布作品界面模型绑定</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409233025505-700989454.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409233025505-700989454.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">active</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">contentVO</span>: &#123;</span><br><span class="line">      <span class="comment">// 标题</span></span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 二级分类ID</span></span><br><span class="line">      <span class="attr">categoryId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 一级分类ID</span></span><br><span class="line">      <span class="attr">categoryParentId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 作者id</span></span><br><span class="line">      <span class="attr">authorId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 总视频数</span></span><br><span class="line">      <span class="attr">contentNum</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 简介</span></span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 封面</span></span><br><span class="line">      <span class="attr">cover</span>: <span class="built_in">require</span>(<span class="string">&#x27;@/assets/images/cover.jpg&#x27;</span>),</span><br><span class="line">      <span class="attr">price</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 作者列表</span></span><br><span class="line">    <span class="attr">authorList</span>: [],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一级分类列表</span></span><br><span class="line">    <span class="attr">oneCategoryList</span>: [],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二级分类列表</span></span><br><span class="line">    <span class="attr">twoCategoryList</span>: [],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求API地址</span></span><br><span class="line">    <span class="attr">BASE_API</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>你也可以自己使用自己喜欢的素材图片，当然了我这里给出我文章中的素材占位图片下载地址：<a href="https://wws.lanzous.com/i5lrvnv53eb">https://wws.lanzous.com/i5lrvnv53eb</a></p><p>界面绑定模型数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409232939005-1407593310.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409232939005-1407593310.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;添加作品&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;1&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot; style=&quot;margin-top: 10px&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      标题</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品标题&quot;&gt;</span><br><span class="line">        &lt;el-input placeholder=&quot;请填写作品标题&quot; v-model=&quot;contentVO.title&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      分类</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品分类&quot;&gt;</span><br><span class="line">        &lt;el-select placeholder=&quot;一级分类&quot; v-model=&quot;contentVO.categoryParentId&quot; @change=&quot;oneCategoryChanged&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;oneCategory in oneCategoryList&quot;</span><br><span class="line">                     :key=&quot;oneCategory.id&quot;</span><br><span class="line">                     :label=&quot;oneCategory.title&quot;</span><br><span class="line">                     :value=&quot;oneCategory.id&quot;/&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        &lt;el-select placeholder=&quot;二级分类&quot; v-model=&quot;contentVO.categoryId&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;oneCategory in twoCategoryList&quot;</span><br><span class="line">                     :key=&quot;oneCategory.id&quot;</span><br><span class="line">                     :label=&quot;oneCategory.title&quot;</span><br><span class="line">                     :value=&quot;oneCategory.id&quot;/&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      作者</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作者&quot;&gt;</span><br><span class="line">        &lt;el-select placeholder=&quot;选择作者&quot; v-model=&quot;contentVO.authorID&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;author in authorList&quot;</span><br><span class="line">                     :key=&quot;author.id&quot;</span><br><span class="line">                     :label=&quot;author.name&quot;</span><br><span class="line">                     :value=&quot;author.id&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      总视频数</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;总视频数&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;总视频数&quot; v-model=&quot;contentVO.contentNum&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      简介</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品简介&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;简介&quot; v-model=&quot;contentVO.description&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      封面</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品封面&quot;&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">          :show-file-list=&quot;false&quot;</span><br><span class="line">          :action=&quot;BASE_API+&#x27;/service_upload/file/ossUploadFile&#x27;&quot;</span><br><span class="line">          :on-success=&quot;uploadSuccess&quot;</span><br><span class="line">          :limit=&quot;1&quot;</span><br><span class="line">          name=&quot;file&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;img :src=&quot;contentVO.cover&quot; style=&quot;width: 300px; height: 150px&quot;/&gt;</span><br><span class="line">        &lt;/el-upload&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      价格</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;价格&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;价格&quot; v-model=&quot;contentVO.price&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-button style=&quot;margin-top: 12px;&quot; type=&quot;primary&quot; @click=&quot;saveAndNext&quot;&gt;基本信息保存下一步&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>在点击按钮之前还需要处理一下后台(等待后续所有的准备都做好了在点击进行测试按照如下步骤走)，作品ID不能让其自动生成 ，要自己手动设置需要设置成 <code>input</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409234429002-1169038737.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409234429002-1169038737.png" alt="img"></a></p><p>紧接着修改一下作品表的实体类，对创建时间和更新时间，逻辑删除字段进行处理如下, 当然如上图中的作品简介的也是同理，后面所有生成的实体类当中都应该设置自动填充属性，至于逻辑删除我在一一强调即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409234901495-1756112629.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409234901495-1756112629.png" alt="img"></a></p><p>处理下拉列表数据，首先导入对应需要使用到的 api 文件如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409235503694-556540211.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210409235503694-556540211.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> content <span class="keyword">from</span> <span class="string">&quot;@/api/video/content/content&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> category <span class="keyword">from</span> <span class="string">&quot;@/api/video/category/category&quot;</span>;</span><br></pre></td></tr></table></figure><p>在这里我说明一个东西，那么就是关于 <code>el-steps</code> 组件的问题，我这里是单独的新建了三个不同的组件进行的是组件之间的跳转，并不是 <code>el-steps</code> 的跳转，所以每个页面的 <code>el-steps</code> 状态值都是固定写死了，例如下图中的状态</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410001914550-720743373.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410001914550-720743373.png" alt="img"></a></p><p>作者列表</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103522009-753850872.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103522009-753850872.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载所有的作者下拉列表</span></span><br><span class="line"><span class="title function_">getAuthorList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">getAuthorList</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">authorList</span> = res.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;系统繁忙！&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 加载所有的作者下拉列表</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改一下后端加载所有创作者列表的接口，返回值不是我们需要的，因为是在写 ResponseResult 之前写的，所以没有改造为这种形式需要改造一下如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103732999-1388979583.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103732999-1388979583.png" alt="img"></a></p><p>渲染创作者下拉列表</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103820511-613472604.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410103820511-613472604.png" alt="img"></a></p><p>分类列表</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104037402-893256388.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104037402-893256388.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载所有的分类</span></span><br><span class="line"><span class="title function_">getCategoryList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 1.获取一级分类</span></span><br><span class="line">  category.<span class="title function_">getCategoryData</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">oneCategoryList</span> = res.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;系统繁忙！&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>实现当一级分类发生改变时的监听事件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104139235-1856526447.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104139235-1856526447.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当一级分类改变时调用的方法，参数：当前选择的一级分类ID</span></span><br><span class="line"><span class="title function_">oneCategoryChanged</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> category = <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>[i];</span><br><span class="line">    <span class="keyword">if</span> (value === category.<span class="property">id</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">twoCategoryList</span> = category.<span class="property">children</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 清空已经选择的二级分类列表</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contentVO</span>.<span class="property">categoryId</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>渲染分类数据方式如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104326193-1197684777.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104326193-1197684777.png" alt="img"></a></p><p>完善上传封面功能，OSS上传接口在之前就已经写好了调用一下即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104434009-1264321919.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104434009-1264321919.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">封面</span><br><span class="line">--&gt;</span><br><span class="line">&lt;el-form-item label=&quot;作品封面&quot;&gt;</span><br><span class="line">  &lt;el-upload</span><br><span class="line">    :show-file-list=&quot;false&quot;</span><br><span class="line">    :action=&quot;BASE_API+&#x27;/service_upload/file/uploadOssFile&#x27;&quot;</span><br><span class="line">    :on-success=&quot;uploadSuccess&quot;</span><br><span class="line">    :limit=&quot;1&quot;</span><br><span class="line">    name=&quot;file&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;img :src=&quot;contentVO.cover&quot; style=&quot;width: 300px; height: 150px&quot;/&gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104451020-1293549236.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410104451020-1293549236.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">uploadSuccess</span>(<span class="params">res, file</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVO</span>.<span class="property">cover</span> = res.<span class="property">data</span>.<span class="property">url</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里添加的准备都已经完成了，还需要修改一下后端的添加接口，因为是 POST 请求，而参数又是一个对象我少加了一个 <code>@RequestBody</code> 注解如下图自行加上之后在测试添加即可，填写对应的信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410105013460-876477508.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410105013460-876477508.png" alt="img"></a></p><p>可以看到我这里已经成功了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410105054146-1301078293.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410105054146-1301078293.png" alt="img"></a></p><h3 id="基本信息修改"><a href="#基本信息修改" class="headerlink" title="基本信息修改"></a>基本信息修改</h3><p>数据回显，首先在 data 中声明一个 <code>contentId</code> 属性如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410112031224-1728063425.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410112031224-1728063425.png" alt="img"></a></p><p>然后在 <code>created</code> 处于loading结束后，还做一些初始化，实现函数自执行（data 数据已经初始化，但是 DOM 结构渲染完成，组件没有加载）中做数据回显</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122410954-1687948060.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122410954-1687948060.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 思路为：判断路由当中有没有ID，如果有，就是修改，做数据回显</span></span><br><span class="line">  <span class="comment">// 获取路由当中的ID</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentId</span> = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据ID查询当前的作品，进行信息回显</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getInfo</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 加载所有的作者下拉列表</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">    <span class="comment">// 加载所有的分类</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getCategoryList</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改一下模型绑定的创作者 ID，将ID 改为 Id</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122539985-1478603417.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122539985-1478603417.png" alt="img"></a></p><p>根据ID查询当前的作品，进行信息回显, <code>this.getInfo();</code> 内容如下</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据id获取作品信息</span></span><br><span class="line"><span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">getContentWithInfoId</span>(<span class="variable language_">this</span>.<span class="property">contentId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVO</span> = res.<span class="property">data</span>.<span class="property">contentVO</span>;</span><br><span class="line">    <span class="comment">// 1.获取一级分类</span></span><br><span class="line">    category.<span class="title function_">getCategoryData</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">oneCategoryList</span> = res.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 遍历每一个一级分类 , 判断当前的contentVO 是属于哪一个一级分类</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> oneCategory = <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>[i];</span><br><span class="line">        <span class="keyword">if</span> (oneCategory.<span class="property">id</span> === <span class="variable language_">this</span>.<span class="property">contentVO</span>.<span class="property">categoryParentId</span>) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">twoCategoryList</span> = oneCategory.<span class="property">children</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//加载作者列表</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getAuthorList</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>紧接着修改 saveAndNext 主要就是判断有 ID 就是更新没有就是添加的操作</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122720129-1030123189.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122720129-1030123189.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">saveAndNext</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 判断当前是添加还是更新</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">contentId</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    content.<span class="title function_">addContentInfo</span>(<span class="variable language_">this</span>.<span class="property">contentVO</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">//路由跳转</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/chapter/&#x27;</span> + res.<span class="property">data</span>.<span class="property">contentId</span>&#125;)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;添加失败&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 更新操作</span></span><br><span class="line">    content.<span class="title function_">updateContentInfo</span>(<span class="variable language_">this</span>.<span class="property">contentVO</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 路由跳转跳转到章节</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/chapter/&#x27;</span> + <span class="variable language_">this</span>.<span class="property">contentId</span>&#125;)</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;更新失败&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>最终 <code>info.vue</code> 代码如下所示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;添加作品&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;1&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;el-form label-width=&quot;120px&quot; style=&quot;margin-top: 10px&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      标题</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品标题&quot;&gt;</span><br><span class="line">        &lt;el-input placeholder=&quot;请填写作品标题&quot; v-model=&quot;contentVO.title&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      分类</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品分类&quot;&gt;</span><br><span class="line">        &lt;el-select placeholder=&quot;一级分类&quot; v-model=&quot;contentVO.categoryParentId&quot; @change=&quot;oneCategoryChanged&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;oneCategory in oneCategoryList&quot;</span><br><span class="line">                     :key=&quot;oneCategory.id&quot;</span><br><span class="line">                     :label=&quot;oneCategory.title&quot;</span><br><span class="line">                     :value=&quot;oneCategory.id&quot;/&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">        &amp;nbsp;</span><br><span class="line">        &lt;el-select placeholder=&quot;二级分类&quot; v-model=&quot;contentVO.categoryId&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;oneCategory in twoCategoryList&quot;</span><br><span class="line">                     :key=&quot;oneCategory.id&quot;</span><br><span class="line">                     :label=&quot;oneCategory.title&quot;</span><br><span class="line">                     :value=&quot;oneCategory.id&quot;/&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      作者</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作者&quot;&gt;</span><br><span class="line">        &lt;el-select placeholder=&quot;选择作者&quot; v-model=&quot;contentVO.authorId&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;author in authorList&quot;</span><br><span class="line">                     :key=&quot;author.id&quot;</span><br><span class="line">                     :label=&quot;author.name&quot;</span><br><span class="line">                     :value=&quot;author.id&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      总视频数</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;总视频数&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;总视频数&quot; v-model=&quot;contentVO.contentNum&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      简介</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品简介&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;简介&quot; v-model=&quot;contentVO.description&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      封面</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;作品封面&quot;&gt;</span><br><span class="line">        &lt;el-upload</span><br><span class="line">          :show-file-list=&quot;false&quot;</span><br><span class="line">          :action=&quot;BASE_API+&#x27;/service_upload/file/uploadOssFile&#x27;&quot;</span><br><span class="line">          :on-success=&quot;uploadSuccess&quot;</span><br><span class="line">          :limit=&quot;1&quot;</span><br><span class="line">          name=&quot;file&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;img :src=&quot;contentVO.cover&quot; style=&quot;width: 300px; height: 150px&quot;/&gt;</span><br><span class="line">        &lt;/el-upload&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;!--</span><br><span class="line">      价格</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;价格&quot;&gt;</span><br><span class="line">        &lt;el-input :min=&quot;0&quot; placeholder=&quot;价格&quot; v-model=&quot;contentVO.price&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-button style=&quot;margin-top: 12px;&quot; type=&quot;primary&quot; @click=&quot;saveAndNext&quot;&gt;基本信息保存下一步&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import content from &quot;@/api/video/content/content&quot;;</span><br><span class="line">import category from &quot;@/api/video/category/category&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;info&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      contentVO: &#123;</span><br><span class="line">        // 标题</span><br><span class="line">        title: &#x27;&#x27;,</span><br><span class="line">        // 二级分类ID</span><br><span class="line">        categoryId: &#x27;&#x27;,</span><br><span class="line">        // 一级分类ID</span><br><span class="line">        categoryParentId: &#x27;&#x27;,</span><br><span class="line">        // 作者id</span><br><span class="line">        authorId: &#x27;&#x27;,</span><br><span class="line">        // 总视频数</span><br><span class="line">        contentNum: &#x27;&#x27;,</span><br><span class="line">        // 简介</span><br><span class="line">        description: &#x27;&#x27;,</span><br><span class="line">        // 封面</span><br><span class="line">        cover: require(&#x27;@/assets/images/cover.jpg&#x27;),</span><br><span class="line">        price: 0</span><br><span class="line">      &#125;,</span><br><span class="line">      // 作品的ID</span><br><span class="line">      contentId: &#x27;&#x27;,</span><br><span class="line">      // 作者列表</span><br><span class="line">      authorList: [],</span><br><span class="line"></span><br><span class="line">      // 一级分类列表</span><br><span class="line">      oneCategoryList: [],</span><br><span class="line"></span><br><span class="line">      // 二级分类列表</span><br><span class="line">      twoCategoryList: [],</span><br><span class="line"></span><br><span class="line">      // 请求API地址</span><br><span class="line">      BASE_API: process.env.VUE_APP_BASE_API</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    saveAndNext() &#123;</span><br><span class="line">      // 判断当前是添加还是更新</span><br><span class="line">      if (this.contentId === &#x27;&#x27;) &#123;</span><br><span class="line">        content.addContentInfo(this.contentVO).then(res =&gt; &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: res.message</span><br><span class="line">          &#125;);</span><br><span class="line">          //路由跳转</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/content/chapter/&#x27; + res.data.contentId&#125;)</span><br><span class="line">        &#125;).catch(error =&gt; &#123;</span><br><span class="line">          this.$message.error(&quot;添加失败&quot;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        // 更新操作</span><br><span class="line">        content.updateContentInfo(this.contentVO).then(res =&gt; &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: res.message</span><br><span class="line">          &#125;);</span><br><span class="line">          // 路由跳转跳转到章节</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/content/chapter/&#x27; + this.contentId&#125;)</span><br><span class="line">        &#125;).catch(error =&gt; &#123;</span><br><span class="line">          this.$message.error(&quot;更新失败&quot;);</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 加载所有的作者下拉列表</span><br><span class="line">    getAuthorList() &#123;</span><br><span class="line">      content.getAuthorList().then(res =&gt; &#123;</span><br><span class="line">        this.authorList = res.data.list;</span><br><span class="line">      &#125;).catch(error =&gt; &#123;</span><br><span class="line">        this.$message.error(&quot;系统繁忙！&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 加载所有的分类</span><br><span class="line">    getCategoryList() &#123;</span><br><span class="line">      // 1.获取一级分类</span><br><span class="line">      category.getCategoryData().then(res =&gt; &#123;</span><br><span class="line">        this.oneCategoryList = res.data.list;</span><br><span class="line">      &#125;).catch(error =&gt; &#123;</span><br><span class="line">        this.$message.error(&quot;系统繁忙！&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 当一级分类改变时调用的方法，参数：当前选择的一级分类ID</span><br><span class="line">    oneCategoryChanged(value) &#123;</span><br><span class="line">      for (let i = 0; i &lt; this.oneCategoryList.length; i++) &#123;</span><br><span class="line">        let category = this.oneCategoryList[i];</span><br><span class="line">        if (value === category.id) &#123;</span><br><span class="line">          this.twoCategoryList = category.children;</span><br><span class="line"></span><br><span class="line">          // 清空已经选择的二级分类列表</span><br><span class="line">          this.contentVO.categoryId = &#x27;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    uploadSuccess(res, file) &#123;</span><br><span class="line">      this.contentVO.cover = res.data.url;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 根据id获取作品信息</span><br><span class="line">    getInfo() &#123;</span><br><span class="line">      content.getContentWithInfoId(this.contentId).then(res =&gt; &#123;</span><br><span class="line">        this.contentVO = res.data.contentVO;</span><br><span class="line">        // 1.获取一级分类</span><br><span class="line">        category.getCategoryData().then(res =&gt; &#123;</span><br><span class="line">          this.oneCategoryList = res.data.list;</span><br><span class="line"></span><br><span class="line">          // 遍历每一个一级分类 , 判断当前的contentVO 是属于哪一个一级分类</span><br><span class="line">          for (let i = 0; i &lt; this.oneCategoryList.length; i++) &#123;</span><br><span class="line">            let oneCategory = this.oneCategoryList[i];</span><br><span class="line">            if (oneCategory.id === this.contentVO.categoryParentId) &#123;</span><br><span class="line">              this.twoCategoryList = oneCategory.children;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        //加载作者列表</span><br><span class="line">        this.getAuthorList();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    // 思路为：判断路由当中有没有ID，如果有，就是修改，做数据回显</span><br><span class="line">    // 获取路由当中的ID</span><br><span class="line">    if (this.$route.params &amp;&amp; this.$route.params.id) &#123;</span><br><span class="line">      this.contentId = this.$route.params.id;</span><br><span class="line"></span><br><span class="line">      // 根据ID查询当前的作品，进行信息回显</span><br><span class="line">      this.getInfo();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      // 加载所有的作者下拉列表</span><br><span class="line">      this.getAuthorList();</span><br><span class="line">      // 加载所有的分类</span><br><span class="line">      this.getCategoryList();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>紧接着就是修改 <code>content.js</code> 把对应的 api 请求方法加上</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122920555-932877033.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410122920555-932877033.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.根据id获取作品信息</span></span><br><span class="line"><span class="title function_">getContentWithInfoId</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/getContentWithInfoId/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 4.更新操作</span></span><br><span class="line"><span class="title function_">updateContentInfo</span>(<span class="params">contentVO</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/updateContentInfo`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: contentVO</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>紧接着后端还需要完善一些信息，内容分别如下，首先是配置逻辑删除的自动填充配置如下，修改 <code>common_base</code> 模块中的 <code>MyMetaObjectHandler</code> 如下所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123231761-397189292.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123231761-397189292.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123320888-1045056052.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123320888-1045056052.png" alt="img"></a></p><p>在添加逻辑删除，添加数据的时候自动填充注解如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123409907-971832218.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123409907-971832218.png" alt="img"></a></p><p>紧接着就是把数据库里面的字段修正，单词打错了，执行如下 ALTER 语句即可修正，修改完成之后自行测试即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123617566-1776841228.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410123617566-1776841228.png" alt="img"></a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `video_db`.`video_content` </span><br><span class="line">CHANGE <span class="keyword">COLUMN</span> `conntent_num` `content_num` <span class="type">int</span> UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;作品个数&#x27;</span> AFTER `price`;</span><br></pre></td></tr></table></figure><h2 id="28-作品管理-作品章节管理"><a href="#28-作品管理-作品章节管理" class="headerlink" title="28-作品管理-作品章节管理"></a>28-作品管理-作品章节管理</h2><h3 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410142852408-683921278.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410142852408-683921278.png" alt="img"></a></p><h3 id="章节列表"><a href="#章节列表" class="headerlink" title="章节列表"></a>章节列表</h3><h4 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h4><p>数据库模拟数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410143015918-203790135.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410143015918-203790135.png" alt="img"></a></p><p>自己去你自己的 <code>video_content</code> 表中找一个 <code>id</code> 然后替换一下我下方的SQL脚本中的ID，然后执行即可</p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`video_chapter` (`id`, `course_id`, `title`, `sort`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1380737860695597058&#x27;</span>, <span class="string">&#x27;第一章节&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;2021-04-10 14:31:58&#x27;</span>, <span class="string">&#x27;2021-04-10 14:32:01&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`video_chapter` (`id`, `course_id`, `title`, `sort`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1380737860695597058&#x27;</span>, <span class="string">&#x27;第二章节&#x27;</span>, <span class="number">0</span>, <span class="string">&#x27;2021-04-10 14:31:58&#x27;</span>, <span class="string">&#x27;2021-04-10 14:32:01&#x27;</span>);</span><br></pre></td></tr></table></figure><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`video_content_video` (`id`, `course_id`, `chapter_id`, `title`, `video_source_id`, `video_original_name`, `sort`, `play_count`, `is_free`, `duration`, `status`, `size`, `version`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1380737860695597058&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;第1小节&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;Empty&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;2021-04-10 14:33:03&#x27;</span>, <span class="string">&#x27;2021-04-10 14:33:05&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`video_content_video` (`id`, `course_id`, `chapter_id`, `title`, `video_source_id`, `video_original_name`, `sort`, `play_count`, `is_free`, `duration`, `status`, `size`, `version`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1380737860695597058&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;第2小节&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;Empty&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;2021-04-10 14:33:03&#x27;</span>, <span class="string">&#x27;2021-04-10 14:33:05&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`video_content_video` (`id`, `course_id`, `chapter_id`, `title`, `video_source_id`, `video_original_name`, `sort`, `play_count`, `is_free`, `duration`, `status`, `size`, `version`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1380737860695597058&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;第1小节&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;Empty&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;2021-04-10 14:33:03&#x27;</span>, <span class="string">&#x27;2021-04-10 14:33:05&#x27;</span>);</span><br></pre></td></tr></table></figure><p>定义对应的 VO 实体</p><p><strong>ContentVideoVO</strong></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/10 14:37</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 小节信息VO</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentVideoVO</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小节标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 小节是否免费</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean free;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ChapterVO</strong></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/10 14:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 作品章节VO，作品章节信息</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChapterVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 章节下的小节信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;ContentVideoVO&gt; children;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义查询嵌套章节与小节信息的数据结构接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410145005964-708102975.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410145005964-708102975.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 获取章节嵌套形式的数据结构列表</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentId 作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 章节小节嵌套形式的数据结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;ChapterVO&gt; <span class="title function_">getChapterSection</span><span class="params">(String contentId)</span>;</span><br></pre></td></tr></table></figure><p>完善嵌套章节与小节信息数据结构业务</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品章节 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChapterServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ChapterMapper, Chapter&gt; <span class="keyword">implements</span> <span class="title class_">ChapterService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ContentVideoService contentVideoService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;ChapterVO&gt; <span class="title function_">getChapterSection</span><span class="params">(String contentId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.根据课程id查询课程里面所有的章节(章节)</span></span><br><span class="line">        QueryWrapper&lt;Chapter&gt; chapterQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        chapterQueryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, contentId);</span><br><span class="line">        List&lt;Chapter&gt; chapterList = baseMapper.selectList(chapterQueryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.根据课程id查询课程里面所有的小节(小节)</span></span><br><span class="line">        QueryWrapper&lt;ContentVideo&gt; videoQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        videoQueryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, contentId);</span><br><span class="line">        List&lt;ContentVideo&gt; contentVideoList = contentVideoService.list(videoQueryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> chapterList.stream().map(m -&gt; &#123;</span><br><span class="line">            <span class="type">ChapterVO</span> <span class="variable">chapterVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChapterVO</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// chapter对象值复制到ChapterVo里面</span></span><br><span class="line">            <span class="type">ChapterVO</span> <span class="variable">chapterVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChapterVO</span>();</span><br><span class="line">            BeanUtils.copyProperties(m, chapterVo);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建集合，用于封装章节的小节</span></span><br><span class="line">            List&lt;ContentVideoVO&gt; subsectionList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 4.遍历查询小节list集合，进行封装</span></span><br><span class="line">            contentVideoList.forEach(a1 -&gt; &#123;</span><br><span class="line">                <span class="comment">// 判断：小节里面chapterId和章节里面id是否一样</span></span><br><span class="line">                <span class="keyword">if</span> (a1.getChapterId().equals(m.getId())) &#123;</span><br><span class="line">                    <span class="comment">// 进行封装</span></span><br><span class="line">                    <span class="type">ContentVideoVO</span> <span class="variable">videoVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideoVO</span>();</span><br><span class="line">                    BeanUtils.copyProperties(a1, videoVo);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 放到小节封装集合</span></span><br><span class="line">                    subsectionList.add(videoVo);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 把封装之后小节list集合，放到章节对象里面</span></span><br><span class="line">            chapterVo.setChildren(subsectionList);</span><br><span class="line">            <span class="keyword">return</span> chapterVO;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Controller 层代码如下</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品章节 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/chapter&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;作品章节组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChapterController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ChapterService chapterService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 获取章节嵌套形式的数据结构列表</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取章节嵌套形式的数据结构列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getChapterContentVideo/&#123;contentId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getChapterSection</span><span class="params">(<span class="meta">@PathVariable</span> String contentId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;items&quot;</span>, chapterService.getChapterSection(contentId));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h4><p>在 api 当中创建 <code>chapter.js</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410151215860-248440827.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410151215860-248440827.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> apiName = <span class="string">&#x27;/service_video/chapter&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">getNestedTreeList</span>(<span class="params">contentId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;apiName&#125;</span>/getChapterContentVideo/<span class="subst">$&#123;contentId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 chapter.vue 页面当中加载章节小节列表信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> chapter <span class="keyword">from</span> <span class="string">&#x27;@/api/video/content/chapter&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">active</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="comment">// 作品ID</span></span><br><span class="line">      <span class="attr">contentId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="comment">// 章节嵌套小节列表</span></span><br><span class="line">      <span class="attr">chapterNestedList</span>: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 获取路由当中的id</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span><br><span class="line">      <span class="comment">// 获取当前作品id</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">contentId</span> = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>;</span><br><span class="line">      <span class="comment">// 请求嵌套数据</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">getNestedTreeList</span>(<span class="params"></span>) &#123;</span><br><span class="line">      chapter.<span class="title function_">getNestedTreeList</span>(<span class="variable language_">this</span>.<span class="property">contentId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chapterNestedList</span> = response.<span class="property">data</span>.<span class="property">items</span>;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">pre</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/info/&#x27;</span> + <span class="variable language_">this</span>.<span class="property">contentId</span>&#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">next</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/send/&#x27;</span> + <span class="variable language_">this</span>.<span class="property">contentId</span>&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>页面结构如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;章节信息&lt;/h1&gt;</span><br><span class="line">    &lt;el-steps :active=&quot;2&quot; finish-status=&quot;success&quot;&gt;</span><br><span class="line">      &lt;el-step title=&quot;填写作品基本信息&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;添加章节视频&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">      &lt;el-step title=&quot;完成&quot;&gt;&lt;/el-step&gt;</span><br><span class="line">    &lt;/el-steps&gt;</span><br><span class="line">    &lt;el-button type=&quot;text&quot;&gt;添加章节&lt;/el-button&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    章节</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;ul class=&quot;chapterList&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;chapter in chapterList&quot; :key=&quot;chapter.id&quot;&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">          &#123;&#123; chapter.title &#125;&#125;</span><br><span class="line">          &lt;span class=&quot;acts&quot;&gt;</span><br><span class="line">                &lt;el-button type=&quot;text&quot;&gt;添加小节&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button style=&quot;&quot; type=&quot;text&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">                &lt;el-button type=&quot;text&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;!-- 视频 --&gt;</span><br><span class="line">        &lt;ul class=&quot;chapterListList sectionList&quot;&gt;</span><br><span class="line">          &lt;li v-for=&quot;section in chapter.children&quot; :key=&quot;section.id&quot;&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">              &#123;&#123; section.title &#125;&#125;</span><br><span class="line">              &lt;span class=&quot;acts&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;text&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">                    &lt;el-button type=&quot;text&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;pre&quot;&gt;上一步&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button style=&quot;margin-top: 12px;&quot; @click=&quot;next&quot;&gt;下一步&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>样式代码如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.chapterList</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.chapterList</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.chapterList</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#DDD</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.chapterList</span> <span class="selector-class">.acts</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sectionList</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sectionList</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#DDD</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="章节管理后端"><a href="#章节管理后端" class="headerlink" title="章节管理后端"></a>章节管理后端</h3><p>在 <code>common_base</code> 工程当中添加自定义异常</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173152720-1903799061.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173152720-1903799061.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/10 17:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 自定义异常</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = true)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BnTangException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异常信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在全局异常处理器当中处理我们自己抛出的自定义异常</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173357590-622873123.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173357590-622873123.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 自定义异常</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ExceptionHandler(BnTangException.class)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">error</span><span class="params">(BnTangException e)</span> &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.error().code(e.getCode()).message(e.getMsg());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就都是修改 <code>ChapterController</code> 了如下</p><h4 id="新增章节"><a href="#新增章节" class="headerlink" title="新增章节"></a>新增章节</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173637713-221423494.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410173637713-221423494.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 新增章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/addChapter&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">addChapter</span><span class="params">(<span class="meta">@RequestBody</span> Chapter chapter)</span> &#123;</span><br><span class="line">    chapterService.save(chapter);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="根据-ID-查询章节"><a href="#根据-ID-查询章节" class="headerlink" title="根据 ID 查询章节"></a>根据 ID 查询章节</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据 ID 查询章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据 ID 查询章节&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getChapterById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;章节ID&quot;, required = true)</span></span></span><br><span class="line"><span class="params">                                     <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="type">Chapter</span> <span class="variable">chapter</span> <span class="operator">=</span> chapterService.getById(id);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, chapter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="根据-ID-修改章节"><a href="#根据-ID-修改章节" class="headerlink" title="根据 ID 修改章节"></a>根据 ID 修改章节</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据ID修改章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据ID修改章节&quot;)</span></span><br><span class="line"><span class="meta">@PutMapping(&quot;updateChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">updateChapterById</span><span class="params">(<span class="meta">@PathVariable</span> String id, <span class="meta">@RequestBody</span> Chapter chapter)</span> &#123;</span><br><span class="line">    chapter.setId(id);</span><br><span class="line">    chapterService.updateById(chapter);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="根据-ID-删除章节"><a href="#根据-ID-删除章节" class="headerlink" title="根据 ID 删除章节"></a>根据 ID 删除章节</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据ID删除章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据ID删除章节&quot;)</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;deleteChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">deleteChapterById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    chapterService.deleteChapterById(id);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务类的实现和接口方法的定义都没有写的，先来看看最终 ChapterController 的代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品章节 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/chapter&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;作品章节组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ChapterController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ChapterService chapterService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 获取章节嵌套形式的数据结构列表</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取章节嵌套形式的数据结构列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getChapterContentVideo/&#123;contentId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getChapterSection</span><span class="params">(<span class="meta">@PathVariable</span> String contentId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;items&quot;</span>, chapterService.getChapterSection(contentId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 新增章节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/addChapter&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;新增章节&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">addChapter</span><span class="params">(<span class="meta">@RequestBody</span> Chapter chapter)</span> &#123;</span><br><span class="line">        chapterService.save(chapter);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据 ID 查询章节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据 ID 查询章节&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getChapterById</span><span class="params">(<span class="meta">@ApiParam(name = &quot;id&quot;, value = &quot;章节ID&quot;, required = true)</span></span></span><br><span class="line"><span class="params">                                         <span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="type">Chapter</span> <span class="variable">chapter</span> <span class="operator">=</span> chapterService.getById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, chapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID修改章节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据ID修改章节&quot;)</span></span><br><span class="line">    <span class="meta">@PutMapping(&quot;updateChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">updateChapterById</span><span class="params">(<span class="meta">@PathVariable</span> String id, <span class="meta">@RequestBody</span> Chapter chapter)</span> &#123;</span><br><span class="line">        chapter.setId(id);</span><br><span class="line">        chapterService.updateById(chapter);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID删除章节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据ID删除章节&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;deleteChapterById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">deleteChapterById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        chapterService.deleteChapterById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着就是来添加接口方法和完成实现类如下，在 ChapterService 中添加如下方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175201216-2038815760.png"><br><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175201216-2038815760.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据ID删除章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 章节ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteChapterById</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>实现类代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteChapterById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="comment">// 根据 id 查询是否存在小节，如果有则提示用户，有子节点</span></span><br><span class="line">    <span class="keyword">if</span> (contentVideoService.isExistContentVideoWithChapterId(id)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;该分章节下存在小节，请先删除小节!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    baseMapper.deleteById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着在 <code>contentVideoService</code> 接口当中添加一个查询章节下是否存在小节的方法如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175333890-358649908.png"><br><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175333890-358649908.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据章节ID查询是否存在小节</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 章节ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 是否存在小节</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isExistContentVideoWithChapterId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>实现类如下，后端完毕开始前端</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品视频 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentVideoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ContentVideoMapper, ContentVideo&gt; <span class="keyword">implements</span> <span class="title class_">ContentVideoService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isExistContentVideoWithChapterId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;ContentVideo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;chapter_id&quot;</span>, id);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.selectCount(queryWrapper);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> != count &amp;&amp; count &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="章节管理前端"><a href="#章节管理前端" class="headerlink" title="章节管理前端"></a>章节管理前端</h3><h4 id="新增章节-1"><a href="#新增章节-1" class="headerlink" title="新增章节"></a>新增章节</h4><p>在 api 的 <code>chapter.js</code> 当中编写前端调用请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175720138-1525538288.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175720138-1525538288.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.新增章节</span></span><br><span class="line"><span class="title function_">saveChapter</span>(<span class="params">chapter</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;apiName&#125;</span>/saveChapter`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: chapter</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>定义 data 数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175835613-1375180788.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175835613-1375180788.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是否显示章节表单</span></span><br><span class="line"><span class="attr">dialogChapterFormVisible</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="comment">// 章节对象</span></span><br><span class="line"><span class="attr">chapter</span>: &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">sort</span>: <span class="number">0</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>章节表单 <code>dialog</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175949908-427544146.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410175949908-427544146.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">添加和修改章节表单</span><br><span class="line"> --&gt;</span><br><span class="line">&lt;el-dialog :visible.sync=&quot;dialogChapterFormVisible&quot; title=&quot;添加章节&quot;&gt;</span><br><span class="line">  &lt;el-form :model=&quot;chapter&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;章节标题&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;chapter.title&quot;/&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;章节排序&quot;&gt;</span><br><span class="line">      &lt;el-input-number v-model=&quot;chapter.sort&quot; :min=&quot;0&quot; controls-position=&quot;right&quot;/&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">  &lt;/el-form&gt;</span><br><span class="line">  &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">    &lt;el-button @click=&quot;dialogChapterFormVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;saveOrUpdate&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><p>定义表单提交方法</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加或者更新</span></span><br><span class="line"><span class="title function_">saveOrUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">chapter</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">saveData</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateData</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410180527806-1928314861.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410180527806-1928314861.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">saveData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">chapter</span>.<span class="property">contentId</span> = <span class="variable language_">this</span>.<span class="property">contentId</span>;</span><br><span class="line">  chapter.<span class="title function_">save</span>(<span class="variable language_">this</span>.<span class="property">chapter</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在测试添加功能之前先来修复一个 BUG，章节列表展示的问题，首先是前端</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410182531460-1756862234.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410182531460-1756862234.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194139646-1401229106.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194139646-1401229106.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194414578-1605491484.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194414578-1605491484.png" alt="img"></a></p><p>BUG解决，然后继续修改前端当点击 <code>添加章节</code> 的时候把表单对话框给显示出来如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194959241-1313010079.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410194959241-1313010079.png" alt="img"></a></p><p>当然我这里是添加了一个方法，你可以直接把绑定的 data 值变为 <code>true</code> 即可显示, showDialog 方法内容如下</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">showDialog</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">dialogChapterFormVisible</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改一下 api 请求地址之前写错了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211046540-1980682861.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211046540-1980682861.png" alt="img"></a></p><p>处理添加之后的数据操作，如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211134428-1312364190.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211134428-1312364190.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">dialogChapterFormVisible</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 请求嵌套数据</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br></pre></td></tr></table></figure><h4 id="更新章节"><a href="#更新章节" class="headerlink" title="更新章节"></a>更新章节</h4><p>添加注册事件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211706431-1096321833.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410211706431-1096321833.png" alt="img"></a></p><p>定义编辑方法</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">editChapter</span>(<span class="params">chapterId</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">dialogChapterFormVisible</span> = <span class="literal">true</span>;</span><br><span class="line">  chapter.<span class="title function_">getChapterById</span>(chapterId).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">chapter</span> = res.<span class="property">data</span>.<span class="property">item</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&quot;系统繁忙!&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>chapter.js</code> 添加对应的 api 方法</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 3.根据 ID 查询章节</span></span><br><span class="line"><span class="title function_">getChapterById</span>(<span class="params">chapterId</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;apiName&#125;</span>/getChapterById/<span class="subst">$&#123;chapterId&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新按钮点击方法实现</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410213225548-966400932.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410213225548-966400932.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加或者更新</span></span><br><span class="line"><span class="title function_">saveOrUpdate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">chapter</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">saveData</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateData</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>修改 <code>chapter.js</code> 添加对应的 api</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410213338281-1673517604.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410213338281-1673517604.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 4.根据 ID 查询章节</span></span><br><span class="line"><span class="title function_">updateChapter</span>(<span class="params">chapter</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;apiName&#125;</span>/updateChapterById`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: chapter</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新章节</span></span><br><span class="line"><span class="title function_">updateData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  chapter.<span class="title function_">updateChapter</span>(<span class="variable language_">this</span>.<span class="property">chapter</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(res.<span class="property">message</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">dialogChapterFormVisible</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="删除章节"><a href="#删除章节" class="headerlink" title="删除章节"></a>删除章节</h4><p>定义删除方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410214308420-692714135.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210410214308420-692714135.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除章节</span></span><br><span class="line"><span class="title function_">deleteChapter</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="comment">//提示</span></span><br><span class="line">  <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;真的要删除嘛?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 发送删除的请求</span></span><br><span class="line">    <span class="keyword">return</span> chapter.<span class="title function_">deleteChapter</span>(id);</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 重新加载数据</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br><span class="line">  &#125;).<span class="title function_">catch</span>((<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 取消</span></span><br><span class="line">    <span class="keyword">if</span> (error === <span class="string">&#x27;cancel&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;取消删除&#x27;</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>编写对应的请求 api</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 5.删除章节</span></span><br><span class="line"><span class="title function_">deleteChapter</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;apiName&#125;</span>/deleteChapterById/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;delete&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="29-作品管理-作品小节管理"><a href="#29-作品管理-作品小节管理" class="headerlink" title="29-作品管理-作品小节管理"></a>29-作品管理-作品小节管理</h2><h3 id="后端-1"><a href="#后端-1" class="headerlink" title="后端"></a>后端</h3><p>定义接收前端参数 <code>ContentVideoInfoVO</code></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/10 22:03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 作品小节接收前端参数VO</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentVideoInfoVO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;视频ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;小节名称&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;作品ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String contentId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;章节ID&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String chapterId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;视频资源&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String videoSourceId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;显示排序&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer sort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty(value = &quot;是否可以试听：0默认 1免费&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer isFree;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ContentVideoController"><a href="#ContentVideoController" class="headerlink" title="ContentVideoController"></a>ContentVideoController</h4><p>如下是 ContentVideoController 中所有的代码，比较简单主要是在 service 层代码我会额外进行解释</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品视频 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> <span class="variable">BNTang</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="title class_">RestController</span></span><br><span class="line">@<span class="title class_">CrossOrigin</span></span><br><span class="line">@<span class="title class_">Api</span>(tags = <span class="string">&quot;作品视频组&quot;</span>)</span><br><span class="line">@<span class="title class_">RequestMapping</span>(<span class="string">&quot;/service_video/content_video&quot;</span>)</span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">ContentVideoController</span> &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Resource</span></span><br><span class="line">    private <span class="title class_">ContentVideoService</span> contentVideoService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 新增小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">ApiOperation</span>(value = <span class="string">&quot;新增小节&quot;</span>)</span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/saveVideoInfo&quot;</span>)</span><br><span class="line">    public <span class="title class_">ResponseResult</span> <span class="title function_">save</span>(<span class="params">@RequestBody ContentVideoInfoVO videoInfoForm</span>) &#123;</span><br><span class="line">        contentVideoService.<span class="title function_">saveVideoInfo</span>(videoInfoForm);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ResponseResult</span>.<span class="title function_">ok</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID查询小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">ApiOperation</span>(value = <span class="string">&quot;根据ID查询小节&quot;</span>)</span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;/getVideoInfo/&#123;id&#125;&quot;</span>)</span><br><span class="line">    public <span class="title class_">ResponseResult</span> <span class="title function_">getVideInfoById</span>(<span class="params">@PathVariable <span class="built_in">String</span> id</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ResponseResult</span>.<span class="title function_">ok</span>().<span class="title function_">data</span>(<span class="string">&quot;item&quot;</span>, contentVideoService.<span class="title function_">getContentVideoInfoById</span>(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 更新小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">ApiOperation</span>(value = <span class="string">&quot;更新小节&quot;</span>)</span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/updateVideoInfo&quot;</span>)</span><br><span class="line">    public <span class="title class_">ResponseResult</span> <span class="title function_">updateCourseInfoById</span>(<span class="params">@RequestBody ContentVideoInfoVO videoInfoForm</span>) &#123;</span><br><span class="line">        contentVideoService.<span class="title function_">updateVideoInfo</span>(videoInfoForm);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">ResponseResult</span>.<span class="title function_">ok</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID删除小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">ApiOperation</span>(value = <span class="string">&quot;根据ID删除小节&quot;</span>)</span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/deleteVideoInfo/&#123;id&#125;&quot;</span>)</span><br><span class="line">    public <span class="title class_">ResponseResult</span> <span class="title function_">removeById</span>(<span class="params">@PathVariable <span class="built_in">String</span> id</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (contentVideoService.<span class="title function_">deleteVideoById</span>(id)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">ResponseResult</span>.<span class="title function_">ok</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">ResponseResult</span>.<span class="title function_">error</span>().<span class="title function_">message</span>(<span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ContentVideoService 接口内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品视频 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ContentVideoService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;ContentVideo&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据章节ID查询是否存在小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 章节ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否存在小节</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isExistContentVideoWithChapterId</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 新增小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentVideoInfoVO 小节信息VO</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveVideoInfo</span><span class="params">(ContentVideoInfoVO contentVideoInfoVO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID查询小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 小节ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 小节信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    ContentVideoInfoVO <span class="title function_">getContentVideoInfoById</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 更新小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentVideoInfoVO 小节信息VO</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">updateVideoInfo</span><span class="params">(ContentVideoInfoVO contentVideoInfoVO)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据ID删除小节</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 小节ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否删除成功(true ： 删除成功 ， false ： 删除失败)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">deleteVideoById</span><span class="params">(String id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的 ContentVideoServiceImpl 实现类代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 作品视频 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentVideoServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ContentVideoMapper, ContentVideo&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ContentVideoService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isExistContentVideoWithChapterId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        QueryWrapper&lt;ContentVideo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;chapter_id&quot;</span>, id);</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> baseMapper.selectCount(queryWrapper);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span> != count &amp;&amp; count &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveVideoInfo</span><span class="params">(ContentVideoInfoVO contentVideoInfoVO)</span> &#123;</span><br><span class="line">        <span class="type">ContentVideo</span> <span class="variable">contentVideo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideo</span>();</span><br><span class="line">        BeanUtils.copyProperties(contentVideoInfoVO, contentVideo);</span><br><span class="line">        <span class="built_in">this</span>.save(contentVideo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ContentVideoInfoVO <span class="title function_">getContentVideoInfoById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="comment">// 从video表中取数据</span></span><br><span class="line">        <span class="type">ContentVideo</span> <span class="variable">contentVideo</span> <span class="operator">=</span> <span class="built_in">this</span>.getById(id);</span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(contentVideo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;数据不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建videoInfoForm对象</span></span><br><span class="line">        <span class="type">ContentVideoInfoVO</span> <span class="variable">contentVideoInfoVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideoInfoVO</span>();</span><br><span class="line">        BeanUtils.copyProperties(contentVideo, contentVideoInfoVO);</span><br><span class="line">        <span class="keyword">return</span> contentVideoInfoVO;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateVideoInfo</span><span class="params">(ContentVideoInfoVO contentVideoInfoVO)</span> &#123;</span><br><span class="line">        <span class="type">ContentVideo</span> <span class="variable">contentVideo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideo</span>();</span><br><span class="line">        BeanUtils.copyProperties(contentVideoInfoVO, contentVideo);</span><br><span class="line">        <span class="built_in">this</span>.updateById(contentVideo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteVideoById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO 删除视频资源</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> baseMapper.deleteById(id);</span><br><span class="line">        <span class="keyword">return</span> result &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-1"><a href="#前端-1" class="headerlink" title="前端"></a>前端</h3><p>在 api 当中定义 <code>content_video</code> 前端接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411093952061-315386762.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411093952061-315386762.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/service_video/content_video&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 新增小节</span></span><br><span class="line">  <span class="title function_">saveVideoInfo</span>(<span class="params">videoInfo</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/saveVideoInfo`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: videoInfo</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据ID查询小节</span></span><br><span class="line">  <span class="title function_">getVideoInfoById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getVideoInfo/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 更新小节</span></span><br><span class="line">  <span class="title function_">updateVideoInfo</span>(<span class="params">videoInfo</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/updateVideoInfo`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: videoInfo</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据ID删除小节</span></span><br><span class="line">  <span class="title function_">deleteVideoById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/deleteVideoInfo/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新增小节"><a href="#新增小节" class="headerlink" title="新增小节"></a>新增小节</h4><p>定义 data 数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411094123840-647326632.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411094123840-647326632.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是否显示课时表单</span></span><br><span class="line"><span class="attr">dialogVideoFormVisible</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="comment">// 课时所在的章节id</span></span><br><span class="line"><span class="attr">chapterId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line"><span class="comment">// 课时对象</span></span><br><span class="line"><span class="attr">contentVideo</span>: &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">isFree</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">videoSourceId</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>添加小节按钮点击事件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411122944846-418817599.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411122944846-418817599.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;text&quot;</span><br><span class="line">           @click=&quot;dialogVideoFormVisible=true;chapterId = chapter.id&quot;&gt;添加小节&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>小节表单</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">添加和修改小节表单</span><br><span class="line">--&gt;</span><br><span class="line">&lt;el-dialog :visible.sync=&quot;dialogVideoFormVisible&quot; title=&quot;添加小节&quot;&gt;</span><br><span class="line">  &lt;el-form :model=&quot;contentVideo&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;小节标题&quot;&gt;</span><br><span class="line">      &lt;el-input v-model=&quot;contentVideo.title&quot;/&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;课时排序&quot;&gt;</span><br><span class="line">      &lt;el-input-number v-model=&quot;contentVideo.sort&quot; :min=&quot;0&quot; controls-position=&quot;right&quot;/&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;是否免费&quot;&gt;</span><br><span class="line">      &lt;el-radio-group v-model=&quot;contentVideo.isFree&quot;&gt;</span><br><span class="line">        &lt;el-radio :label=&quot;true&quot;&gt;免费&lt;/el-radio&gt;</span><br><span class="line">        &lt;el-radio :label=&quot;false&quot;&gt;默认&lt;/el-radio&gt;</span><br><span class="line">      &lt;/el-radio-group&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">    &lt;el-form-item label=&quot;上传视频&quot;&gt;</span><br><span class="line">      &lt;!-- 上传视频 --&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">  &lt;/el-form&gt;</span><br><span class="line">  &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">    &lt;el-button @click=&quot;dialogVideoFormVisible = false&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; @click=&quot;saveOrUpdateVideo&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><p>实现添加小节按钮点击事件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123041706-864966159.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123041706-864966159.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小节按钮点击</span></span><br><span class="line"><span class="title function_">saveOrUpdateVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">saveDataVideo</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存小节数据信息</span></span><br><span class="line"><span class="title function_">saveDataVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">contentId</span> = <span class="variable language_">this</span>.<span class="property">contentId</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">chapterId</span> = <span class="variable language_">this</span>.<span class="property">chapterId</span>;</span><br><span class="line">  contentVideo.<span class="title function_">saveVideoInfo</span>(<span class="variable language_">this</span>.<span class="property">contentVideo</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 保存后, 更新相关数据</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">helpSaveVideo</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>保存后, 更新相关数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123217850-39115337.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123217850-39115337.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存后, 更新相关数据</span></span><br><span class="line"><span class="title function_">helpSaveVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">dialogVideoFormVisible</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVideo</span> = &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">sort</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">isFree</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">videoSourceId</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="编辑小节"><a href="#编辑小节" class="headerlink" title="编辑小节"></a>编辑小节</h4><p>添加编辑小节按钮点击事件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123407133-355967854.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123407133-355967854.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-button type=&quot;text&quot; @click=&quot;editContentVideo(section.id)&quot;&gt;编辑&lt;/el-button&gt;</span><br><span class="line">&lt;el-button type=&quot;text&quot; @click=&quot;deleteContentVideo(section.id)&quot;&gt;删除&lt;/el-button&gt;</span><br></pre></td></tr></table></figure><p>实现数据回显</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123518329-762173000.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411123518329-762173000.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编辑小节按钮</span></span><br><span class="line"><span class="title function_">editContentVideo</span>(<span class="params">videoId</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">dialogVideoFormVisible</span> = <span class="literal">true</span>;</span><br><span class="line">  contentVideo.<span class="title function_">getVideoInfoById</span>(videoId).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span> = response.<span class="property">data</span>.<span class="property">item</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>编辑保存方法实现</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新小节信息</span></span><br><span class="line"><span class="title function_">updateDataVideo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  contentVideo.<span class="title function_">updateVideoInfo</span>(<span class="variable language_">this</span>.<span class="property">contentVideo</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 更新相关数据</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">helpSaveVideo</span>();</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="删除小节"><a href="#删除小节" class="headerlink" title="删除小节"></a>删除小节</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">deleteContentVideo</span>(<span class="params">videoId</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;永久删除该记录, 是否继续?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> contentVideo.<span class="title function_">deleteVideoById</span>(videoId);</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 刷新列表</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getNestedTreeList</span>();</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (response === <span class="string">&#x27;cancel&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;已取消删除&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="30-作品管理-发布作品"><a href="#30-作品管理-发布作品" class="headerlink" title="30-作品管理-发布作品"></a>30-作品管理-发布作品</h2><h3 id="后端-2"><a href="#后端-2" class="headerlink" title="后端"></a>后端</h3><p>定义预览数据模型 VO, <code>ContentPreviewVO</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> S2.3.2Dev</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> Created in 2021/4/11 12:50</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 预览数据模型 VO</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentPreviewVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line">    <span class="keyword">private</span> Integer contentNum;</span><br><span class="line">    <span class="keyword">private</span> String oneCategory;</span><br><span class="line">    <span class="keyword">private</span> String twoCategory;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 价格只用于显示所以为String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 ContentController 当中定义接口方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 获取作品的预览信息</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;获取作品的预览信息&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getContentPreView/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getContentPreView</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, contentService.getContentPreView(id));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService 添加对应的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 获取作品的预览信息</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 预览信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ContentPreviewVO <span class="title function_">getContentPreView</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411125803883-295710291.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411125803883-295710291.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ContentPreviewVO <span class="title function_">getContentPreView</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> baseMapper.getContentPreviewVoById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentMapper</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411125830692-651534126.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411125830692-651534126.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 获取作品的预览信息</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 预览信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ContentPreviewVO <span class="title function_">getContentPreviewVoById</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>由于是多表之间的查询，所以不能用 MP 实现，需要自己手写SQL，修改 ContentMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;top.it6666.service_video.mapper.ContentMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getContentPreviewVoById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;top.it6666.service_video.entity.vo.ContentPreviewVO&quot;</span>&gt;</span></span><br><span class="line">        SELECT c.title,</span><br><span class="line">               c.cover,</span><br><span class="line">               c.content_num                   AS contentNum,</span><br><span class="line">               CONVERT(c.price, DECIMAL(8, 2)) AS price,</span><br><span class="line">               c1.title                        AS oneCategory,</span><br><span class="line">               c2.title                        AS twoCategory,</span><br><span class="line">               a.name                          AS author</span><br><span class="line">        FROM video_content c</span><br><span class="line">                     LEFT JOIN video_author a ON c.author_id = a.id</span><br><span class="line">                     LEFT JOIN video_category c1 ON c.category_parent_id = c1.id</span><br><span class="line">                     LEFT JOIN video_category c2 ON c.category_id = c2.id</span><br><span class="line">        WHERE c.id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 <code>service_video</code> 微服务的配置文件，配置 mapper.xml 文件地址如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411130651783-2032626223.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411130651783-2032626223.png" alt="img"></a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mapper-locations:</span> <span class="string">top/it6666/service_video/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><p>而且还要配置一步，配置 maven 打包时不拦截 xml 文件，xml 也需要打包，注意是修改最外层的父工程的 <code>pom.xml</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411130902751-1907800683.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411130902751-1907800683.png" alt="img"></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发布作品</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 发布作品</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;发布作品&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/sendContent/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">sendContent</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    contentService.sendContentWithId(id);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 发布作品</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">sendContentWithId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sendContentWithId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">Content</span> <span class="variable">content</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Content</span>();</span><br><span class="line">    content.setId(id);</span><br><span class="line">    content.setStatus(<span class="string">&quot;Normal&quot;</span>);</span><br><span class="line">    baseMapper.updateById(content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-2"><a href="#前端-2" class="headerlink" title="前端"></a>前端</h3><p>前端界面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183855825-195320361.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183855825-195320361.png" alt="img"></a></p><p>在 <code>conent.js</code> 当中定义 api 请求接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182533858-956046926.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182533858-956046926.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取课程预览信息</span></span><br><span class="line"><span class="title function_">getContentPreview</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/getContentPreView/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 发布作品</span></span><br><span class="line"><span class="title function_">sendContent</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/sendContent/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 send.vue 当中定义数据模型</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183631834-2061589320.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183631834-2061589320.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 所属作品</span></span><br><span class="line">    <span class="attr">contentId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="comment">// 预览信息实体</span></span><br><span class="line">    <span class="attr">contentSendObj</span>: &#123;&#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>导入 api</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182921695-1935825356.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182921695-1935825356.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> content <span class="keyword">from</span> <span class="string">&quot;@/api/video/content/content&quot;</span>;</span><br></pre></td></tr></table></figure><p>接收路由参数</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182844777-1805961961.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411182844777-1805961961.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentId</span> = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>;</span><br><span class="line">    <span class="comment">// 根据id获取作品基本信息</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getPreviewInfo</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据id获取作品基本信息</span></span><br><span class="line"><span class="title function_">getPreviewInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">getContentPreview</span>(<span class="variable language_">this</span>.<span class="property">contentId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentSendObj</span> = res.<span class="property">data</span>.<span class="property">item</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义界面，结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;contentInfo&quot;&gt;</span><br><span class="line">  &lt;img :src=&quot;contentSendObj.cover&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123; contentSendObj.title &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;p class=&quot;gray&quot;&gt;&lt;span&gt;共&#123;&#123; contentSendObj.contentNum &#125;&#125;总数&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;span&gt;所属分类：&#123;&#123; contentSendObj.oneCategory &#125;&#125; — &#123;&#123; contentSendObj.twoCategory &#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;作者：&#123;&#123; contentSendObj.author &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;h3 class=&quot;red&quot;&gt;￥&#123;&#123; contentSendObj.price &#125;&#125;&lt;/h3&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>样式如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="selector-class">.contentInfo</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#DDD</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#d6d6d6</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">278px</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-class">.main</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">520px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-class">.main</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-class">.main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-class">.main</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.contentInfo</span> <span class="selector-class">.main</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">540px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#d32f24</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>发布按钮点击</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183757214-1083411520.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411183757214-1083411520.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">send</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">sendContent</span>(<span class="variable language_">this</span>.<span class="property">contentId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 跳转到列表页</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/content/list&#x27;</span>&#125;);</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="31-作品管理-集成富文本编辑器"><a href="#31-作品管理-集成富文本编辑器" class="headerlink" title="31-作品管理-集成富文本编辑器"></a>31-作品管理-集成富文本编辑器</h2><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p><code>tinymce</code> 官方提供了一个 vue 的组件 <code>tinymce-vue</code> 安装指令如下</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @tinymce/tinymce-vue -S --no-fund</span><br></pre></td></tr></table></figure><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install tinymce -S --no-fund</span><br></pre></td></tr></table></figure><p>在 <code>public</code> 文件夹中导入语言包，语言包下载地址为：<a href="https://www.tiny.cloud/get-tiny/language-packages/">https://www.tiny.cloud/get-tiny/language-packages/</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411184406076-368924090.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411184406076-368924090.png" alt="img"></a></p><p>在 node_modules 里面找到 <code>tinymce</code>, 将 <code>skins</code> 目录复制到 public&#x2F;tinymce 里面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185155053-1932014233.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185155053-1932014233.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185227592-223855948.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185227592-223855948.png" alt="img"></a></p><p>语言包也要放进去</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185307047-1532519173.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185307047-1532519173.png" alt="img"></a></p><p>然后在 components 文件夹下新一个 <code>Tinymce.vue</code> 的组件内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185447643-1449094900.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185447643-1449094900.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;tinymce-box&quot;&gt;</span><br><span class="line">    &lt;editor v-model=&quot;myValue&quot;</span><br><span class="line">            :init=&quot;init&quot;</span><br><span class="line">            :disabled=&quot;disabled&quot;</span><br><span class="line">            @onClick=&quot;onClick&quot;&gt;</span><br><span class="line">    &lt;/editor&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import tinymce from &#x27;tinymce/tinymce&#x27; //tinymce默认hidden，不引入不显示</span><br><span class="line">import Editor from &#x27;@tinymce/tinymce-vue&#x27;</span><br><span class="line">import &#x27;tinymce/themes/silver&#x27;</span><br><span class="line">// 编辑器插件plugins</span><br><span class="line">// 更多插件参考：https://www.tiny.cloud/docs/plugins/</span><br><span class="line">import &#x27;tinymce/icons/default/icons.min.js&#x27;</span><br><span class="line">import &#x27;tinymce/plugins/image&#x27;// 插入上传图片插件</span><br><span class="line">import &#x27;tinymce/plugins/media&#x27;// 插入视频插件</span><br><span class="line">import &#x27;tinymce/plugins/table&#x27;// 插入表格插件</span><br><span class="line">import &#x27;tinymce/plugins/lists&#x27;// 列表插件</span><br><span class="line">import &#x27;tinymce/plugins/wordcount&#x27;// 字数统计插件</span><br><span class="line">import &#x27;tinymce/plugins/code&#x27;</span><br><span class="line">import &#x27;tinymce/plugins/link&#x27;</span><br><span class="line">import &#x27;tinymce/plugins/contextmenu&#x27;</span><br><span class="line">import &#x27;tinymce/themes/silver/theme&#x27;</span><br><span class="line">import &#x27;tinymce/plugins/colorpicker&#x27;</span><br><span class="line">import &#x27;tinymce/plugins/textcolor&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    Editor</span><br><span class="line">  &#125;,</span><br><span class="line">  name: &#x27;tinymce&#x27;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    disabled: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: &#123;</span><br><span class="line">      type: [String, Array],</span><br><span class="line">      default: &#x27;link lists image code table colorpicker textcolor wordcount contextmenu&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    toolbar: &#123;</span><br><span class="line">      type: [String, Array],</span><br><span class="line">      default: &#x27;bold italic underline strikethrough | fontsizeselect | forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist | outdent indent blockquote | undo redo | link unlink image code | removeformat&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      init: &#123;</span><br><span class="line">        language_url: &#x27;/tinymce/langs/zh_CN.js&#x27;,</span><br><span class="line">        language: &#x27;zh_CN&#x27;,</span><br><span class="line">        skin_url: &#x27;/tinymce/skins/ui/oxide&#x27;,</span><br><span class="line">        // skin_url: &#x27;tinymce/skins/ui/oxide-dark&#x27;,//暗色系</span><br><span class="line">        height: 400,</span><br><span class="line">        plugins: this.plugins,</span><br><span class="line">        toolbar: this.toolbar,</span><br><span class="line">        branding: false,</span><br><span class="line">        menubar: true,</span><br><span class="line">        // 此处为图片上传处理函数，这个直接用了base64的图片形式上传图片，</span><br><span class="line">        // 如需ajax上传可参考https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_handler</span><br><span class="line">        images_upload_handler: (blobInfo, success, failure) =&gt; &#123;</span><br><span class="line">          const img = &#x27;data:image/jpeg;base64,&#x27; + blobInfo.base64()</span><br><span class="line">          success(img)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      myValue: this.value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    tinymce.init(&#123;&#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 添加相关的事件，可用的事件参照文档=&gt; https://github.com/tinymce/tinymce-vue =&gt; All available events</span><br><span class="line">    // 需要什么事件可以自己增加</span><br><span class="line">    onClick(e) &#123;</span><br><span class="line">      this.$emit(&#x27;onClick&#x27;, e, tinymce)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 可以添加一些自己的自定义事件，如清空内容</span><br><span class="line">    clear() &#123;</span><br><span class="line">      this.myValue = &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value(newValue) &#123;</span><br><span class="line">      this.myValue = newValue</span><br><span class="line">    &#125;,</span><br><span class="line">    myValue(newValue) &#123;</span><br><span class="line">      this.$emit(&#x27;input&#x27;, newValue)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>然后在添加作品的时候，引用组件如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185756753-363366872.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185756753-363366872.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185820812-1658466541.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210411185820812-1658466541.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;tinymce ref=&quot;editor&quot; v-model=&quot;contentVO.description&quot;/&gt;</span><br></pre></td></tr></table></figure><p>本博主在使用的时候已发现问题，高版本存在问题，你可以按照我如下的版本号进行锁定，你也可以试着高版本我的版本号如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413231935280-1892250264.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413231935280-1892250264.png" alt="img"></a></p><p>如果修改了版本号需要重新执行一下 <code>npm install</code> 重新安装对应的依赖包</p><h2 id="32-作品管理-作品列表"><a href="#32-作品管理-作品列表" class="headerlink" title="32-作品管理-作品列表"></a>32-作品管理-作品列表</h2><h3 id="前端页面"><a href="#前端页面" class="headerlink" title="前端页面"></a>前端页面</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414000048982-944390826.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414000048982-944390826.png" alt="img"></a></p><h3 id="后端-3"><a href="#后端-3" class="headerlink" title="后端"></a>后端</h3><p>定义列表分页查询的方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413233802181-1170707460.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413233802181-1170707460.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 分页查询作品列表方法</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;分页查询作品列表方法&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getContentPageQuery/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">contentPageQuery</span><span class="params">(<span class="meta">@PathVariable</span> Long page, <span class="meta">@PathVariable</span> Long limit, ContentVO contentVO)</span> &#123;</span><br><span class="line">    Page&lt;Content&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">    contentService.contentPageQuery(pageParam, contentVO);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;total&quot;</span>, pageParam.getTotal()).data(<span class="string">&quot;rows&quot;</span>, pageParam.getRecords());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>ContentService</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 分页查询作品列表方法</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pageParam 分页信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentVO 过滤条件信息实体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">contentPageQuery</span><span class="params">(Page&lt;Content&gt; pageParam, ContentVO contentVO)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl 实现对应的业务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contentPageQuery</span><span class="params">(Page&lt;Content&gt; pageParam, ContentVO contentVO)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;Content&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.orderByDesc(<span class="string">&quot;gmt_create&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (contentVO == <span class="literal">null</span>) &#123;</span><br><span class="line">        baseMapper.selectPage(pageParam, queryWrapper);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(contentVO.getTitle())) &#123;</span><br><span class="line">        queryWrapper.like(<span class="string">&quot;title&quot;</span>, contentVO.getTitle());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(contentVO.getAuthorId())) &#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;author_id&quot;</span>, contentVO.getAuthorId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(contentVO.getCategoryParentId())) &#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;category_parent_id&quot;</span>, contentVO.getCategoryParentId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(contentVO.getCategoryId())) &#123;</span><br><span class="line">        queryWrapper.eq(<span class="string">&quot;category_id&quot;</span>, contentVO.getCategoryId());</span><br><span class="line">    &#125;</span><br><span class="line">    baseMapper.selectPage(pageParam, queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-3"><a href="#前端-3" class="headerlink" title="前端"></a>前端</h3><p>在 content.js 当中定义请求接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234438969-1086535935.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234438969-1086535935.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 作品列表</span></span><br><span class="line"><span class="title function_">getContentPageList</span>(<span class="params">page, limit, searchObj</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/getContentPageQuery/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: searchObj</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 list.vue 当中引入相关组件与定义数据模型导入对应的 api 方法如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234252498-962153652.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234252498-962153652.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> content <span class="keyword">from</span> <span class="string">&quot;@/api/video/content/content&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> category <span class="keyword">from</span> <span class="string">&quot;@/api/video/category/category&quot;</span>;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234551836-1298067898.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210413234551836-1298067898.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">// 是否显示loading信息</span></span><br><span class="line">    <span class="attr">listLoading</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 数据列表</span></span><br><span class="line">    <span class="attr">list</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="comment">// 总记录数</span></span><br><span class="line">    <span class="attr">total</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="comment">// 页码</span></span><br><span class="line">    <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="comment">// 每页记录数</span></span><br><span class="line">    <span class="attr">limit</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment">// 查询条件</span></span><br><span class="line">    <span class="attr">searchObj</span>: &#123;</span><br><span class="line">      <span class="attr">categoryParentId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">categoryId</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">authorId</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 作者列表</span></span><br><span class="line">    <span class="attr">authorList</span>: [],</span><br><span class="line">    <span class="comment">// 一级分类列表</span></span><br><span class="line">    <span class="attr">oneCategoryList</span>: [],</span><br><span class="line">    <span class="comment">// 二级分类列表</span></span><br><span class="line">    <span class="attr">twoCategoryList</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>初始化查询下拉列表数据</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414220933935-1633134452.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414220933935-1633134452.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 当页面加载时获取数据</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getData</span>();</span><br><span class="line">  <span class="comment">// 初始化分类列表</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getCategoryList</span>();</span><br><span class="line">  <span class="comment">// 获取讲师列表</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">initAuthorList</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">initAuthorList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  content.<span class="title function_">getAuthorList</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">authorList</span> = res.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载所有的分类</span></span><br><span class="line"><span class="title function_">getCategoryList</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 1.获取一级分类</span></span><br><span class="line">  category.<span class="title function_">getCategoryData</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">oneCategoryList</span> = res.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 当一级分类改变时调用的 方法  参数:当前一级分类选择的id</span></span><br><span class="line"><span class="title function_">oneCategoryChanged</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> category = <span class="variable language_">this</span>.<span class="property">oneCategoryList</span>[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (value === category.<span class="property">id</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">twoCategoryList</span> = category.<span class="property">children</span>;</span><br><span class="line">      <span class="comment">// 清空已经选择的二级分类</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">searchObj</span>.<span class="property">categoryId</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用api层获取数据库中的数据</span></span><br><span class="line"><span class="title function_">getData</span>(<span class="params">page = <span class="number">1</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 当点击分页组件的切换按钮的时候，会传输一个当前页码的参数page</span></span><br><span class="line">  <span class="comment">// 解决分页无效问题</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">page</span> = page;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">listLoading</span> = <span class="literal">true</span>;</span><br><span class="line">  content.<span class="title function_">getContentPageList</span>(<span class="variable language_">this</span>.<span class="property">page</span>, <span class="variable language_">this</span>.<span class="property">limit</span>, <span class="variable language_">this</span>.<span class="property">searchObj</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// debugger 设置断点调试</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">success</span> === <span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">list</span> = response.<span class="property">data</span>.<span class="property">rows</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">total</span> = response.<span class="property">data</span>.<span class="property">total</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listLoading</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listLoading</span> = <span class="literal">false</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>搜索查询页面添加</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414223219872-1003380283.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414223219872-1003380283.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">查询表单</span><br><span class="line">--&gt;</span><br><span class="line">&lt;el-form :inline=&quot;true&quot; class=&quot;demo-form-inline&quot;&gt;</span><br><span class="line">  &lt;!--</span><br><span class="line">  所属分类：级联下拉列表</span><br><span class="line">  --&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--</span><br><span class="line">  一级分类</span><br><span class="line">  --&gt;</span><br><span class="line">  &lt;el-form-item label=&quot;分类&quot;&gt;</span><br><span class="line">    &lt;el-select</span><br><span class="line">      v-model=&quot;searchObj.categoryParentId&quot;</span><br><span class="line">      placeholder=&quot;请选择&quot;</span><br><span class="line">      @change=&quot;oneCategoryChanged&quot;&gt;</span><br><span class="line">      &lt;el-option</span><br><span class="line">        v-for=&quot;category in oneCategoryList&quot;</span><br><span class="line">        :key=&quot;category.id&quot;</span><br><span class="line">        :label=&quot;category.title&quot;</span><br><span class="line">        :value=&quot;category.id&quot;/&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">    &amp;nbsp;</span><br><span class="line">    &lt;!--</span><br><span class="line">    二级分类</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-select placeholder=&quot;请选择&quot; v-model=&quot;searchObj.categoryId&quot;&gt;</span><br><span class="line">      &lt;el-option v-for=&quot;twoCategory in twoCategoryList&quot;</span><br><span class="line">                 :key=&quot;twoCategory.id&quot;</span><br><span class="line">                 :label=&quot;twoCategory.title&quot;</span><br><span class="line">                 :value=&quot;twoCategory.id&quot;/&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 标题 --&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;searchObj.title&quot; placeholder=&quot;作品标题&quot;/&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!-- 作者 --&gt;</span><br><span class="line">  &lt;el-form-item&gt;</span><br><span class="line">    &lt;el-select</span><br><span class="line">      v-model=&quot;searchObj.authorId&quot;</span><br><span class="line">      placeholder=&quot;请选择作者&quot;&gt;</span><br><span class="line">      &lt;el-option</span><br><span class="line">        v-for=&quot;author in authorList&quot;</span><br><span class="line">        :key=&quot;author.id&quot;</span><br><span class="line">        :label=&quot;author.name&quot;</span><br><span class="line">        :value=&quot;author.id&quot;/&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-search&quot; @click=&quot;getData()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">  &lt;el-button type=&quot;default&quot; @click=&quot;resetData()&quot;&gt;清空&lt;/el-button&gt;</span><br><span class="line">&lt;/el-form&gt;</span><br></pre></td></tr></table></figure><p>清空方法实现</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">resetData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">searchObj</span> = &#123;&#125;;</span><br><span class="line">  <span class="comment">// 二级分类列表</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">twoCategoryList</span> = [];</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getData</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>列表页面添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-row :gutter=&quot;15&quot;&gt;</span><br><span class="line">  &lt;el-col :span=&quot;5&quot; v-for=&quot;item in list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;grid-content bg-purple&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;item.cover&quot; alt=&quot;scope.row.title&quot; width=&quot;100%&quot; height=&quot;150px&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;#&quot; style=&quot;font-size: 14px; color: #333&quot;&gt;&#123;&#123; item.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">      &lt;p style=&quot;margin-top: 0&quot;&gt;</span><br><span class="line">        &lt;router-link :to=&quot;&#x27;/content/info/&#x27;+item.id&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;text&quot; size=&quot;mini&quot; icon=&quot;el-icon-edit&quot;&gt;编辑作品信息&lt;/el-button&gt;</span><br><span class="line">        &lt;/router-link&gt;</span><br><span class="line">        &lt;el-button style=&quot;margin-left: 100px&quot; type=&quot;text&quot; size=&quot;mini&quot;</span><br><span class="line">                   @click=&quot;deleteContentById(item.id)&quot; icon=&quot;el-icon-delete&quot;&gt;删除</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">      &lt;p style=&quot;font-size: 14px; color: red; margin-top: -15px;&quot;&gt;</span><br><span class="line">        价格: &#123;&#123; Number(item.price) === 0 ? &#x27;免费&#x27; : &#x27;¥&#x27; + item.price.toFixed(2) &#125;&#125;</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/el-col&gt;</span><br><span class="line">&lt;/el-row&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 分页 --&gt;</span><br><span class="line">&lt;el-pagination</span><br><span class="line">  :current-page=&quot;page&quot;</span><br><span class="line">  :page-size=&quot;limit&quot;</span><br><span class="line">  :total=&quot;total&quot;</span><br><span class="line">  style=&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">  layout=&quot;total, prev, pager, next, jumper&quot;</span><br><span class="line">  @current-change=&quot;getData&quot;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>注意点：需要在最外层套一个 <code>div</code> 如下图，不然使用不了 element-ui</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414223455533-1710072929.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414223455533-1710072929.png" alt="img"></a></p><p>页面样式</p><p>css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="selector-class">.app-container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1260px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.el-col</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.grid-content</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">36px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.row-bg</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f9fafc</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="33-作品管理-删除作品"><a href="#33-作品管理-删除作品" class="headerlink" title="33-作品管理-删除作品"></a>33-作品管理-删除作品</h2><h3 id="后端-4"><a href="#后端-4" class="headerlink" title="后端"></a>后端</h3><p>在 <code>ContentController</code> 当中定义接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据作品id删除对应视频信息</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据作品id删除对应视频信息&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/deleteContent/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">deleteContent</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    contentService.deleteContentWithId(id);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService 添加方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据作品id删除对应视频信息</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteContentWithId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl 实现方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteContentWithId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="comment">// 根据作品的id删除作品</span></span><br><span class="line">    <span class="comment">// 1.作品章节</span></span><br><span class="line">    chapterService.deleteChapterWithContentId(id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.作品小节视频</span></span><br><span class="line">    contentVideoService.deleteContentVideoByContentId(id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.删除信息</span></span><br><span class="line">    baseMapper.deleteById(id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ChapterService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据作品id删除作品关联的所有章节</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteChapterWithContentId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ChapterServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteChapterWithContentId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;Chapter&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, id);</span><br><span class="line">    baseMapper.delete(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentVideoService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据作品id删除对应的小节视频</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 作品id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteContentVideoByContentId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentVideoServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteContentVideoByContentId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;ContentVideo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, id);</span><br><span class="line">    baseMapper.delete(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端调用"><a href="#前端调用" class="headerlink" title="前端调用"></a>前端调用</h3><p>在 <code>content.js</code> 当中定义删除请求</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除作品</span></span><br><span class="line"><span class="title function_">deleteContentById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_video/content/deleteContent/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除按钮事件注册</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414224247671-1554772116.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210414224247671-1554772116.png" alt="img"></a></p><p>实现删除事件方法</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">deleteContentById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="comment">// debugger</span></span><br><span class="line">  <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;真的的要删除该作品?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> content.<span class="title function_">deleteContentById</span>(id)</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">getData</span>()</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: res.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 失败</span></span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (response === <span class="string">&#x27;cancel&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;已取消删除&#x27;</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="34-视频处理-阿里云视频点播技术"><a href="#34-视频处理-阿里云视频点播技术" class="headerlink" title="34-视频处理-阿里云视频点播技术"></a>34-视频处理-阿里云视频点播技术</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>视频点播（ApsaraVideo for VoD）是集音视频采集、编辑、上传、自动化转码处理、媒体资源管理、分发加速于一体的一站式音视频点播解决方案</p><p><strong>功能</strong></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417121330890-116512853.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417121330890-116512853.png" alt="img"></a></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p><strong>接入简单</strong></p><ul><li>几行代码就可快速接入</li><li>大大节省了自行开发的人力物力</li></ul><p><strong>私有加密</strong></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417121511316-1485580635.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417121511316-1485580635.png" alt="img"></a></p><ul><li>基于视频内容的加密, 可防止视频泄露, 有效保障视频的安全</li><li>每个媒体拥有独立的加密钥匙</li><li>提供了完善的管理机制子账号 + 播放凭证</li></ul><p><strong>视频 + AI 加速内容处理</strong></p><ul><li>视频内容智能审核</li><li>视频智能封面, 视频标签预测</li></ul><p><strong>窄带高清技术节省流量</strong></p><ul><li>不牺牲用户体验的前提下, 有效的节省了流量, 节约了预算</li></ul><p><strong>价格优惠</strong></p><ul><li>根据不同的需求选择不同的套餐包</li></ul><h3 id="开通地址"><a href="#开通地址" class="headerlink" title="开通地址"></a>开通地址</h3><p>阿里云 - 产品 → 视频点播</p><p>开通地址：<a href="https://vod.console.aliyun.com/?spm=5176.12818093.products-grouped.dvod.49bb16d0T1n0SG#/guide">https://vod.console.aliyun.com/?spm=5176.12818093.products-grouped.dvod.49bb16d0T1n0SG#/guide</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125402598-474988911.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125402598-474988911.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125331937-1135133531.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125331937-1135133531.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125349154-1902015680.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125349154-1902015680.png" alt="img"></a></p><h3 id="整体流程图"><a href="#整体流程图" class="headerlink" title="整体流程图"></a>整体流程图</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125458815-1731518323.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417125458815-1731518323.png" alt="img"></a></p><p>整体步骤如下</p><ul><li>用户获取上传授权</li><li>VoD 下发, 上传地址和凭证及 VideoId</li><li>用户上传视频保存视频 ID(VideoId)</li><li>用户服务端获取播放凭证</li><li>VoD 下发带时效的播放凭证</li><li>用户服务端将播放凭证下发给客户端完成视频播放</li></ul><h2 id="35-视频处理-视频点播工程创建"><a href="#35-视频处理-视频点播工程创建" class="headerlink" title="35-视频处理-视频点播工程创建"></a>35-视频处理-视频点播工程创建</h2><h4 id="创建视频点播微服务工程"><a href="#创建视频点播微服务工程" class="headerlink" title="创建视频点播微服务工程"></a>创建视频点播微服务工程</h4><p>创建工程，注意父工程为 <code>service</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417130503954-698163355.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417130503954-698163355.png" alt="img"></a></p><h5 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h5><p>修改总父工程依赖</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417131759892-1074202248.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417131759892-1074202248.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">velocity.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">velocity.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-core.version</span>&gt;</span>4.3.3<span class="tag">&lt;/<span class="name">aliyun-java-sdk-core.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-oss.version</span>&gt;</span>3.10.2<span class="tag">&lt;/<span class="name">aliyun-sdk-oss.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span>2.15.2<span class="tag">&lt;/<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span>1.4.13<span class="tag">&lt;/<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">json.version</span>&gt;</span>20170516<span class="tag">&lt;/<span class="name">json.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-dbutils.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">commons-dbutils.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canal.client.version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">canal.client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>zx<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cloud-alibaba.version</span>&gt;</span>0.2.2.RELEASE<span class="tag">&lt;/<span class="name">cloud-alibaba.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--锁定依赖的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring Cloud--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;velocity.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aliyunOSS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--xlsx--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aliyun--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-vod.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-vod-upload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;json.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-dbutils.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;canal.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加本地依赖，添加方式如下</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.aliyun -DartifactId=aliyun-sdk-vod-upload -Dversion=1.4.13 -Dpackaging=jar -Dfile=aliyun-java-vod-upload-1.4.13.jar</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417133929578-278203986.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417133929578-278203986.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417133852592-1075983752.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417133852592-1075983752.png" alt="img"></a></p><p>service_vod 模块依赖如下</p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>20170516<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>resources</code> 当中创建配置文件 <code>applicaiton.yml</code></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8003</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-vod</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">multipart:</span></span><br><span class="line">      <span class="attr">max-file-size:</span> <span class="string">1024MB</span></span><br><span class="line">      <span class="attr">max-request-size:</span> <span class="string">1024MB</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义oss相关属性</span></span><br><span class="line"><span class="attr">aliyun:</span></span><br><span class="line">  <span class="attr">keyid:</span> <span class="string">LTAI4GH19ep2P8caxW2E2N6A</span></span><br><span class="line">  <span class="attr">keysecret:</span> <span class="string">NAmWiBmKXofw7hs4JRcx7SLhF1MN6P</span></span><br></pre></td></tr></table></figure><p>如上配置文件当中的 <code>keyid</code> 和 <code>keysecret</code> 是我们之前做 OSS 配置文件当中的自行拷贝自己的即可如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417215823260-1144987211.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417215823260-1144987211.png" alt="img"></a></p><p>在 service_vod 工程当中创建 <code>top.it6666.service_vod</code> 包在该包下创建启动类</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(VodApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建微服务点播工具类，在 utils 包中创建配置文件读取常量工具类 <code>VodConstant</code></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 配置文件读取常量工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/17 22:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodConstant</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;aliyun.keyid&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String keyId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;aliyun.keysecret&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String keySecret;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ACCESS_KEY_ID;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String ACCESS_KEY_SECRET;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterPropertiesSet</span><span class="params">()</span> &#123;</span><br><span class="line">        ACCESS_KEY_ID = keyId;</span><br><span class="line">        ACCESS_KEY_SECRET = keySecret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 utils 包中创建阿里云点播初始化工具类</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 阿里云点播初始化工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/17 22:03</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ALiYunVodSdkUtils</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DefaultAcsClient <span class="title function_">initVodClient</span><span class="params">(String accessKeyId, String accessKeySecret)</span> <span class="keyword">throws</span> ClientException &#123;</span><br><span class="line">        <span class="comment">// 点播服务接入区域 不能修改</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">regionId</span> <span class="operator">=</span> <span class="string">&quot;cn-shanghai&quot;</span>;</span><br><span class="line">        <span class="type">DefaultProfile</span> <span class="variable">profile</span> <span class="operator">=</span> DefaultProfile.getProfile(</span><br><span class="line">                regionId,</span><br><span class="line">                accessKeyId,</span><br><span class="line">                accessKeySecret);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultAcsClient</span>(profile);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417220543823-1378154043.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417220543823-1378154043.png" alt="img"></a></p><h5 id="请求接口与业务"><a href="#请求接口与业务" class="headerlink" title="请求接口与业务"></a>请求接口与业务</h5><p>在 Controller 包下创建 VodController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 视频点播与上传请求接口与业务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/17 22:06</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_vod/vod&quot;)</span></span><br><span class="line"><span class="meta">@CrossOrigin</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;视频组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> VodService vodService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 视频上传</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;视频上传&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">uploadVideo</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">videoId</span> <span class="operator">=</span> vodService.uploadVideo(file);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().message(<span class="string">&quot;视频上传成功!&quot;</span>).data(<span class="string">&quot;videoId&quot;</span>, videoId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 删除视频</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;删除视频&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/delete-vod/&#123;videoId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">removeVideo</span><span class="params">(<span class="meta">@PathVariable</span> String videoId)</span> &#123;</span><br><span class="line">        vodService.deleteVideo(videoId);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().message(<span class="string">&quot;视频删除成功!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传业务与删除业务，在 service 包下创建 <code>VodService</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417221230478-2126749140.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417221230478-2126749140.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 视频组业务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/17 22:10</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">VodService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 上传视频</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 视频文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 上传结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">uploadVideo</span><span class="params">(MultipartFile file)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 根据 videoId 删除对应的视频</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> videoId 删除结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">deleteVideo</span><span class="params">(String videoId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着在 service 包当中创建 impl 包在创建对应的 <code>VodServiceImpl</code> 实现类如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417222155555-652302230.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417222155555-652302230.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 视频组业务实现类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/4/17 22:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">VodService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">uploadVideo</span><span class="params">(MultipartFile file)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取文件输入流</span></span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取文件名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> Optional.ofNullable(file.getOriginalFilename()).orElse(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//截取标题</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">title</span> <span class="operator">=</span> originalFilename.substring(<span class="number">0</span>, originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取上传请求</span></span><br><span class="line">            <span class="type">UploadStreamRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadStreamRequest</span>(</span><br><span class="line">                    VodConstant.ACCESS_KEY_ID,</span><br><span class="line">                    VodConstant.ACCESS_KEY_SECRET,</span><br><span class="line">                    title, originalFilename, inputStream);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 开始上传</span></span><br><span class="line">            <span class="type">UploadVideoImpl</span> <span class="variable">uploader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UploadVideoImpl</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 上传完毕后,服务器给于响应</span></span><br><span class="line">            <span class="type">UploadStreamResponse</span> <span class="variable">response</span> <span class="operator">=</span> uploader.uploadStream(request);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果设置回调URL无效，不影响视频上传，可以返回VideoId同时会返回错误码。</span></span><br><span class="line">            <span class="comment">// 其他情况上传失败时，VideoId为空，此时需要根据返回错误码分析具体错误原因</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">videoId</span> <span class="operator">=</span> response.getVideoId();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!response.isSuccess()) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">errorMessage</span> <span class="operator">=</span></span><br><span class="line">                        <span class="string">&quot;阿里云上传错误：&quot;</span> + <span class="string">&quot;code：&quot;</span> + response.getCode() + <span class="string">&quot;, message：&quot;</span> + response.getMessage();</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isEmpty(videoId)) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, errorMessage);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> videoId;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;vod 服务上传失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteVideo</span><span class="params">(String videoId)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取客户端请求</span></span><br><span class="line">            <span class="type">DefaultAcsClient</span> <span class="variable">client</span> <span class="operator">=</span> ALiYunVodSdkUtils.initVodClient(</span><br><span class="line">                    VodConstant.ACCESS_KEY_ID,</span><br><span class="line">                    VodConstant.ACCESS_KEY_SECRET);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建删除请求</span></span><br><span class="line">            <span class="type">DeleteVideoRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DeleteVideoRequest</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置要删除的视频ID</span></span><br><span class="line">            request.setVideoIds(videoId);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 删除请求后服务器给予的响应</span></span><br><span class="line">            client.getAcsResponse(request);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;视频删除失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="36-视频处理-小节视频上传前端"><a href="#36-视频处理-小节视频上传前端" class="headerlink" title="36-视频处理-小节视频上传前端"></a>36-视频处理-小节视频上传前端</h2><p>在 nginx 当中配置上传地址与最大上传容量</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417223059922-987319884.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417223059922-987319884.png" alt="img"></a></p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client_max_body_size 1024m;</span><br></pre></td></tr></table></figure><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ /service_vod &#123;</span><br><span class="line">proxy_pass http://localhost:8003;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 api 当中创建 <code>vod.js</code> 前端请求文件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417225120234-806477469.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210417225120234-806477469.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">API_NAME</span> = <span class="string">&#x27;/service_vod/vod&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">deleteVodById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;API_NAME&#125;</span>/delete_vod/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后端首先是接口路径名称如下，然后紧接着就是修改 <code>ContentVideoInfoVO</code> 添加一个新的字段</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102402175-1560501479.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102402175-1560501479.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102533481-1313532385.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102533481-1313532385.png" alt="img"></a></p><p>在 chapte.vue 当中定义相关属性</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102649547-1889437056.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418102649547-1889437056.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 小节视频标题</span></span><br><span class="line"><span class="attr">videoOriginalName</span>: <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上传文件列表</span></span><br><span class="line"><span class="attr">fileList</span>: [],</span><br><span class="line"><span class="attr">BASE_API</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span></span><br></pre></td></tr></table></figure><p>导入 vod 请求文件</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> vod <span class="keyword">from</span> <span class="string">&quot;@/api/video/vod/vod&quot;</span>;</span><br></pre></td></tr></table></figure><p>添加上传组件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418103200389-1125525207.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418103200389-1125525207.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item label=&quot;上传视频&quot;&gt;</span><br><span class="line">  &lt;!-- 上传视频 --&gt;</span><br><span class="line">  &lt;el-upload</span><br><span class="line">    :on-success=&quot;handleVodUploadSuccess&quot;</span><br><span class="line">    :on-remove=&quot;handleVodRemove&quot;</span><br><span class="line">    :before-remove=&quot;beforeVodRemove&quot;</span><br><span class="line">    :on-exceed=&quot;handleUploadExceed&quot;</span><br><span class="line">    :file-list=&quot;fileList&quot;</span><br><span class="line">    :action=&quot;BASE_API+&#x27;/service_vod/vod/upload&#x27;&quot;</span><br><span class="line">    :limit=&quot;1&quot;</span><br><span class="line">    class=&quot;upload-demo&quot;&gt;</span><br><span class="line">    &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;上传视频&lt;/el-button&gt;</span><br><span class="line">    &lt;el-tooltip placement=&quot;right-end&quot;&gt;</span><br><span class="line">      &lt;div slot=&quot;content&quot;&gt;最大支持1G，&lt;br&gt;</span><br><span class="line">        支持3GP、ASF、AVI、DAT、DV、FLV、F4V、&lt;br&gt;</span><br><span class="line">        GIF、M2T、M4V、MJ2、MJPEG、MKV、MOV、MP4、&lt;br&gt;</span><br><span class="line">        MPE、MPG、MPEG、MTS、OGG、QT、RM、RMVB、&lt;br&gt;</span><br><span class="line">        SWF、TS、VOB、WMV、WEBM 等视频格式上传</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;i class=&quot;el-icon-question&quot;/&gt;</span><br><span class="line">    &lt;/el-tooltip&gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><p>定义组件方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动上传成功回调</span></span><br><span class="line"><span class="title function_">handleVodUploadSuccess</span>(<span class="params">response, file, fileList</span>) &#123;</span><br><span class="line">  <span class="comment">// 获取当前上传视频的ID</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span> = response.<span class="property">data</span>.<span class="property">videoId</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取当前上传视频标题</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span> = file.<span class="property">name</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置文件名回显</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">fileList</span> = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span>&#125;];</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 已经超过了指定数量时,调用此方法</span></span><br><span class="line"><span class="title function_">handleUploadExceed</span>(<span class="params">files, fileList</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;请先删除已上传的视频!&#x27;</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除之前提示信息</span></span><br><span class="line"><span class="title function_">beforeVodRemove</span>(<span class="params">file, fileList</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">this</span>.$confirm(<span class="string">`确定删除 <span class="subst">$&#123;file.name&#125;</span>？`</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除小节视频</span></span><br><span class="line"><span class="title function_">handleVodRemove</span>(<span class="params">file, fileList</span>) &#123;</span><br><span class="line">  vod.<span class="title function_">deleteVodById</span>(<span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 清空当前小节视频id</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空当前小节视频标题</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fileList</span> = [];</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>更改之前的小节编辑回显代码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">editorContentVideo</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">dialogVideoFormVisible</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  contentVideo.<span class="title function_">getVideoInfoById</span>(id).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span> = res.<span class="property">data</span>.<span class="property">item</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果有视频, 显示视频标题</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span> !== <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">fileList</span> = [&#123;<span class="string">&#x27;name&#x27;</span>: <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span>&#125;];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>可能还有一个小问题后面在解决</p><h2 id="37-视频处理-集成Nacos"><a href="#37-视频处理-集成Nacos" class="headerlink" title="37-视频处理-集成Nacos"></a>37-视频处理-集成Nacos</h2><p>在本地搭建一个 nacos</p><ul><li>搭建教程请参考：<a href="https://www.cnblogs.com/TangXiaoHuiHui/protected/articles/12467387.html">https://www.cnblogs.com/TangXiaoHuiHui/protected/articles/12467387.html</a></li><li>密码为：303158131</li></ul><p>为啥要集成 nacos 了呢，原因就是我们在删除小节的时候需要把对应的视频也一起进行删除这里就设计到了微服务之间的调用问题了，这个时候把 nacos 搭建起来里面包含了注册中心服务治理等等，在 service_video 当中调用 service_vod 服务当中的方法，首先处理 service_video 服务模块当中的配置，再次更换全局依赖，也就是最外层的那个 pom.xml 里面的依赖内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130329488-159396780.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130329488-159396780.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mybatis-plus.version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">mybatis-plus.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">velocity.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">velocity.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swagger.version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">swagger.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jodatime.version</span>&gt;</span>2.10.1<span class="tag">&lt;/<span class="name">jodatime.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.5.1<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jwt.version</span>&gt;</span>0.7.0<span class="tag">&lt;/<span class="name">jwt.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-core.version</span>&gt;</span>4.3.3<span class="tag">&lt;/<span class="name">aliyun-java-sdk-core.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-oss.version</span>&gt;</span>3.10.2<span class="tag">&lt;/<span class="name">aliyun-sdk-oss.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span>2.15.2<span class="tag">&lt;/<span class="name">aliyun-java-sdk-vod.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span>1.4.13<span class="tag">&lt;/<span class="name">aliyun-sdk-vod-upload.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">gson.version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">gson.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">json.version</span>&gt;</span>20170516<span class="tag">&lt;/<span class="name">json.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commons-dbutils.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">commons-dbutils.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canal.client.version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">canal.client.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">docker.image.prefix</span>&gt;</span>zx<span class="tag">&lt;/<span class="name">docker.image.prefix</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cloud-alibaba.version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">cloud-alibaba.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--锁定依赖的版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Spring Cloud--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;cloud-alibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--mybatis-plus 持久层--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis-plus.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- velocity 模板引擎, Mybatis Plus 代码生成器需要 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;velocity.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--swagger--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--swagger ui--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;swagger.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aliyunOSS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--日期时间工具--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jodatime.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--xls--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--xlsx--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--commons-io--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--httpclient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;gson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jwt.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aliyun--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-core.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-vod<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-vod.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-vod-upload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-sdk-vod-upload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;json.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-dbutils.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.otter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>canal.client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;canal.client.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 service 当中添加依赖</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130300507-1397784040.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130300507-1397784040.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h3><p>在 service_video 配置文件当中添加 nacos 配置，我这里的 nacos 没有搭建集群不然可以直接配置的是 nginx 的配置我这里直接配置的 nacos 真实地址如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130520383-59663878.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418130520383-59663878.png" alt="img"></a></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cloud:</span></span><br><span class="line">  <span class="attr">nacos:</span></span><br><span class="line">    <span class="attr">discovery:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.31</span><span class="number">.45</span><span class="string">:8848</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">transport:</span></span><br><span class="line">      <span class="attr">dashboard:</span> <span class="string">localhost:8088</span></span><br></pre></td></tr></table></figure><p>当然这里也添加了 <code>sentinel</code> 相关的配置内容，搭建sentinel也在之前的文章当中有不在介绍多了，自行参考文章搭建即可然后对应的地址放入即可</p><p>在 service_video 启动类当中添加如下注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br></pre></td></tr></table></figure><h3 id="Feign-客户端调用"><a href="#Feign-客户端调用" class="headerlink" title="Feign 客户端调用"></a>Feign 客户端调用</h3><p>在 service_video 模块当中创建 client 包, 编写 Feign 调用客户端</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418180421679-518264770.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418180421679-518264770.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;service-vod&quot;, fallback = VodFeignClientFallBack.class)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">VodClient</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据 videoId 删除视频</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> videoId 视频ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/service_vod/vod/delete_vod/&#123;videoId&#125;&quot;)</span></span><br><span class="line">    ResponseResult <span class="title function_">deleteAliyunVideo</span><span class="params">(<span class="meta">@PathVariable(&quot;videoId&quot;)</span> String videoId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>降级处理方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418131918992-154666872.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418131918992-154666872.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VodFeignClientFallBack</span> <span class="keyword">implements</span> <span class="title class_">VodClient</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">deleteAliYunVideo</span><span class="params">(String videoId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.error().message(<span class="string">&quot;熔断处理-调用超时！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="业务调用"><a href="#业务调用" class="headerlink" title="业务调用"></a>业务调用</h3><p>修改 ContentVideoController 中的 <code>removeById</code> 的实现类如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418132339537-1092800176.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418132339537-1092800176.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> VodClient vodClient;</span><br></pre></td></tr></table></figure><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteVideoById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="comment">// 删除小节对应的视频</span></span><br><span class="line">    <span class="type">ContentVideo</span> <span class="variable">contentVideo</span> <span class="operator">=</span> baseMapper.selectById(id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取小节对应的视频</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">videoSourceId</span> <span class="operator">=</span> contentVideo.getVideoSourceId();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否有小节视频</span></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(videoSourceId)) &#123;</span><br><span class="line">        <span class="comment">// 删除视频</span></span><br><span class="line">        <span class="comment">// 服务之间调用 Nacos</span></span><br><span class="line">        <span class="type">ResponseResult</span> <span class="variable">result</span> <span class="operator">=</span> vodClient.deleteAliYunVideo(videoSourceId);</span><br><span class="line">        <span class="keyword">if</span> (!result.getSuccess()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, result.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> baseMapper.deleteById(id);</span><br><span class="line">    <span class="keyword">return</span> result &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加 Feign 与 Sentinel 的支持修改service_video模块的 application.yml</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>移动 nacos 和 Sentinel 配置内容的位置如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418162708570-1142223172.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418162708570-1142223172.png" alt="img"></a></p><p>service_vod 模块配置文件内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418163256335-107352933.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418163256335-107352933.png" alt="img"></a></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cloud:</span></span><br><span class="line">  <span class="attr">nacos:</span></span><br><span class="line">    <span class="attr">discovery:</span></span><br><span class="line">      <span class="comment"># nacos服务的地址，不要加http</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br></pre></td></tr></table></figure><p>service_upload 模块配置文件内容同上添加一样的内容进去</p><h3 id="修复问题"><a href="#修复问题" class="headerlink" title="修复问题"></a>修复问题</h3><p>添加章节成功之后再次点击添加章节上一次添加的数据没有清空效果如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418164707763-1661271349.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418164707763-1661271349.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418165250252-1167379537.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418165250252-1167379537.png" alt="img"></a></p><p>编辑小节视频名称回显BUG，我就不复现了自行去修改</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418165608616-906412678.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418165608616-906412678.png" alt="img"></a></p><p>修改后端添加一个方法，用来清空已经删除的视频的信息如下，修改 <code>ContentVideoController</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418174722703-1666700713.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418174722703-1666700713.png" alt="img"></a></p><p>修改 <code>ContentVideoService</code></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt;</span></span><br><span class="line"><span class="comment"> * 根据视频ID删除小节视频</span></span><br><span class="line"><span class="comment"> * &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 视频ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">deleteContentVideoById</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>实现类如下</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteContentVideoById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;ContentVideo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;video_source_id&quot;</span>, id);</span><br><span class="line"></span><br><span class="line">    <span class="type">ContentVideo</span> <span class="variable">contentVideo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideo</span>();</span><br><span class="line">    contentVideo.setVideoSourceId(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    contentVideo.setVideoOriginalName(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    baseMapper.update(contentVideo, queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改前端的 contentVideo.js 文件添加请求 api 方法如下</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除小节视频</span></span><br><span class="line"><span class="title function_">deleteContentVideoById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/deleteContentVideoById/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>修改 <code>chapter.vue</code> 改造删除小节视频方法如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418175219204-1787382928.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418175219204-1787382928.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除小节视频</span></span><br><span class="line"><span class="title function_">handleVodRemove</span>(<span class="params">file, fileList</span>) &#123;</span><br><span class="line">  vod.<span class="title function_">deleteVodById</span>(<span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 清空当前小节视频id</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空当前小节视频标题</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoOriginalName</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">fileList</span> = [];</span><br><span class="line">    <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: response.<span class="property">message</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  contentVideo.<span class="title function_">deleteContentVideoById</span>(<span class="variable language_">this</span>.<span class="property">contentVideo</span>.<span class="property">videoSourceId</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>修改 service 下的子模块的服务名称如下在中间加一个横杠如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418181430763-1510846031.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418181430763-1510846031.png" alt="img"></a></p><h2 id="38-视频处理-添加网关gateway"><a href="#38-视频处理-添加网关gateway" class="headerlink" title="38-视频处理-添加网关gateway"></a>38-视频处理-添加网关gateway</h2><h3 id="创建网关微服务"><a href="#创建网关微服务" class="headerlink" title="创建网关微服务"></a>创建网关微服务</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418182424730-1293532122.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418182424730-1293532122.png" alt="img"></a></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><p>修改 gateway 服务的 pom.xml</p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>top.it6666<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common_utils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--服务调用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 gateway 启动类</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418182911133-1127682913.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418182911133-1127682913.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GateWayApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(GateWayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 resources 当中创建配置文件 <code>application.yml</code></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%d&#123;HH:mm:ss.SSS&#125; %clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 此实例注册到服务端的name</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-video</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-video</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/service_video/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-vod</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-vod</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/service_vod/**</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-upload</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://service-upload</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/service_upload/**</span></span><br></pre></td></tr></table></figure><p>在 gateway 当中添加跨域配置处理如下, 创建 config 包, 在该包下创建跨域处理配置</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183315735-1741061821.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183315735-1741061821.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsWebFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        config.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>(<span class="keyword">new</span> <span class="title class_">PathPatternParser</span>());</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsWebFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取消控制器上的跨域注解, 把前端请求地址改成网关请求地址如下图，Controller 跨域注解全部去除</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183415308-1393069558.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183415308-1393069558.png" alt="img"></a></p><p>修改前端为 gateway 请求地址</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183725384-877411091.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210418183725384-877411091.png" alt="img"></a></p><h2 id="39-权限控制-权限工程搭建"><a href="#39-权限控制-权限工程搭建" class="headerlink" title="39-权限控制-权限工程搭建"></a>39-权限控制-权限工程搭建</h2><h3 id="创建权限工程"><a href="#创建权限工程" class="headerlink" title="创建权限工程"></a>创建权限工程</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210420151601975-740796822.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210420151601975-740796822.png" alt="img"></a></p><p>添加对应的启动类 <code>AuthApplication</code> 代码如下所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210421194013647-901501311.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210421194013647-901501311.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication()</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;top.it6666.service_auth.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(AuthApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在添加对应的配置文件 <code>application.yml</code> 内容如下，其中 redis 的配置我移除了后面在加上即可我会贴出来的</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8004</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-auth</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">HikariPool</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">top/it6666/service_auth/mapper/xml/*.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="创建对应的数据库表"><a href="#创建对应的数据库表" class="headerlink" title="创建对应的数据库表"></a>创建对应的数据库表</h3><p>用户表 <code>auth_user</code></p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `auth_user` (</span><br><span class="line">  `id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;会员id&#x27;</span>,</span><br><span class="line">  `open_id` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;微信openid&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">  `nick_name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">  `salt` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">  `token` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户签名&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">1</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_username` (`open_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci COMMENT<span class="operator">=</span><span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><p>角色表 <code>auth_role</code></p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `auth_role` (</span><br><span class="line">  `id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;角色id&#x27;</span>,</span><br><span class="line">  `role_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;角色名称&#x27;</span>,</span><br><span class="line">  `role_code` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色编码&#x27;</span>,</span><br><span class="line">  `remark` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">1</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;角色&#x27;</span>;</span><br></pre></td></tr></table></figure><p>菜单权限表 <code>auth_menu</code></p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `auth_menu` (</span><br><span class="line">  `id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">  `pid` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;所属上级&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">  `type` tinyint(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;类型(1:菜单,2:按钮)&#x27;</span>,</span><br><span class="line">  `permission_value` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;权限值&#x27;</span>,</span><br><span class="line">  `path` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;访问路径&#x27;</span>,</span><br><span class="line">  `component` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;组件路径&#x27;</span>,</span><br><span class="line">  `icon` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;图标&#x27;</span>,</span><br><span class="line">  `status` tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;状态(0:禁止,1:正常)&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">1</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_pid` (`pid`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci COMMENT<span class="operator">=</span><span class="string">&#x27;菜单权限&#x27;</span>;</span><br></pre></td></tr></table></figure><p>用户与角色关系表 <code>auth_user_role</code></p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `auth_user_role` (</span><br><span class="line">  `id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;主键id&#x27;</span>,</span><br><span class="line">  `role_id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;角色id&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">1</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_role_id` (`role_id`),</span><br><span class="line">  KEY `idx_user_id` (`user_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;用户角色&#x27;</span>;</span><br></pre></td></tr></table></figure><p>角色与菜单的关系表 <code>auth_role_menu</code></p><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `auth_role_menu` (</span><br><span class="line">  `id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `role_id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `permission_id` <span class="type">char</span>(<span class="number">19</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `is_deleted` tinyint(<span class="number">1</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `idx_role_id` (`role_id`),</span><br><span class="line">  KEY `idx_permission_id` (`permission_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;角色菜单&#x27;</span>;</span><br></pre></td></tr></table></figure><p>rbac 表对应的代码生成器代码如下放入 test 运行即可生成对应层级的代码</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210422092302504-225737665.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210422092302504-225737665.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGeneratorTestCase</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rbacGenerator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置输出路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Java\\VIDEO_Parent\\service\\service_auth\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成service层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_auth&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// top.it6666.模块名称.功能 → top.it6666.service_auth.controller</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;auth_menu&quot;</span>, <span class="string">&quot;auth_role&quot;</span>, <span class="string">&quot;auth_role_menu&quot;</span>, <span class="string">&quot;auth_user&quot;</span>, <span class="string">&quot;auth_user_role&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略 驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;auth_&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="40-权限控制-用户管理"><a href="#40-权限控制-用户管理" class="headerlink" title="40-权限控制-用户管理"></a>40-权限控制-用户管理</h2><h3 id="后端-5"><a href="#后端-5" class="headerlink" title="后端"></a>后端</h3><p>修改 UserController 添加对应的 CRUD 以及分批角色，删除用户要把对应的角色与用户的关系表数据也紧接着删除掉，代码如下</p><p>，如下编写的业务就是 RBAC 了，我就快速的贴代码了，重点是在后面的 Jwt + Security + OAuth2 的知识点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 用户表 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_auth/admin/user&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;用户组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleService roleService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 获取管理用户，分页列表</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取管理用户，分页列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getUserList/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">index</span><span class="params">(<span class="meta">@PathVariable</span> Long page, <span class="meta">@PathVariable</span> Long limit, User userQueryVo)</span> &#123;</span><br><span class="line">        IPage&lt;User&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line"></span><br><span class="line">        QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(userQueryVo.getOpenId())) &#123;</span><br><span class="line">            queryWrapper.like(<span class="string">&quot;open_id&quot;</span>, userQueryVo.getOpenId());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        IPage&lt;User&gt; pageModel = userService.page(pageParam, queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok()</span><br><span class="line">                .data(<span class="string">&quot;items&quot;</span>, pageModel.getRecords())</span><br><span class="line">                .data(<span class="string">&quot;total&quot;</span>, pageModel.getTotal());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 新增管理用户</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;新增管理用户&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/saveUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        user.setPassword(Md5.encrypt(user.getPassword()));</span><br><span class="line">        userService.save(user);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 修改管理用户</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;修改管理用户&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/updateUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">updateById</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span> &#123;</span><br><span class="line">        user.setPassword(Md5.encrypt(user.getPassword()));</span><br><span class="line">        userService.updateById(user);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 删除管理用户</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;删除管理用户&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/removeUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">remove</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        userService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 批量删除用户</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;批量删除用户&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/batchRemoveUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">batchRemove</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;String&gt; idList)</span> &#123;</span><br><span class="line">        userService.removeByIds(idList);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户id查询用户</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据用户id查询用户&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getUserById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getUser</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;user&quot;</span>, userService.getById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID获取角色数据</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据用户ID获取角色数据&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getUserRoleData/&#123;userId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">toAssign</span><span class="params">(<span class="meta">@PathVariable</span> String userId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(roleService.findRoleByUserId(userId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID分配用户角色</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据用户ID分配用户角色&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/doAssignRole&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">doAssign</span><span class="params">(<span class="meta">@RequestParam</span> String userId, <span class="meta">@RequestParam</span> String[] roleId)</span> &#123;</span><br><span class="line">        roleService.saveUserRoleRelationShip(userId, roleId);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>紧接着修改 <code>RoleService</code> 接口，添加如下方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424141928072-1610829892.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424141928072-1610829892.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 角色 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RoleService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Role&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID获取角色数据</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 角色数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Map&lt;String, Object&gt; <span class="title function_">findRoleByUserId</span><span class="params">(String userId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID分配用户角色</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId 角色ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUserRoleRelationShip</span><span class="params">(String userId, String[] roleId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 RoleServiceImpl</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 角色 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;RoleMapper, Role&gt; <span class="keyword">implements</span> <span class="title class_">RoleService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserRoleService userRoleService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID获取角色数据</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">findRoleByUserId</span><span class="params">(String userId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.查询出所有的角色</span></span><br><span class="line">        List&lt;Role&gt; allRoles = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.当前用户选中的角色有哪些</span></span><br><span class="line">        QueryWrapper&lt;UserRole&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;UserRole&gt;()</span><br><span class="line">                .eq(<span class="string">&quot;user_id&quot;</span>, userId)</span><br><span class="line">                .select(<span class="string">&quot;role_id&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取到当前用户所在的角色关系</span></span><br><span class="line">        List&lt;UserRole&gt; userRoleList = userRoleService.list(queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取出所有的roleId 放到一个集合当中</span></span><br><span class="line">        List&lt;String&gt; roleIds = userRoleList.stream().map(UserRole::getRoleId).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据角色id,取出所有的角色对象</span></span><br><span class="line">        List&lt;Role&gt; userRoles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        allRoles.forEach(role -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (roleIds.contains(role.getId())) &#123;</span><br><span class="line">                userRoles.add(role);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; roleMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户的角色</span></span><br><span class="line">        roleMap.put(<span class="string">&quot;assignRoles&quot;</span>, userRoles);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有的角色</span></span><br><span class="line">        roleMap.put(<span class="string">&quot;allRolesList&quot;</span>, allRoles);</span><br><span class="line">        <span class="keyword">return</span> roleMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID分配用户角色</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUserRoleRelationShip</span><span class="params">(String userId, String[] roleId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.删除原来角色与用户之间的关系</span></span><br><span class="line">        userRoleService.remove(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;UserRole&gt;().eq(<span class="string">&quot;user_id&quot;</span>, userId));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.重新建立关系</span></span><br><span class="line">        List&lt;UserRole&gt; userRoleArrayList = Stream.of(roleId).map(role -&gt; &#123;</span><br><span class="line">            <span class="type">UserRole</span> <span class="variable">userRole</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserRole</span>();</span><br><span class="line">            userRole.setUserId(userId);</span><br><span class="line">            userRole.setRoleId(role);</span><br><span class="line">            <span class="keyword">return</span> userRole;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.批量保存关系</span></span><br><span class="line">        userRoleService.saveBatch(userRoleArrayList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>移动之前 server_video 微服务当中的 AppConfig，目的为了就是其它微服务如果也需要用到分页的配置和逻辑删除就不用再继续写冗余的配置文件内容了，我们的 server_auth 模块中有分页查询用户逻辑删除用户等等，但是 video 微服务当中也需要这样大家都是 server 的子服务就都会有对应的配置内容了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424142110938-526669719.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424142110938-526669719.png" alt="img"></a></p><p>修改 <code>gateway</code> 配置 server_auth 的网关服务转发规则，修改 gateway 的 application.yml</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-auth</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://service-auth</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/service_auth/**</span></span><br></pre></td></tr></table></figure><p>配置逻辑删除和属性的自动填充如下，每个实体类都自己加一下，不然你也可以按照报错自行排查问题</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424150821675-1429117866.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424150821675-1429117866.png" alt="img"></a></p><h3 id="前端-4"><a href="#前端-4" class="headerlink" title="前端"></a>前端</h3><p>修改路由文件 index.js 在路由当中添加路由</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424152508822-318130383.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424152508822-318130383.png" alt="img"></a></p><p>内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424152831819-1040448574.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424152831819-1040448574.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/auth&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&#x27;/auth/user/list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;权限管理&#x27;</span>,</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;权限管理&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;tree&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">children</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;user/list&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;用户管理&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/user/list&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;用户管理&#x27;</span>&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;user/add&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;用户添加&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/user/form&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;用户添加&#x27;</span>&#125;,</span><br><span class="line">      <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;user/update/:id&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;用户修改&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/user/form&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;用户修改&#x27;</span>&#125;,</span><br><span class="line">      <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;user/role/:id&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;用户角色&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/user/roleForm&#x27;</span>),</span><br><span class="line">      <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;用户角色&#x27;</span>&#125;,</span><br><span class="line">      <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 api 包中添加 user.js 编写请求方法内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424153854000-87288450.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424153854000-87288450.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/service_auth/admin/user&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 获取用户分页数据</span></span><br><span class="line">  <span class="title function_">getPageList</span>(<span class="params">page, limit, searchObj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getUserList/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="comment">// url查询字符串或表单键值对</span></span><br><span class="line">      <span class="attr">params</span>: searchObj</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据用户id查询用户</span></span><br><span class="line">  <span class="title function_">getUserById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getUserById/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 保存用户</span></span><br><span class="line">  <span class="title function_">save</span>(<span class="params">user</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/saveUser`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: user</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 更新用户</span></span><br><span class="line">  <span class="title function_">updateById</span>(<span class="params">user</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/updateUser`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: user</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据用户id查询用户下角色信息</span></span><br><span class="line">  <span class="title function_">getAssign</span>(<span class="params">userId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getUserRoleData/<span class="subst">$&#123;userId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 保存用户角色信息</span></span><br><span class="line">  <span class="title function_">saveAssign</span>(<span class="params">userId, roleId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/doAssignRole`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">params</span>: &#123;userId, roleId&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 删除用户</span></span><br><span class="line">  <span class="title function_">removeById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/removeUser/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 批量删除用户</span></span><br><span class="line">  <span class="title function_">removeRows</span>(<span class="params">idList</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/batchRemoveUser`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: idList</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>都是之前写过的，我直接贴代码如下，如下是 <code>list.vue</code> 的内容</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424154009223-1197920160.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424154009223-1197920160.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!--查询表单--&gt;</span><br><span class="line">    &lt;el-form :inline=&quot;true&quot; class=&quot;demo-form-inline&quot;&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;searchObj.username&quot; placeholder=&quot;用户名&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-search&quot; @click=&quot;fetchData()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;default&quot; @click=&quot;resetData()&quot;&gt;清空&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;!-- 工具条 --&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; @click=&quot;addUser()&quot;&gt;添加&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; @click=&quot;removeRows()&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--用户列表 --&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      v-loading=&quot;listLoading&quot;</span><br><span class="line">      :data=&quot;list&quot;</span><br><span class="line">      stripe</span><br><span class="line">      style=&quot;width: 100%&quot;</span><br><span class="line">      @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        type=&quot;selection&quot;</span><br><span class="line">        width=&quot;55&quot;/&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        label=&quot;序号&quot;</span><br><span class="line">        width=&quot;70&quot;</span><br><span class="line">        align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; (page - 1) * limit + scope.$index + 1 &#125;&#125;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;openId&quot; label=&quot;用户名&quot; align=&quot;center&quot;/&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;nickName&quot; label=&quot;用户昵称&quot; align=&quot;center&quot;/&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;router-link :to=&quot;&#x27;/auth/user/role/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">            &lt;el-button type=&quot;success&quot; size=&quot;mini&quot;&gt;绑定角色&lt;/el-button&gt;</span><br><span class="line">          &lt;/router-link&gt;</span><br><span class="line">          &amp;nbsp;</span><br><span class="line">          &lt;router-link :to=&quot;&#x27;/auth/user/update/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">            &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot;&gt;修改&lt;/el-button&gt;</span><br><span class="line">          &lt;/router-link&gt;</span><br><span class="line">          &amp;nbsp;</span><br><span class="line">          &lt;el-button type=&quot;danger&quot; @click=&quot;removeDataById(scope.row.id)&quot; size=&quot;mini&quot;&gt;删除&lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 分页组件 --&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      :current-page=&quot;page&quot;</span><br><span class="line">      :total=&quot;total&quot;</span><br><span class="line">      :page-size=&quot;limit&quot;</span><br><span class="line">      :page-sizes=&quot;[5, 10, 20, 30, 40, 50, 100]&quot;</span><br><span class="line">      style=&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">      layout=&quot;sizes, prev, pager, next, jumper, -&gt;, total, slot&quot;</span><br><span class="line">      @current-change=&quot;fetchData&quot;</span><br><span class="line">      @size-change=&quot;changeSize&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import user from &#x27;@/api/video/auth/user&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;list&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 数据是否正在加载</span><br><span class="line">      listLoading: true,</span><br><span class="line"></span><br><span class="line">      // 用户列表</span><br><span class="line">      list: null,</span><br><span class="line"></span><br><span class="line">      // 数据库中的总记录数</span><br><span class="line">      total: 0,</span><br><span class="line"></span><br><span class="line">      // 默认页码</span><br><span class="line">      page: 1,</span><br><span class="line"></span><br><span class="line">      // 每页记录数</span><br><span class="line">      limit: 10,</span><br><span class="line"></span><br><span class="line">      // 查询条件的表单对象</span><br><span class="line">      searchObj: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">      // 批量选择中选择的记录列表</span><br><span class="line">      multipleSelection: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    // 加载页面数据</span><br><span class="line">    this.fetchData();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 当页码发生改变的时候</span><br><span class="line">    changeSize(size) &#123;</span><br><span class="line">      this.limit = size;</span><br><span class="line">      this.fetchData(1);</span><br><span class="line">    &#125;,</span><br><span class="line">    addUser() &#123;</span><br><span class="line">      // 添加用户,跳转到添加路由</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/auth/user/add&#x27;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 加载用户数据</span><br><span class="line">    fetchData(page = 1) &#123;</span><br><span class="line">      this.page = page;</span><br><span class="line">      user.getPageList(this.page, this.limit, this.searchObj).then(</span><br><span class="line">        response =&gt; &#123;</span><br><span class="line">          this.list = response.data.items;</span><br><span class="line">          this.total = response.data.total;</span><br><span class="line"></span><br><span class="line">          // 数据加载并绑定成功</span><br><span class="line">          this.listLoading = false;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">    // 重置查询表单</span><br><span class="line">    resetData() &#123;</span><br><span class="line">      this.searchObj = &#123;&#125;;</span><br><span class="line">      this.fetchData();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 根据id删除数据</span><br><span class="line">    removeDataById(id) &#123;</span><br><span class="line">      this.$confirm(&#x27;此操作将永久删除该记录, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">        type: &#x27;warning&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        // 点击确定，远程调用ajax</span><br><span class="line">        return user.removeById(id);</span><br><span class="line">      &#125;).then((response) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        // 重新加载列表</span><br><span class="line">        this.fetchData(this.page);</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: response.message</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(() =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;info&#x27;,</span><br><span class="line">          message: &#x27;已取消删除&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 当表格复选框选项发生变化的时候触发</span><br><span class="line">    handleSelectionChange(selection) &#123;</span><br><span class="line">      this.multipleSelection = selection;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 批量删除</span><br><span class="line">    removeRows() &#123;</span><br><span class="line">      if (this.multipleSelection.length === 0) &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;warning&#x27;,</span><br><span class="line">          message: &#x27;请选择要删除的记录!&#x27;</span><br><span class="line">        &#125;)</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      this.$confirm(&#x27;此操作将永久删除该记录, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">        type: &#x27;warning&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        let idList = [];</span><br><span class="line">        this.multipleSelection.forEach(item =&gt; &#123;</span><br><span class="line">          idList.push(item.id);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 调用api</span><br><span class="line">        return user.removeRows(idList);</span><br><span class="line">      &#125;).then((response) =&gt; &#123;</span><br><span class="line">        this.fetchData(this.page)</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: response.message</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(() =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;info&#x27;,</span><br><span class="line">          message: &#x27;已取消删除&#x27;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>添加与更新页面，<code>form.vue</code> 内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424164427568-1075774235.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424164427568-1075774235.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;user&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;user&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;validateRules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;120px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;user.openId&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户昵称&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;user.nickName&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">v-if</span>=<span class="string">&quot;!user.id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;用户密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;user.password&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">:disabled</span>=<span class="string">&quot;saveBtnDisabled&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;saveOrUpdate&quot;</span>&gt;</span>保存<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> userApi <span class="keyword">from</span> <span class="string">&#x27;@/api/video/auth/user&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> defaultForm = &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">openId</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">nickName</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">validatePass</span> = (<span class="params">rule, value, callback</span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">if</span> (value.<span class="property">length</span> &lt; <span class="number">6</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;密码不能小于6位&#x27;</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">callback</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;form&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">user</span>: defaultForm,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 保存按钮是否禁用,</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">saveBtnDisabled</span>: <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">validateRules</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">openId</span>: [&#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;用户名必须输入&#x27;</span>&#125;],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">password</span>: [&#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>, <span class="attr">validator</span>: validatePass&#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 监听器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">watch</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 路由变化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    $route(to, <span class="keyword">from</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="title function_">init</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// 生命周期方法（在路由切换，组件不变的情况下不会被调用）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">this</span>.<span class="title function_">init</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 表单初始化</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> id = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">params</span>.<span class="property">id</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="title function_">fetchDataById</span>(id);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 对象拓展运算符：拷贝对象，而不是赋值对象的引用</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">user</span> = &#123;...defaultForm&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveOrUpdate</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">user</span>.<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (valid) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">// 防止表单重复提交</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">saveBtnDisabled</span> = <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">user</span>.<span class="property">id</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="title function_">saveData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="title function_">updateData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 新增用户</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">saveData</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      userApi.<span class="title function_">save</span>(<span class="variable language_">this</span>.<span class="property">user</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// debugger</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (response.<span class="property">success</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: response.<span class="property">message</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/auth/user/list&#x27;</span>&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 根据id更新记录</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">updateData</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// teacher数据的获取</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      userApi.<span class="title function_">updateById</span>(<span class="variable language_">this</span>.<span class="property">user</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (response.<span class="property">success</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.$message(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: response.<span class="property">message</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/auth/user/list&#x27;</span>&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 根据id查询记录</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">fetchDataById</span>(<span class="params">id</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      userApi.<span class="title function_">getUserById</span>(id).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">this</span>.<span class="property">user</span> = response.<span class="property">data</span>.<span class="property">user</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>绑定角色的选择页面，<code>roleForm.vue</code> 内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424224628964-1920210402.png"><img src="https://img2020.cnblogs.com/blog/2105804/202104/2105804-20210424224628964-1920210402.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-checkbox :indeterminate=&quot;isIndeterminate&quot;</span><br><span class="line">                 v-model=&quot;checkAll&quot;</span><br><span class="line">                 @change=&quot;handleCheckAllChange&quot;&gt;全选</span><br><span class="line">    &lt;/el-checkbox&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=&quot;margin: 15px 0;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;el-checkbox-group v-model=&quot;checkedRoles&quot; @change=&quot;handlecheckedRolesChange&quot;&gt;</span><br><span class="line">      &lt;el-checkbox v-for=&quot;role in roles&quot;</span><br><span class="line">                   :label=&quot;role.id&quot;</span><br><span class="line">                   :key=&quot;role.id&quot;&gt;</span><br><span class="line">        &#123;&#123; role.roleName &#125;&#125;</span><br><span class="line">      &lt;/el-checkbox&gt;</span><br><span class="line">    &lt;/el-checkbox-group&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;el-button :disabled=&quot;saveBtnDisabled&quot; type=&quot;primary&quot; @click=&quot;update&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import userApi from &#x27;@/api/video/auth/user&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;roleForm&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 是否全部选中</span><br><span class="line">      checkAll: false,</span><br><span class="line"></span><br><span class="line">      // 已选中列表</span><br><span class="line">      checkedRoles: [],</span><br><span class="line"></span><br><span class="line">      // 所有的角色</span><br><span class="line">      roles: [],</span><br><span class="line"></span><br><span class="line">      isIndeterminate: true,</span><br><span class="line">      userId: &#x27;&#x27;,</span><br><span class="line"></span><br><span class="line">      // 保存按钮是否禁用</span><br><span class="line">      saveBtnDisabled: false</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    init() &#123;</span><br><span class="line">      if (this.$route.params &amp;&amp; this.$route.params.id) &#123;</span><br><span class="line">        // 获取用户id</span><br><span class="line">        this.userId = this.$route.params.id;</span><br><span class="line"></span><br><span class="line">        // 查询用户</span><br><span class="line">        this.getById(this.userId);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getById(userId) &#123;</span><br><span class="line">      userApi.getAssign(userId).then(response =&gt; &#123;</span><br><span class="line">        // 获取用户角色</span><br><span class="line">        let jsonObj = response.data.assignRoles;</span><br><span class="line"></span><br><span class="line">        // 设置角色选中状态</span><br><span class="line">        this.checkedRoles = this.getJsonToList(jsonObj, &quot;id&quot;);</span><br><span class="line">        this.roles = response.data.allRolesList;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 把 json 数据转成 string 再转成对象，根据 Key 获取value数据</span><br><span class="line">    getJsonToList(json, key) &#123;</span><br><span class="line">      // 把JSON字符串转成对象</span><br><span class="line">      let list = JSON.parse(JSON.stringify(json));</span><br><span class="line">      let strText = [];</span><br><span class="line"></span><br><span class="line">      // 遍历这个集合对象，获取key的值</span><br><span class="line">      for (let i = 0; i &lt; list.length; i++) &#123;</span><br><span class="line">        strText.push(list[i][key]);</span><br><span class="line">      &#125;</span><br><span class="line">      return strText;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 全选</span><br><span class="line">    handleCheckAllChange(val) &#123;</span><br><span class="line">      this.checkedRoles = val ? this.roles : [];</span><br><span class="line">      this.isIndeterminate = false;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 切换角色</span><br><span class="line">    handlecheckedRolesChange(value) &#123;</span><br><span class="line">      let checkedCount = value.length;</span><br><span class="line">      this.checkAll = checkedCount === this.roles.length;</span><br><span class="line">      this.isIndeterminate = checkedCount &gt; 0 &amp;&amp; checkedCount &lt; this.roles.length;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 更新提交</span><br><span class="line">    update() &#123;</span><br><span class="line">      // 防止表单重复提交</span><br><span class="line">      this.saveBtnDisabled = true;</span><br><span class="line"></span><br><span class="line">      let ids = this.checkedRoles.join(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">      //修改权限</span><br><span class="line">      userApi.saveAssign(this.userId, ids).then(response =&gt; &#123;</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: &#x27;保存成功&#x27;</span><br><span class="line">          &#125;);</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/auth/user/list&#x27;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>自行启动项目进行测试我自己已经测试过了</p><h2 id="41-权限控制-角色管理"><a href="#41-权限控制-角色管理" class="headerlink" title="41-权限控制-角色管理"></a>41-权限控制-角色管理</h2><p>修改 <code>auth_user</code> 表的，<code>open_id</code> 字段，因为这个表是给工作人员使用的，也就是内部自己使用的系统，后面我会编写一套专门提供给用户使用的那个会使用到微信登录所以字段取值为 open_id，把当前这个表的 open_id 改为 <code>username</code> SQL 如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE `video_db`.`auth_user` CHANGE COLUMN `open_id` `username` VARCHAR ( 20 ) CHARACTER </span><br><span class="line">SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;用户名&#x27; AFTER `id`;</span><br></pre></td></tr></table></figure><p>修改 <code>UserController</code> 的分页查询中的过滤条件如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501001116922-1148080581.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501001116922-1148080581.png" alt="img"></a></p><p>修改前端 <code>list.vue</code> 修改内容如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501002612347-176434056.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501002612347-176434056.png" alt="img"></a></p><p>还需要修改 <code>form.vue</code> 修改内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501002902351-405537024.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501002902351-405537024.png" alt="img"></a></p><h3 id="后端-6"><a href="#后端-6" class="headerlink" title="后端"></a>后端</h3><p>去除 <code>RoleMenu</code> 与 <code>UserRole</code> 类当中的逻辑删除分别如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501214235650-1104659491.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501214235650-1104659491.png" alt="img"></a></p><p>修改 RoleController</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 角色 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;角色组&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_auth/admin/role&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleService roleService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取角色分页列表&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getRolePageList/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">index</span><span class="params">(<span class="meta">@ApiParam(name = &quot;page&quot;, value = &quot;当前页码&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long page,</span></span><br><span class="line"><span class="params">                                <span class="meta">@ApiParam(name = &quot;limit&quot;, value = &quot;每页记录数&quot;, required = true)</span> <span class="meta">@PathVariable</span> Long limit,</span></span><br><span class="line"><span class="params">                                Role role)</span> &#123;</span><br><span class="line">        <span class="comment">// 开启分页</span></span><br><span class="line">        Page&lt;Role&gt; pageParam = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建查询条件</span></span><br><span class="line">        QueryWrapper&lt;Role&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(role.getRoleName())) &#123;</span><br><span class="line">            wrapper.like(<span class="string">&quot;role_name&quot;</span>, role.getRoleName());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据查询条件进行分页</span></span><br><span class="line">        roleService.page(pageParam, wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回结果</span></span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok()</span><br><span class="line">                .data(<span class="string">&quot;items&quot;</span>, pageParam.getRecords())</span><br><span class="line">                .data(<span class="string">&quot;total&quot;</span>, pageParam.getTotal());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取角色&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getRoleById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">get</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, roleService.getById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;新增角色&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/saveRole&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> Role role)</span> &#123;</span><br><span class="line">        roleService.save(role);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;修改角色&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/updateRole&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">updateById</span><span class="params">(<span class="meta">@RequestBody</span> Role role)</span> &#123;</span><br><span class="line">        roleService.updateById(role);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;删除角色&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/removeRole/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">remove</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        roleService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据id列表删除角色(批量删除)&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/batchRemoveRole&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">batchRemove</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;String&gt; idList)</span> &#123;</span><br><span class="line">        roleService.removeByIds(idList);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 RoleService</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 角色 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">RoleService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Role&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID获取角色数据</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 角色数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Map&lt;String, Object&gt; <span class="title function_">findRoleByUserId</span><span class="params">(String userId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID分配用户角色</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId 角色ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveUserRoleRelationShip</span><span class="params">(String userId, String[] roleId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 RoleServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 角色 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RoleServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;RoleMapper, Role&gt; <span class="keyword">implements</span> <span class="title class_">RoleService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserRoleService userRoleService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID获取角色数据</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">findRoleByUserId</span><span class="params">(String userId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.查询出所有的角色</span></span><br><span class="line">        List&lt;Role&gt; allRoles = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.当前用户选中的角色有哪些</span></span><br><span class="line">        QueryWrapper&lt;UserRole&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;UserRole&gt;()</span><br><span class="line">                .eq(<span class="string">&quot;user_id&quot;</span>, userId)</span><br><span class="line">                .select(<span class="string">&quot;role_id&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取到当前用户所在的角色关系</span></span><br><span class="line">        List&lt;UserRole&gt; userRoleList = userRoleService.list(queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取出所有的roleId 放到一个集合当中</span></span><br><span class="line">        List&lt;String&gt; roleIds = userRoleList.stream().map(UserRole::getRoleId).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据角色id,取出所有的角色对象</span></span><br><span class="line">        List&lt;Role&gt; userRoles = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        allRoles.forEach(role -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (roleIds.contains(role.getId())) &#123;</span><br><span class="line">                userRoles.add(role);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; roleMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用户的角色</span></span><br><span class="line">        roleMap.put(<span class="string">&quot;assignRoles&quot;</span>, userRoles);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有的角色</span></span><br><span class="line">        roleMap.put(<span class="string">&quot;allRolesList&quot;</span>, allRoles);</span><br><span class="line">        <span class="keyword">return</span> roleMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;</span></span><br><span class="line"><span class="comment">     * 根据用户ID分配用户角色</span></span><br><span class="line"><span class="comment">     * &lt;/b&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveUserRoleRelationShip</span><span class="params">(String userId, String[] roleId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.删除原来角色与用户之间的关系</span></span><br><span class="line">        userRoleService.remove(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;UserRole&gt;().eq(<span class="string">&quot;user_id&quot;</span>, userId));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.重新建立关系</span></span><br><span class="line">        List&lt;UserRole&gt; userRoleArrayList = Stream.of(roleId).map(role -&gt; &#123;</span><br><span class="line">            <span class="type">UserRole</span> <span class="variable">userRole</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserRole</span>();</span><br><span class="line">            userRole.setUserId(userId);</span><br><span class="line">            userRole.setRoleId(role);</span><br><span class="line">            <span class="keyword">return</span> userRole;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.批量保存关系</span></span><br><span class="line">        userRoleService.saveBatch(userRoleArrayList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-5"><a href="#前端-5" class="headerlink" title="前端"></a>前端</h3><p>新增 api 文件 <code>role.js</code></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/service_auth/admin/role&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 获取分页列表数据</span></span><br><span class="line">  <span class="title function_">getPageList</span>(<span class="params">page, limit, searchObj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getRolePageList/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="comment">// url查询字符串或表单键值对</span></span><br><span class="line">      <span class="attr">params</span>: searchObj</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据ID获取角色</span></span><br><span class="line">  <span class="title function_">getById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getRoleById/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 保存角色</span></span><br><span class="line">  <span class="title function_">save</span>(<span class="params">role</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/saveRole`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: role</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 更新角色</span></span><br><span class="line">  <span class="title function_">updateById</span>(<span class="params">role</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/updateRole`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: role</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 删除角色</span></span><br><span class="line">  <span class="title function_">removeById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/removeRole/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 批量删除</span></span><br><span class="line">  <span class="title function_">removeRows</span>(<span class="params">idList</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/batchRemoveRole`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: idList</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改路由文件 <code>index.js</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501214933951-1940581737.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501214933951-1940581737.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;role/list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;角色管理&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/role/list&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;角色管理&#x27;</span>&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;role/form&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;添加角色&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/role/form&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;添加角色&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;role/update/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;修改角色&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/role/form&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;修改角色&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;role/distribution/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;角色权限&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/role/roleForm&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;角色权限&#x27;</span>&#125;,</span><br><span class="line">  <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>新增对应的 vue 页面如下, form.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;el-form ref=&quot;role&quot; :model=&quot;role&quot; :rules=&quot;validateRules&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;角色名称&quot; prop=&quot;roleName&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;role.roleName&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button :disabled=&quot;saveBtnDisabled&quot; type=&quot;primary&quot; @click=&quot;saveOrUpdate&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import roleApi from &#x27;@/api/video/auth/role&#x27;;</span><br><span class="line"></span><br><span class="line">const defaultForm = &#123;</span><br><span class="line">  roleName: &#x27;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;form&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      role: defaultForm,</span><br><span class="line"></span><br><span class="line">      // 保存按钮是否禁用</span><br><span class="line">      saveBtnDisabled: false,</span><br><span class="line">      validateRules: &#123;</span><br><span class="line">        roleName: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;角色名必须输入&#x27;&#125;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 监听器</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route(to, from) &#123;</span><br><span class="line">      this.init();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 生命周期方法（在路由切换，组件不变的情况下不会被调用）</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.init()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 表单初始化</span><br><span class="line">    init() &#123;</span><br><span class="line">      if (this.$route.params &amp;&amp; this.$route.params.id) &#123;</span><br><span class="line">        const id = this.$route.params.id;</span><br><span class="line">        this.fetchDataById(id);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        // 对象拓展运算符：拷贝对象，而不是赋值对象的引用</span><br><span class="line">        this.role = &#123;...defaultForm&#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    saveOrUpdate() &#123;</span><br><span class="line">      this.$refs.role.validate(valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          // 防止表单重复提交</span><br><span class="line">          this.saveBtnDisabled = true;</span><br><span class="line">          if (!this.role.id) &#123;</span><br><span class="line">            this.saveData();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.updateData();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 新增讲师</span><br><span class="line">    saveData() &#123;</span><br><span class="line">      roleApi.save(this.role).then(response =&gt; &#123;</span><br><span class="line">        // debugger</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: response.message</span><br><span class="line">          &#125;)</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/auth/role/list&#x27;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 根据id更新记录</span><br><span class="line">    updateData() &#123;</span><br><span class="line">      // teacher数据的获取</span><br><span class="line">      roleApi.updateById(this.role).then(response =&gt; &#123;</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: response.message</span><br><span class="line">          &#125;)</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/auth/role/list&#x27;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 根据id查询记录</span><br><span class="line">    fetchDataById(id) &#123;</span><br><span class="line">      roleApi.getById(id).then(response =&gt; &#123;</span><br><span class="line">        this.role = response.data.item;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>list.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--查询表单--&gt;</span><br><span class="line">    &lt;el-form :inline=&quot;true&quot; class=&quot;demo-form-inline&quot;&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;searchObj.roleName&quot; placeholder=&quot;角色名称&quot;/&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; icon=&quot;el-icon-search&quot; @click=&quot;fetchData()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;default&quot; @click=&quot;resetData()&quot;&gt;清空&lt;/el-button&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 工具条 --&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; @click=&quot;addUser()&quot;&gt;添加&lt;/el-button&gt;</span><br><span class="line">      &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; @click=&quot;removeRows()&quot;&gt;批量删除&lt;/el-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 角色列表 --&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      v-loading=&quot;listLoading&quot;</span><br><span class="line">      :data=&quot;list&quot;</span><br><span class="line">      stripe</span><br><span class="line">      style=&quot;width: 100%&quot;</span><br><span class="line">      @selection-change=&quot;handleSelectionChange&quot;&gt;</span><br><span class="line">      &lt;el-table-column type=&quot;selection&quot;/&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;序号&quot; align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &#123;&#123; (page - 1) * limit + scope.$index + 1 &#125;&#125;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column align=&quot;center&quot; prop=&quot;roleName&quot; label=&quot;角色名称&quot;/&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;router-link :to=&quot;&#x27;/auth/role/distribution/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">            分配权限</span><br><span class="line">          &lt;/router-link&gt;</span><br><span class="line">          &lt;router-link :to=&quot;&#x27;/auth/role/update/&#x27;+scope.row.id&quot;&gt;</span><br><span class="line">            编辑</span><br><span class="line">          &lt;/router-link&gt;</span><br><span class="line">          &lt;a @click=&quot;removeDataById(scope.row.id)&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 分页组件 --&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      :current-page=&quot;page&quot;</span><br><span class="line">      :total=&quot;total&quot;</span><br><span class="line">      :page-size=&quot;limit&quot;</span><br><span class="line">      :page-sizes=&quot;[5, 10, 20, 30, 40, 50, 100]&quot;</span><br><span class="line">      style=&quot;padding: 30px 0; text-align: center;&quot;</span><br><span class="line">      layout=&quot;sizes, prev, pager, next, jumper, -&gt;, total, slot&quot;</span><br><span class="line">      @current-change=&quot;fetchData&quot;</span><br><span class="line">      @size-change=&quot;changeSize&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import roleApi from &#x27;@/api/video/auth/role&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;list&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 数据是否正在加载</span><br><span class="line">      listLoading: true,</span><br><span class="line"></span><br><span class="line">      // 讲师列表</span><br><span class="line">      list: null,</span><br><span class="line"></span><br><span class="line">      // 数据库中的总记录数</span><br><span class="line">      total: 0,</span><br><span class="line"></span><br><span class="line">      // 默认页码</span><br><span class="line">      page: 1,</span><br><span class="line"></span><br><span class="line">      // 每页记录数</span><br><span class="line">      limit: 10,</span><br><span class="line"></span><br><span class="line">      // 查询表单对象</span><br><span class="line">      searchObj: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">      // 批量选择中选择的记录列表</span><br><span class="line">      multipleSelection: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 生命周期函数：内存准备完毕，页面尚未渲染</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.fetchData()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 当页码发生改变的时候</span><br><span class="line">    changeSize(size) &#123;</span><br><span class="line">      this.limit = size;</span><br><span class="line">      this.fetchData(1);</span><br><span class="line">    &#125;,</span><br><span class="line">    addUser() &#123;</span><br><span class="line">      this.$router.push(&#123;path: &#x27;/auth/role/form&#x27;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 加载讲师列表数据</span><br><span class="line">    fetchData(page = 1) &#123;</span><br><span class="line">      this.listLoading = true;</span><br><span class="line"></span><br><span class="line">      // 异步获取远程数据（ajax）</span><br><span class="line">      this.page = page;</span><br><span class="line">      roleApi.getPageList(this.page, this.limit, this.searchObj).then(response =&gt; &#123;</span><br><span class="line">          this.list = response.data.items;</span><br><span class="line">          this.total = response.data.total;</span><br><span class="line"></span><br><span class="line">          // 数据加载并绑定成功</span><br><span class="line">          this.listLoading = false;</span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">    // 重置查询表单</span><br><span class="line">    resetData() &#123;</span><br><span class="line">      this.searchObj = &#123;&#125;;</span><br><span class="line">      this.fetchData();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 根据id删除数据</span><br><span class="line">    removeDataById(id) &#123;</span><br><span class="line">      this.$confirm(&#x27;此操作将永久删除该记录, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">        type: &#x27;warning&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        // 点击确定，远程调用ajax</span><br><span class="line">        return roleApi.removeById(id);</span><br><span class="line">      &#125;).then((response) =&gt; &#123;</span><br><span class="line">        this.fetchData(this.page);</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: &#x27;删除成功!&#x27;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(() =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;info&#x27;,</span><br><span class="line">          message: &#x27;已取消删除&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 当表格复选框选项发生变化的时候触发</span><br><span class="line">    handleSelectionChange(selection) &#123;</span><br><span class="line">      this.multipleSelection = selection;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 批量删除</span><br><span class="line">    removeRows() &#123;</span><br><span class="line">      if (this.multipleSelection.length === 0) &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;warning&#x27;,</span><br><span class="line">          message: &#x27;请选择要删除的记录!&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">      this.$confirm(&#x27;此操作将永久删除该记录, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">        type: &#x27;warning&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        // 点击确定，远程调用ajax</span><br><span class="line">        // 遍历selection，将id取出放入id列表</span><br><span class="line">        let idList = [];</span><br><span class="line">        this.multipleSelection.forEach(item =&gt; &#123;</span><br><span class="line">          idList.push(item.id);</span><br><span class="line">        &#125;);</span><br><span class="line">        // 调用api</span><br><span class="line">        return roleApi.removeRows(idList);</span><br><span class="line">      &#125;).then((response) =&gt; &#123;</span><br><span class="line">        this.fetchData(this.page);</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: &#x27;删除成功!&#x27;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(() =&gt; &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;info&#x27;,</span><br><span class="line">          message: &#x27;已取消删除&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>roleForm.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div style=&quot;margin: 20px 20px&quot;&gt;</span><br><span class="line">    &lt;el-tree</span><br><span class="line">      :data=&quot;data&quot;</span><br><span class="line">      show-checkbox</span><br><span class="line">      default-expand-all</span><br><span class="line">      node-key=&quot;id&quot;</span><br><span class="line">      ref=&quot;tree&quot;</span><br><span class="line">      highlight-current</span><br><span class="line">      :props=&quot;defaultProps&quot;&gt;</span><br><span class="line">    &lt;/el-tree&gt;</span><br><span class="line">    &lt;el-button :disabled=&quot;saveBtnDisabled&quot; type=&quot;primary&quot; @click=&quot;save&quot;&gt;保存&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import menu from &#x27;@/api/video/auth/menu&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;roleForm&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      saveBtnDisabled: false,</span><br><span class="line">      data: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;name&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      roleId: &#x27;&#x27;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 监听器</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route(to, from) &#123;</span><br><span class="line">      this.init();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    init() &#123;</span><br><span class="line">      if (this.$route.params &amp;&amp; this.$route.params.id) &#123;</span><br><span class="line">        this.roleId = this.$route.params.id;</span><br><span class="line">        this.fetchDataById(this.roleId);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    fetchDataById(roleId) &#123;</span><br><span class="line">      menu.getMenuWithRoleId(roleId).then(response =&gt; &#123;</span><br><span class="line">        this.data = response.data.children;</span><br><span class="line">        let jsonList = JSON.parse(JSON.stringify(this.data));</span><br><span class="line">        let list = [];</span><br><span class="line">        this.getJsonToList(list, jsonList[0][&#x27;children&#x27;]);</span><br><span class="line">        this.setCheckedKeys(list);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 把json数据转成string再转成对象，根据Key获取value数据</span><br><span class="line">    getJsonToList(list, jsonList) &#123;</span><br><span class="line">      // 遍历这个集合对象，获取key的值</span><br><span class="line">      for (let i = 0; i &lt; jsonList.length; i++) &#123;</span><br><span class="line">        if (jsonList[i][&#x27;select&#x27;] === true &amp;&amp; jsonList[i][&#x27;level&#x27;] === 4) &#123;</span><br><span class="line">          list.push(jsonList[i][&#x27;id&#x27;]);</span><br><span class="line">        &#125;</span><br><span class="line">        if (jsonList[i][&#x27;children&#x27;] != null) &#123;</span><br><span class="line">          this.getJsonToList(list, jsonList[i][&#x27;children&#x27;]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    getCheckedKeys() &#123;</span><br><span class="line">      console.log(this.$refs.tree.getCheckedKeys());</span><br><span class="line">    &#125;,</span><br><span class="line">    setCheckedKeys(list) &#123;</span><br><span class="line">      this.$refs.tree.setCheckedKeys(list);</span><br><span class="line">    &#125;,</span><br><span class="line">    save() &#123;</span><br><span class="line">      this.saveBtnDisabled = true;</span><br><span class="line">      let ids = this.$refs.tree.getCheckedKeys().join(&quot;,&quot;);</span><br><span class="line">      console.log(ids);</span><br><span class="line">      menu.doAssignRoleAuth(this.roleId, ids).then(response =&gt; &#123;</span><br><span class="line">        if (response.success) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;success&#x27;,</span><br><span class="line">            message: &#x27;保存成功&#x27;</span><br><span class="line">          &#125;)</span><br><span class="line">          this.$router.push(&#123;path: &#x27;/auth/role/list&#x27;&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>修改 <code>vue elementUI tree</code> 树形控件使得能够获取父节点ID的实例，不修改源码之前是获取不到的，也就是说点击了一个子节点获取不到父节点的 ID 如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501220038426-188105247.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501220038426-188105247.png" alt="img"></a></p><p>修改 <code>node_modules\element-ui\lib\element-ui.common.js</code> 中的第 <code>25382</code> 行如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501220157914-195173393.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501220157914-195173393.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((child.<span class="property">checked</span> || child.<span class="property">indeterminate</span>) &amp;&amp; (!leafOnly || leafOnly &amp;&amp; child.<span class="property">isLeaf</span>)) &#123;</span><br><span class="line">  checkedNodes.<span class="title function_">push</span>(child.<span class="property">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="42-权限控制-菜单管理"><a href="#42-权限控制-菜单管理" class="headerlink" title="42-权限控制-菜单管理"></a>42-权限控制-菜单管理</h2><h3 id="后端-7"><a href="#后端-7" class="headerlink" title="后端"></a>后端</h3><p>修改 <code>entity</code> 包下的 Menu，新增如下内容</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501201542458-551299601.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501201542458-551299601.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 层级</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;层级&quot;)</span></span><br><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> Integer level;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 子菜单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;子菜单&quot;)</span></span><br><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> List&lt;Menu&gt; children = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否为选中状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiModelProperty(value = &quot;是否为选中状态&quot;)</span></span><br><span class="line"><span class="meta">@TableField(exist = false)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> isSelect;</span><br></pre></td></tr></table></figure><p>紧接着修改 <code>MenuController</code> 内容如下粘贴即可，业务比较简单，在完善 RBAC 的过程当中我会直接贴代码不在做过多的讲解了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 菜单权限 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;菜单组&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_auth/admin/menu&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MenuController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MenuService menuService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;查询所有菜单&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getAllMenu&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">indexAllMenu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;children&quot;</span>, menuService.queryAllMenu());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归删除菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;递归删除菜单&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;removeMenu/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">remove</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="comment">// 删除当前菜单以及子菜单</span></span><br><span class="line">        menuService.removeChildById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据角色获取菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据角色获取菜单&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getMenuWithRoleId/&#123;roleId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">toAssign</span><span class="params">(<span class="meta">@PathVariable</span> String roleId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;children&quot;</span>, menuService.selectAllRoleMenu(roleId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 给角色分配权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;给角色分配权限&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/doAssignRoleAuth&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">doAssign</span><span class="params">(<span class="meta">@RequestParam</span> String roleId, <span class="meta">@RequestParam</span> String[] menus)</span> &#123;</span><br><span class="line">        menuService.saveRoleMenuRelationShip(roleId, menus);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;新增菜单&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/saveMenu&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">save</span><span class="params">(<span class="meta">@RequestBody</span> Menu permission)</span> &#123;</span><br><span class="line">        menuService.save(permission);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;修改菜单&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/updateMenu&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">updateById</span><span class="params">(<span class="meta">@RequestBody</span> Menu menu)</span> &#123;</span><br><span class="line">        menuService.updateById(menu);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 MenuService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 菜单权限 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MenuService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;Menu&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有菜单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 菜单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Menu&gt; <span class="title function_">queryAllMenu</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归删除菜单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 菜单ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">removeChildById</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据角色获取菜单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId 角色ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 菜单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Menu&gt; <span class="title function_">selectAllRoleMenu</span><span class="params">(String roleId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 给角色分配权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> roleId 角色ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> menus  分配的权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">saveRoleMenuRelationShip</span><span class="params">(String roleId, String[] menus)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 MenuServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 菜单权限 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MenuServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;MenuMapper, Menu&gt; <span class="keyword">implements</span> <span class="title class_">MenuService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleMenuService roleMenuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Menu&gt; <span class="title function_">queryAllMenu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1.查询所有的菜单</span></span><br><span class="line">        List&lt;Menu&gt; menuList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.构建树级菜单</span></span><br><span class="line">        <span class="keyword">return</span> buildTreeMenu(menuList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeChildById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="comment">// 最终要删除的idList</span></span><br><span class="line">        List&lt;String&gt; idList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        idList.add(id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 递归查找出所有的子菜单的id</span></span><br><span class="line">        selectChildMenu(id, idList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 批量删除</span></span><br><span class="line">        baseMapper.deleteBatchIds(idList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Menu&gt; <span class="title function_">selectAllRoleMenu</span><span class="params">(String roleId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.查询所有的菜单(利用CAST函数把ID转换为了整数: SIGNED，在排序)</span></span><br><span class="line">        QueryWrapper&lt;Menu&gt; qw = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;Menu&gt;().orderByAsc(<span class="string">&quot;CAST(id AS SIGNED)&quot;</span>);</span><br><span class="line">        List&lt;Menu&gt; menuList = baseMapper.selectList(qw);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.根据角色,查询角色对象的菜单权限</span></span><br><span class="line">        QueryWrapper&lt;RoleMenu&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;RoleMenu&gt;().eq(<span class="string">&quot;role_id&quot;</span>, roleId);</span><br><span class="line">        List&lt;RoleMenu&gt; roleMenuList = roleMenuService.list(queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.确定哪些菜单成为选中状态</span></span><br><span class="line">        menuList.forEach(menu -&gt; roleMenuList.forEach(roleMenu -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (menu.getId().equals(roleMenu.getPermissionId())) &#123;</span><br><span class="line">                menu.setSelect(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.构建树级菜单</span></span><br><span class="line">        <span class="keyword">return</span> buildTreeMenu(menuList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveRoleMenuRelationShip</span><span class="params">(String roleId, String[] menus)</span> &#123;</span><br><span class="line">        <span class="comment">// 1.删除原来的角色权限</span></span><br><span class="line">        roleMenuService.remove(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;RoleMenu&gt;().eq(<span class="string">&quot;role_id&quot;</span>, roleId));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.重新构建角色权限</span></span><br><span class="line">        List&lt;RoleMenu&gt; roleMenuArrayList = Stream.of(menus).map(menu -&gt; &#123;</span><br><span class="line">            <span class="type">RoleMenu</span> <span class="variable">roleMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RoleMenu</span>();</span><br><span class="line">            roleMenu.setRoleId(roleId);</span><br><span class="line">            roleMenu.setPermissionId(menu);</span><br><span class="line">            <span class="keyword">return</span> roleMenu;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.批量保存</span></span><br><span class="line">        roleMenuService.saveBatch(roleMenuArrayList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建树形菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Menu&gt; <span class="title function_">buildTreeMenu</span><span class="params">(List&lt;Menu&gt; menuList)</span> &#123;</span><br><span class="line">        <span class="comment">// 最终返回的树级菜单</span></span><br><span class="line">        List&lt;Menu&gt; menus = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        menuList.forEach(menu -&gt; &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查找最顶级的菜单</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;0&quot;</span>.equals(menu.getPid())) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 设置顶级菜单的级别</span></span><br><span class="line">                menu.setLevel(<span class="number">1</span>);</span><br><span class="line">                <span class="comment">// 构造子菜单</span></span><br><span class="line">                buildChildrenMenu(menu, menuList);</span><br><span class="line">                menus.add(menu);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> menus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构建子菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildChildrenMenu</span><span class="params">(Menu menu, List&lt;Menu&gt; menuList)</span> &#123;</span><br><span class="line">        <span class="comment">// 从menuList当中查找当前的子菜单</span></span><br><span class="line">        menuList.forEach(m -&gt; &#123;</span><br><span class="line">            <span class="comment">// 判断是不是自己的子菜单</span></span><br><span class="line">            <span class="keyword">if</span> (menu.getId().equals(m.getPid())) &#123;</span><br><span class="line">                <span class="comment">// 是子菜单</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">level</span> <span class="operator">=</span> menu.getLevel() + <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 设置级别</span></span><br><span class="line">                m.setLevel(level);</span><br><span class="line">                <span class="comment">// 递归设置子菜单</span></span><br><span class="line">                menu.getChildren().add(m);</span><br><span class="line">                buildChildrenMenu(m, menuList);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询子菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">selectChildMenu</span><span class="params">(String id, List&lt;String&gt; idList)</span> &#123;</span><br><span class="line">        <span class="comment">// 查询出当前id子菜单的条件</span></span><br><span class="line">        QueryWrapper&lt;Menu&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;Menu&gt;().eq(<span class="string">&quot;pid&quot;</span>, id).select(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开始查询</span></span><br><span class="line">        List&lt;Menu&gt; childMenuList = baseMapper.selectList(queryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (childMenuList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 取出子菜单id放到集合当中</span></span><br><span class="line">            childMenuList.forEach(menu -&gt; &#123;</span><br><span class="line">                idList.add(menu.getId());</span><br><span class="line">                <span class="built_in">this</span>.selectChildMenu(menu.getId(), idList);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-6"><a href="#前端-6" class="headerlink" title="前端"></a>前端</h3><p>新增 api 文件 <code>menu.js</code></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/service_auth/admin/menu&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 获取所有菜单</span></span><br><span class="line">  <span class="title function_">getNestedTreeList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getAllMenu`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 删除菜单</span></span><br><span class="line">  <span class="title function_">removeById</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/removeMenu/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;post&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 保存菜单</span></span><br><span class="line">  <span class="title function_">saveMenu</span>(<span class="params">menu</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/saveMenu`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: menu</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 更新菜单</span></span><br><span class="line">  <span class="title function_">update</span>(<span class="params">menu</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/updateMenu`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: menu</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据角色获取菜单</span></span><br><span class="line">  <span class="title function_">getMenuWithRoleId</span>(<span class="params">roleId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getMenuWithRoleId/<span class="subst">$&#123;roleId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据角色分配权限</span></span><br><span class="line">  <span class="title function_">doAssignRoleAuth</span>(<span class="params">roleId, menus</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/doAssignRoleAuth`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">      <span class="attr">params</span>: &#123;roleId, menus&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增菜单管理的路由修改 <code>router\index.js</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501204857599-1984168892.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210501204857599-1984168892.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;menu/list&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;菜单管理&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/video/auth/menu/list&#x27;</span>),</span><br><span class="line">  <span class="attr">meta</span>: &#123;<span class="attr">title</span>: <span class="string">&#x27;菜单管理&#x27;</span>&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>新增 <code>list.vue</code> 新增位置如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-container&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    row-key,数据当中,哪一个字段能够唯一的标识一行</span><br><span class="line">    :expand-row-keys 要求传入的是一个数组</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      :data=&quot;menuList&quot;</span><br><span class="line">      style=&quot;width: 100%;margin-bottom: 20px;&quot;</span><br><span class="line">      :expand-row-keys=&quot;expands&quot;</span><br><span class="line">      row-key=&quot;id&quot;</span><br><span class="line">      ref=&quot;refTable&quot;</span><br><span class="line">      @row-click=&quot;clickTable&quot;</span><br><span class="line">      border</span><br><span class="line">      :tree-props=&quot;&#123;children: &#x27;children&#x27;, hasChildren: &#x27;hasChildren&#x27;&#125;&quot;&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;name&quot; label=&quot;名称&quot; sortable align=&quot;center&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;path&quot; label=&quot;访问路径&quot; sortable align=&quot;center&quot; width=&quot;180&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;component&quot; label=&quot;组件路径&quot; sortable align=&quot;center&quot; width=&quot;180&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;permissionValue&quot; label=&quot;权限值&quot; align=&quot;center&quot;/&gt;</span><br><span class="line">      &lt;!--CRUD操作--&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot; align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot;</span><br><span class="line">                     @click.native.stop=&quot;() =&gt; &#123;dialogFormVisible = true,menu.pid = scope.row.id&#125;&quot;&gt;添加菜单</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;success&quot; size=&quot;mini&quot;</span><br><span class="line">                     @click.native.stop=&quot;() =&gt; getById(scope.row)&quot;&gt;修改菜单</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;success&quot; size=&quot;mini&quot;</span><br><span class="line">                     @click.native.stop=&quot;() =&gt; &#123;dialogPermissionVisible = true, permission.pid = scope.row.id&#125;&quot;&gt;添加权限</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; size=&quot;mini&quot;</span><br><span class="line">                     @click.native.stop=&quot;() =&gt; updateFunction(scope.row)&quot;&gt;修改权限</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;danger&quot; size=&quot;mini&quot; icon=&quot;el-icon-delete&quot;</span><br><span class="line">                     @click.native.stop=&quot;() =&gt; remove(scope.row)&quot;&gt;&lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    添加菜单的窗口</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=&quot;dialogFormVisible&quot; :title=&quot;dialogFormValue&quot;&gt;</span><br><span class="line">      &lt;el-form ref=&quot;menu&quot; :model=&quot;menu&quot; :rules=&quot;menuValidateRules&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;菜单名称&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;menu.name&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;访问路径&quot; prop=&quot;path&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;menu.path&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;组件路径&quot; prop=&quot;component&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;menu.component&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;resetData()&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;addMenuClick()&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    添加权限的窗口</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=&quot;dialogPermissionVisible&quot; title=&quot;添加功能权限&quot;&gt;</span><br><span class="line">      &lt;el-form ref=&quot;permission&quot; :model=&quot;permission&quot; :rules=&quot;permissionValidateRules&quot; label-width=&quot;120px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;功能名称&quot; prop=&quot;name&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;permission.name&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;访问路径&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;permission.path&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;组件路径&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;permission.component&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;功能权限值&quot; prop=&quot;permissionValue&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;permission.permissionValue&quot;/&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">      &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;resetData()&quot;&gt;取 消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;appendPermission()&quot;&gt;确 定&lt;/el-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import menu from &#x27;@/api/video/auth/menu&#x27;;</span><br><span class="line"></span><br><span class="line">// 菜单实体</span><br><span class="line">const menuForm = &#123;</span><br><span class="line">  name: &#x27;&#x27;,</span><br><span class="line">  pid: 0,</span><br><span class="line">  path: &#x27;&#x27;,</span><br><span class="line">  component: &#x27;&#x27;,</span><br><span class="line">  type: 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 权限实体</span><br><span class="line">const perForm = &#123;</span><br><span class="line">  permissionValue: &#x27;&#x27;,</span><br><span class="line">  name: &#x27;&#x27;,</span><br><span class="line">  path: &#x27;&#x27;,</span><br><span class="line">  component: &#x27;&#x27;,</span><br><span class="line">  pid: 0,</span><br><span class="line">  type: 2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;list&quot;,</span><br><span class="line">  // 初始化相关属性</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      menuList: [],</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &#x27;children&#x27;,</span><br><span class="line">        label: &#x27;name&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      dialogFormValue: &#x27;添加菜单&#x27;,</span><br><span class="line">      dialogFormVisible: false,</span><br><span class="line">      dialogPermissionVisible: false,</span><br><span class="line">      menu: &#123;...menuForm&#125;,</span><br><span class="line">      permission: &#123;...perForm&#125;,</span><br><span class="line">      menuValidateRules: &#123;</span><br><span class="line">        name: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;菜单名必须输入&#x27;&#125;],</span><br><span class="line">        path: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;菜单路径必须输入&#x27;&#125;],</span><br><span class="line">        component: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;组件名称必须输入&#x27;&#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      permissionValidateRules: &#123;</span><br><span class="line">        name: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;功能名称必须输入&#x27;&#125;],</span><br><span class="line">        permissionValue: [&#123;required: true, trigger: &#x27;blur&#x27;, message: &#x27;功能权限值必须输入&#x27;&#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      // 要展开的行，数值的元素是row的key值</span><br><span class="line">      expands: []</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    // 获取列表数据</span><br><span class="line">    this.fetchNodeList();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // table的方法,展开/折叠 行</span><br><span class="line">    clickTable(row, index, e) &#123;</span><br><span class="line">      // 调用,table的方法,展开/折叠 行</span><br><span class="line">      this.$refs.refTable.toggleRowExpansion(row);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取列表数据</span><br><span class="line">    fetchNodeList() &#123;</span><br><span class="line">      menu.getNestedTreeList().then(res =&gt; &#123;</span><br><span class="line">        if (res.success === true) &#123;</span><br><span class="line">          this.menuList = res.data.children;</span><br><span class="line">          this.expands.push(this.menuList[0].id);</span><br><span class="line">          this.resetData();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除菜单</span><br><span class="line">    remove(data) &#123;</span><br><span class="line">      this.$confirm(&#x27;此操作将永久删除该记录, 是否继续?&#x27;, &#x27;提示&#x27;, &#123;</span><br><span class="line">        confirmButtonText: &#x27;确定&#x27;,</span><br><span class="line">        cancelButtonText: &#x27;取消&#x27;,</span><br><span class="line">        type: &#x27;warning&#x27;</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        return menu.removeById(data.id);</span><br><span class="line">      &#125;).then(() =&gt; &#123;</span><br><span class="line">        // 刷新列表</span><br><span class="line">        this.fetchNodeList();</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;success&#x27;,</span><br><span class="line">          message: &#x27;删除成功!&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">        // 失败</span><br><span class="line">      &#125;).catch((res) =&gt; &#123;</span><br><span class="line">        if (res === &#x27;cancel&#x27;) &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;info&#x27;,</span><br><span class="line">            message: &#x27;已取消删除&#x27;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.$message(&#123;</span><br><span class="line">            type: &#x27;error&#x27;,</span><br><span class="line">            message: &#x27;删除失败&#x27;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 添加功能权限</span><br><span class="line">    appendPermission() &#123;</span><br><span class="line">      this.$refs.permission.validate(valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          if (this.permission.id) &#123;</span><br><span class="line">            this.update(this.permission);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            menu.saveMenu(this.permission).then(res =&gt; &#123;</span><br><span class="line">              this.dialogPermissionVisible = false;</span><br><span class="line">              this.$message(&#123;</span><br><span class="line">                type: &#x27;success&#x27;,</span><br><span class="line">                message: &#x27;添加权限成功&#x27;</span><br><span class="line">              &#125;);</span><br><span class="line">              // 刷新数据，展开菜单</span><br><span class="line">              menu.getNestedTreeList().then(res =&gt; &#123;</span><br><span class="line">                if (res.success === true) &#123;</span><br><span class="line">                  this.menuList = res.data.children;</span><br><span class="line">                  this.expands.push(this.permission.pid);</span><br><span class="line">                  this.resetData();</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 添加菜单点击</span><br><span class="line">    addMenuClick() &#123;</span><br><span class="line">      this.$refs.menu.validate(valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          // 添加</span><br><span class="line">          if (!this.menu.id) &#123;</span><br><span class="line">            this.addMenu();</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            // 修改</span><br><span class="line">            this.update(this.menu);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 添加菜单</span><br><span class="line">    addMenu() &#123;</span><br><span class="line">      menu.saveMenu(this.menu).then(res =&gt; &#123;</span><br><span class="line">        this.dialogFormVisible = false</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;success&#x27;,</span><br><span class="line">          message: &#x27;添加菜单成功&#x27;</span><br><span class="line">        &#125;)</span><br><span class="line">        // 刷新数据，展开菜单</span><br><span class="line">        menu.getNestedTreeList().then(response =&gt; &#123;</span><br><span class="line">          if (response.success === true) &#123;</span><br><span class="line">            this.menuList = response.data.children;</span><br><span class="line"></span><br><span class="line">            // 展开刚添加菜单的父级</span><br><span class="line">            this.expands.push(this.menu.pid);</span><br><span class="line">            this.resetData();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;).catch(error =&gt; &#123;</span><br><span class="line">        this.dialogFormVisible = false;</span><br><span class="line"></span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;error&#x27;,</span><br><span class="line">          message: &#x27;添加菜单失败&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 修改菜单</span><br><span class="line">    update(obj) &#123;</span><br><span class="line">      menu.update(obj).then(res =&gt; &#123;</span><br><span class="line">        this.dialogFormVisible = false;</span><br><span class="line"></span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          type: &#x27;success&#x27;,</span><br><span class="line">          message: &#x27;修改成功&#x27;</span><br><span class="line">        &#125;);</span><br><span class="line">        // 刷新页面</span><br><span class="line">        this.fetchNodeList();</span><br><span class="line">        this.resetData();</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // 获取菜单信息</span><br><span class="line">    getById(data) &#123;</span><br><span class="line">      this.dialogFormVisible = true;</span><br><span class="line">      this.menu = data;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 修改权限点击</span><br><span class="line">    updateFunction(data) &#123;</span><br><span class="line">      this.dialogPermissionVisible = true;</span><br><span class="line">      this.permission = data;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 重置数据</span><br><span class="line">    resetData() &#123;</span><br><span class="line">      this.dialogPermissionVisible = false;</span><br><span class="line">      this.dialogFormVisible = false;</span><br><span class="line">      this.menu = &#123;...menuForm&#125;;</span><br><span class="line">      this.permission = &#123;...perForm&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>菜单相关数据插入 SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;全部数据&#x27;</span>, <span class="number">0</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195268474480156673&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;权限管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;/authority&#x27;</span>, <span class="string">&#x27;Layout&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;1195268474480156673&#x27;</span>, <span class="string">&#x27;用户管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;user/list&#x27;</span>, <span class="string">&#x27;authority/user/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;1195268474480156673&#x27;</span>, <span class="string">&#x27;角色管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;role/list&#x27;</span>, <span class="string">&#x27;authority/role/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195268893830864898&#x27;</span>, <span class="string">&#x27;1195268474480156673&#x27;</span>, <span class="string">&#x27;菜单管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;menu/list&#x27;</span>, <span class="string">&#x27;authority/menu/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269143060602882&#x27;</span>, <span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;user.list&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269295926206466&#x27;</span>, <span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;添加&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;user.add&#x27;</span>, <span class="string">&#x27;user/add&#x27;</span>, <span class="string">&#x27;authority/user/form&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269473479483394&#x27;</span>, <span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;user.update&#x27;</span>, <span class="string">&#x27;user/update/:id&#x27;</span>, <span class="string">&#x27;authority/user/form&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269547269873666&#x27;</span>, <span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;user.remove&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269821262782465&#x27;</span>, <span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;role.update&#x27;</span>, <span class="string">&#x27;role/update/:id&#x27;</span>, <span class="string">&#x27;authority/role/form&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195269903542444034&#x27;</span>, <span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;role.list&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270037005197313&#x27;</span>, <span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;添加&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;role.add&#x27;</span>, <span class="string">&#x27;role/form&#x27;</span>, <span class="string">&#x27;authority/role/form&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270442602782721&#x27;</span>, <span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;role.remove&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270621548568578&#x27;</span>, <span class="string">&#x27;1195268788138598401&#x27;</span>, <span class="string">&#x27;角色权限&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;role.acl&#x27;</span>, <span class="string">&#x27;role/distribution/:id&#x27;</span>, <span class="string">&#x27;authority/role/roleForm&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270744097742849&#x27;</span>, <span class="string">&#x27;1195268893830864898&#x27;</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;menu.list&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270810560684034&#x27;</span>, <span class="string">&#x27;1195268893830864898&#x27;</span>, <span class="string">&#x27;添加&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;menu.add&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270862100291586&#x27;</span>, <span class="string">&#x27;1195268893830864898&#x27;</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;menu.update&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195270887933009922&#x27;</span>, <span class="string">&#x27;1195268893830864898&#x27;</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;menu.remove&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195349439240048642&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;创作者管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;/author&#x27;</span>, <span class="string">&#x27;Layout&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;1195349439240048642&#x27;</span>, <span class="string">&#x27;创作者列表&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;table&#x27;</span>, <span class="string">&#x27;video/author/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195349810561781761&#x27;</span>, <span class="string">&#x27;1195349439240048642&#x27;</span>, <span class="string">&#x27;添加创作者&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;save&#x27;</span>, <span class="string">&#x27;video/author/save&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195349876252971010&#x27;</span>, <span class="string">&#x27;1195349810561781761&#x27;</span>, <span class="string">&#x27;添加&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;author.add&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195349979797753857&#x27;</span>, <span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;author.list&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350117270261762&#x27;</span>, <span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;修改&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;author.update&#x27;</span>, <span class="string">&#x27;edit/:id&#x27;</span>, <span class="string">&#x27;video/author/save&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350188359520258&#x27;</span>, <span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;删除&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;author.remove&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350299365969922&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;作品分类&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;/video/category&#x27;</span>, <span class="string">&#x27;Layout&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350397751758850&#x27;</span>, <span class="string">&#x27;1195350299365969922&#x27;</span>, <span class="string">&#x27;作品分类列表&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;list&#x27;</span>, <span class="string">&#x27;video/category/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350500512206850&#x27;</span>, <span class="string">&#x27;1195350299365969922&#x27;</span>, <span class="string">&#x27;上传作品分类&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;import&#x27;</span>, <span class="string">&#x27;video/category/save&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350612172967938&#x27;</span>, <span class="string">&#x27;1195350397751758850&#x27;</span>, <span class="string">&#x27;查看&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;category.list&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350687590748161&#x27;</span>, <span class="string">&#x27;1195350500512206850&#x27;</span>, <span class="string">&#x27;导入&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;category.import&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350831744782337&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;作品管理&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;/video/content&#x27;</span>, <span class="string">&#x27;Layout&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195350919074385921&#x27;</span>, <span class="string">&#x27;1195350831744782337&#x27;</span>, <span class="string">&#x27;作品列表&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;list&#x27;</span>, <span class="string">&#x27;video/content/list&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195351020463296513&#x27;</span>, <span class="string">&#x27;1195350831744782337&#x27;</span>, <span class="string">&#x27;添加作品&#x27;</span>, <span class="number">1</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;info&#x27;</span>, <span class="string">&#x27;video/content/info&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195351159672246274&#x27;</span>, <span class="string">&#x27;1195350919074385921&#x27;</span>, <span class="string">&#x27;发布作品&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;content.publish&#x27;</span>, <span class="string">&#x27;send/:id&#x27;</span>, <span class="string">&#x27;video/content/send&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195351326706208770&#x27;</span>, <span class="string">&#x27;1195350919074385921&#x27;</span>, <span class="string">&#x27;编辑课程&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;content.update&#x27;</span>, <span class="string">&#x27;info/:id&#x27;</span>, <span class="string">&#x27;video/content/info&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1195351566221938690&#x27;</span>, <span class="string">&#x27;1195350919074385921&#x27;</span>, <span class="string">&#x27;章节信息&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;chapter.update&#x27;</span>, <span class="string">&#x27;chapter/:id&#x27;</span>, <span class="string">&#x27;video/content/chapter&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1196301740985311234&#x27;</span>, <span class="string">&#x27;1195268616021139457&#x27;</span>, <span class="string">&#x27;分配角色&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;user.assgin&#x27;</span>, <span class="string">&#x27;user/role/:id&#x27;</span>, <span class="string">&#x27;authority/user/roleForm&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">0</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>, <span class="string">&#x27;2021-05-05 19:17:09&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1388495490356727810&#x27;</span>, <span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;测试&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;2021-05-01 22:08:17&#x27;</span>, <span class="string">&#x27;2021-05-01 22:08:17&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `video_db`.`auth_menu` (`id`, `pid`, `name`, `type`, `permission_value`, `path`, `component`, `icon`, `status`, `is_deleted`, `gmt_create`, `gmt_modified`) <span class="keyword">VALUES</span> (<span class="string">&#x27;1388495557524312066&#x27;</span>, <span class="string">&#x27;1195349699995734017&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">1</span>, <span class="string">&#x27;2021-05-01 22:08:33&#x27;</span>, <span class="string">&#x27;2021-05-01 22:08:45&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="43-权限控制-security权限控制"><a href="#43-权限控制-security权限控制" class="headerlink" title="43-权限控制-security权限控制"></a>43-权限控制-security权限控制</h2><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210502120009690-1753787737.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210502120009690-1753787737.png" alt="img"></a></p><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;top.it6666&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common_utils&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;!-- Spring Security依赖 --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jjwt&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><p>common_security 包分别如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504153342325-1556701066.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504153342325-1556701066.png" alt="img"></a></p><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><p>TokenWebSecurityConfig</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description Security配置</span><br><span class="line"> * @since Created in 2021/5/2 002 12:02</span><br><span class="line"> **/</span><br><span class="line">@Configuration</span><br><span class="line">@EnableWebSecurity</span><br><span class="line">@EnableGlobalMethodSecurity(prePostEnabled = true)</span><br><span class="line">public class TokenWebSecurityConfig extends WebSecurityConfigurerAdapter &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 自定义查询数据库类</span><br><span class="line">     */</span><br><span class="line">    private UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Token管理器</span><br><span class="line">     */</span><br><span class="line">    private TokenManager tokenManager;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 密码加密方式</span><br><span class="line">     */</span><br><span class="line">    private DefaultPasswordEncoder defaultPasswordEncoder;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * redis操作</span><br><span class="line">     */</span><br><span class="line">    private RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 自定义查询数据库</span><br><span class="line">     */</span><br><span class="line">    @Autowired</span><br><span class="line">    public TokenWebSecurityConfig(UserDetailsService userDetailsService,</span><br><span class="line">                                  DefaultPasswordEncoder defaultPasswordEncoder,</span><br><span class="line">                                  TokenManager tokenManager,</span><br><span class="line">                                  RedisTemplate redisTemplate) &#123;</span><br><span class="line">        this.userDetailsService = userDetailsService;</span><br><span class="line">        this.defaultPasswordEncoder = defaultPasswordEncoder;</span><br><span class="line">        this.tokenManager = tokenManager;</span><br><span class="line">        this.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 配置设置</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    protected void configure(HttpSecurity http) throws Exception &#123;</span><br><span class="line">        http.exceptionHandling()</span><br><span class="line">                .authenticationEntryPoint(new UnauthorizedEntryPoint())</span><br><span class="line">                .and().csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().logout().logoutUrl(&quot;/service_auth/admin/index/logout&quot;)</span><br><span class="line">                .addLogoutHandler(new TokenLogoutHandler(tokenManager, redisTemplate)).and()</span><br><span class="line">                .addFilter(new TokenLoginFilter(authenticationManager(), tokenManager, redisTemplate))</span><br><span class="line">                .addFilter(new TokenAuthenticationFilter(authenticationManager(), tokenManager, redisTemplate)).httpBasic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 密码处理</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService).passwordEncoder(defaultPasswordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 配置哪些请求不拦截</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void configure(WebSecurity web) &#123;</span><br><span class="line">        web.ignoring().antMatchers(</span><br><span class="line">                &quot;/api/**&quot;,</span><br><span class="line">                &quot;/swagger-resources/**&quot;,</span><br><span class="line">                &quot;/webjars/**&quot;,</span><br><span class="line">                &quot;/v2/**&quot;,</span><br><span class="line">                &quot;/swagger-ui.html/**&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="entity"><a href="#entity" class="headerlink" title="entity"></a>entity</h3><p>SecurityUser</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 安全认证用户详情信息</span><br><span class="line"> * @since Created in 2021/5/2 002 12:07</span><br><span class="line"> **/</span><br><span class="line">@Data</span><br><span class="line">@Slf4j</span><br><span class="line">public class SecurityUser implements UserDetails &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 当前登录用户</span><br><span class="line">     */</span><br><span class="line">    private transient User currentUserInfo;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 当前权限</span><br><span class="line">     */</span><br><span class="line">    private List&lt;String&gt; permissionValueList;</span><br><span class="line"></span><br><span class="line">    public SecurityUser(User user) &#123;</span><br><span class="line">        if (user != null) &#123;</span><br><span class="line">            this.currentUserInfo = user;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class="line">        Collection&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        permissionValueList.forEach(permissionValue -&gt; &#123;</span><br><span class="line">            if (StringUtils.isEmpty(permissionValue)) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            SimpleGrantedAuthority authority = new SimpleGrantedAuthority(permissionValue);</span><br><span class="line">            authorities.add(authority);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        return authorities;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getPassword() &#123;</span><br><span class="line">        return currentUserInfo.getPassword();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getUsername() &#123;</span><br><span class="line">        return currentUserInfo.getUsername();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean isAccountNonExpired() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean isAccountNonLocked() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean isCredentialsNonExpired() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean isEnabled() &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>User</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 用户实体类</span><br><span class="line"> * @since Created in 2021/5/2 002 12:10</span><br><span class="line"> **/</span><br><span class="line">@Data</span><br><span class="line">@ApiModel(description = &quot;用户实体类&quot;)</span><br><span class="line">public class User implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">    @ApiModelProperty(value = &quot;用户名&quot;)</span><br><span class="line">    private String username;</span><br><span class="line"></span><br><span class="line">    @ApiModelProperty(value = &quot;密码&quot;)</span><br><span class="line">    private String password;</span><br><span class="line"></span><br><span class="line">    @ApiModelProperty(value = &quot;昵称&quot;)</span><br><span class="line">    private String nickName;</span><br><span class="line"></span><br><span class="line">    @ApiModelProperty(value = &quot;用户头像&quot;)</span><br><span class="line">    private String salt;</span><br><span class="line"></span><br><span class="line">    @ApiModelProperty(value = &quot;用户签名&quot;)</span><br><span class="line">    private String token;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><p>TokenAuthenticationFilter</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description</span><br><span class="line"> * @since Created in 2021/5/2 002 12:11</span><br><span class="line"> **/</span><br><span class="line">public class TokenAuthenticationFilter extends BasicAuthenticationFilter &#123;</span><br><span class="line">    private final TokenManager tokenManager;</span><br><span class="line">    private final RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    public TokenAuthenticationFilter(AuthenticationManager authManager, TokenManager tokenManager,</span><br><span class="line">                                     RedisTemplate redisTemplate) &#123;</span><br><span class="line">        super(authManager);</span><br><span class="line">        this.tokenManager = tokenManager;</span><br><span class="line">        this.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain chain)</span><br><span class="line">            throws IOException, ServletException &#123;</span><br><span class="line">        logger.info(&quot;RequestURI = &quot; + req.getRequestURI());</span><br><span class="line">        if (!req.getRequestURI().contains(&quot;admin&quot;)) &#123;</span><br><span class="line">            chain.doFilter(req, res);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        UsernamePasswordAuthenticationToken authentication = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            authentication = getAuthentication(req);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            ResponseUtil.out(res, ResponseResult.error());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (authentication != null) &#123;</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authentication);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            ResponseUtil.out(res, ResponseResult.error());</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(req, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private UsernamePasswordAuthenticationToken getAuthentication(HttpServletRequest request) &#123;</span><br><span class="line">        // token置于header里</span><br><span class="line">        String token = request.getHeader(&quot;X-Token&quot;);</span><br><span class="line">        if (null != token &amp;&amp; !&quot;&quot;.equals(token.trim())) &#123;</span><br><span class="line">            String userName = tokenManager.getUserFromToken(token);</span><br><span class="line"></span><br><span class="line">            List&lt;String&gt; permissionValueList = (List&lt;String&gt;) redisTemplate.opsForValue().get(userName);</span><br><span class="line">            Collection&lt;GrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            if (!CollectionUtils.isEmpty(permissionValueList)) &#123;</span><br><span class="line">                authorities = permissionValueList.stream().map(permissionValue -&gt; &#123;</span><br><span class="line">                    if (StringUtils.isEmpty(permissionValue)) &#123;</span><br><span class="line">                        return null;</span><br><span class="line">                    &#125;</span><br><span class="line">                    return new SimpleGrantedAuthority(permissionValue);</span><br><span class="line">                &#125;).collect(Collectors.toList());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (!StringUtils.isEmpty(userName)) &#123;</span><br><span class="line">                return new UsernamePasswordAuthenticationToken(userName, token, authorities);</span><br><span class="line">            &#125;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenLoginFilter</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 登录过滤器，继承UsernamePasswordAuthenticationFilter，对用户名密码进行登录校验</span><br><span class="line"> * @since Created in 2021/5/2 002 12:12</span><br><span class="line"> **/</span><br><span class="line">public class TokenLoginFilter extends UsernamePasswordAuthenticationFilter &#123;</span><br><span class="line"></span><br><span class="line">    private final AuthenticationManager authenticationManager;</span><br><span class="line">    private final TokenManager tokenManager;</span><br><span class="line">    private final RedisTemplate&lt;String, java.util.List&lt;String&gt;&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    public TokenLoginFilter(AuthenticationManager authenticationManager, TokenManager tokenManager,</span><br><span class="line">                            RedisTemplate&lt;String, java.util.List&lt;String&gt;&gt; redisTemplate) &#123;</span><br><span class="line">        this.authenticationManager = authenticationManager;</span><br><span class="line">        this.tokenManager = tokenManager;</span><br><span class="line">        this.redisTemplate = redisTemplate;</span><br><span class="line">        this.setPostOnly(false);</span><br><span class="line">        this.setRequiresAuthenticationRequestMatcher(new AntPathRequestMatcher(</span><br><span class="line">                &quot;/service_auth/admin/index/login&quot;,</span><br><span class="line">                &quot;POST&quot;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Authentication attemptAuthentication(HttpServletRequest req, HttpServletResponse res)</span><br><span class="line">            throws AuthenticationException &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            User user = new ObjectMapper().readValue(req.getInputStream(), User.class);</span><br><span class="line">            return authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(user.getUsername(),</span><br><span class="line">                    user.getPassword(), new ArrayList&lt;&gt;()));</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            throw new RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 登录成功</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    protected void successfulAuthentication(HttpServletRequest req, HttpServletResponse res, FilterChain chain,</span><br><span class="line">                                            Authentication auth) &#123;</span><br><span class="line">        SecurityUser user = (SecurityUser) auth.getPrincipal();</span><br><span class="line">        String token = tokenManager.createToken(user.getCurrentUserInfo().getUsername());</span><br><span class="line">        redisTemplate.opsForValue().set(user.getCurrentUserInfo().getUsername(), user.getPermissionValueList());</span><br><span class="line">        ResponseUtil.out(res, ResponseResult.ok().data(&quot;token&quot;, token));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 登录失败</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    protected void unsuccessfulAuthentication(HttpServletRequest request, HttpServletResponse response,</span><br><span class="line">                                              AuthenticationException e) &#123;</span><br><span class="line">        ResponseUtil.out(response, ResponseResult.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="security"><a href="#security" class="headerlink" title="security"></a>security</h3><blockquote><p>DefaultPasswordEncoder</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 密码的处理方法类型</span><br><span class="line"> * @since Created in 2021/5/2 002 12:13</span><br><span class="line"> **/</span><br><span class="line">@Component</span><br><span class="line">public class DefaultPasswordEncoder implements PasswordEncoder &#123;</span><br><span class="line"></span><br><span class="line">    public DefaultPasswordEncoder() &#123;</span><br><span class="line">        this(-1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public DefaultPasswordEncoder(int strength) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String encode(CharSequence rawPassword) &#123;</span><br><span class="line">        return Md5.encrypt(rawPassword.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean matches(CharSequence rawPassword, String encodedPassword) &#123;</span><br><span class="line">        return encodedPassword.equals(Md5.encrypt(rawPassword.toString()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenLogoutHandler</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 登出业务逻辑类</span><br><span class="line"> * @since Created in 2021/5/2 002 12:13</span><br><span class="line"> **/</span><br><span class="line">public class TokenLogoutHandler implements LogoutHandler &#123;</span><br><span class="line"></span><br><span class="line">    private TokenManager tokenManager;</span><br><span class="line">    private RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    public TokenLogoutHandler(TokenManager tokenManager, RedisTemplate redisTemplate) &#123;</span><br><span class="line">        this.tokenManager = tokenManager;</span><br><span class="line">        this.redisTemplate = redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void logout(HttpServletRequest request, HttpServletResponse response, Authentication authentication) &#123;</span><br><span class="line">        String token = request.getHeader(&quot;X-Token&quot;);</span><br><span class="line">        if (token != null) &#123;</span><br><span class="line">            // 清空当前用户缓存中的权限数据</span><br><span class="line">            String userName = tokenManager.getUserFromToken(token);</span><br><span class="line">            redisTemplate.delete(userName);</span><br><span class="line">        &#125;</span><br><span class="line">        ResponseUtil.out(response, ResponseResult.ok());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TokenManager</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description token管理</span><br><span class="line"> * @since Created in 2021/5/2 002 12:14</span><br><span class="line"> **/</span><br><span class="line">@Component</span><br><span class="line">public class TokenManager &#123;</span><br><span class="line"></span><br><span class="line">    private final String TOKEN_SIGNKEY = &quot;BNTang&quot;;</span><br><span class="line"></span><br><span class="line">    public String createToken(String username) &#123;</span><br><span class="line">        // token 过期时间</span><br><span class="line">        long tokenExpiration = 24 * 60 * 60 * 1000;</span><br><span class="line">        return Jwts.builder().setSubject(username)</span><br><span class="line">                .setExpiration(new Date(System.currentTimeMillis() + tokenExpiration))</span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, TOKEN_SIGNKEY).compressWith(CompressionCodecs.GZIP).compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getUserFromToken(String token) &#123;</span><br><span class="line">        return Jwts.parser()</span><br><span class="line">                .setSigningKey(TOKEN_SIGNKEY)</span><br><span class="line">                .parseClaimsJws(token)</span><br><span class="line">                .getBody()</span><br><span class="line">                .getSubject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UnauthorizedEntryPoint</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description 未授权的统一处理方式</span><br><span class="line"> * @since Created in 2021/5/2 002 12:14</span><br><span class="line"> **/</span><br><span class="line">public class UnauthorizedEntryPoint implements AuthenticationEntryPoint &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void commence(HttpServletRequest request, HttpServletResponse response,</span><br><span class="line">                         AuthenticationException authException) &#123;</span><br><span class="line">        ResponseUtil.out(response, ResponseResult.error());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="common-utils-模块"><a href="#common-utils-模块" class="headerlink" title="common_utils 模块"></a>common_utils 模块</h3><h4 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h4><p>ResponseUtil</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 13:06</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">out</span><span class="params">(HttpServletResponse response, ResponseResult r)</span> &#123;</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        response.setStatus(HttpStatus.OK.value());</span><br><span class="line">        response.setContentType(MediaType.APPLICATION_JSON_UTF8_VALUE);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mapper.writeValue(response.getWriter(), r);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="44-权限控制-Token与JWT"><a href="#44-权限控制-Token与JWT" class="headerlink" title="44-权限控制-Token与JWT"></a>44-权限控制-Token与JWT</h2><h3 id="登录模型"><a href="#登录模型" class="headerlink" title="登录模型"></a>登录模型</h3><h4 id="单一服务器模式"><a href="#单一服务器模式" class="headerlink" title="单一服务器模式"></a>单一服务器模式</h4><p>单一服务器，用户认证，用户信息存储到 session 当中</p><h4 id="SSO-single-sign-on-模式"><a href="#SSO-single-sign-on-模式" class="headerlink" title="SSO(single sign on) 模式"></a>SSO(single sign on) 模式</h4><p>单点登录(Single Sign On，SSO)就是通过用户的一次性鉴别登录</p><p>当用户在身份认证服务器上登录一次以后，即可获得访问单点登录系统中其他关联系统和应用软件的权限，同时这种实现是不需要管理员对用户的登录状态或其他信息进行修改的，这意味着在多个应用系统中，用户只需一次登录就可以访问所有相互信任的应用系统</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504180727496-832298179.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504180727496-832298179.png" alt="img"></a></p><p>优点，用户身份信息独立管理，更好的分布式管理，可以自己扩展安全策略</p><p>缺点，认证服务器访问压力较大</p><h4 id="Token-模式"><a href="#Token-模式" class="headerlink" title="Token 模式"></a>Token 模式</h4><p>Token 是一种无状态、跨服务器、高性能的验证模式</p><p>特点，无状态、可扩展，支持移动设备，跨程序调用，安全</p><p><strong>原理</strong></p><p>基于 Token 的身份验证是无状态的，我们不用将用户信息存在服务器或 Session 中, 用户通过用户名和密码发送请求, 程序验证, 程序返回一个签名的 token 给客户端, 客户端储存 token, 并且每次请求都会附带它, 服务端验证 token 并返回数据</p><p><strong>原理图</strong></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504181019158-416735389.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504181019158-416735389.png" alt="img"></a></p><p>优点，无状态：token 无状态，session 是有状态的，基于标准化，你的 API 可以采用标准化的 JSON Web Token(JWT)</p><p>缺点，占用带宽，无法在服务器端销毁</p><h3 id="验证方式"><a href="#验证方式" class="headerlink" title="验证方式"></a>验证方式</h3><h4 id="传统用户身份验证"><a href="#传统用户身份验证" class="headerlink" title="传统用户身份验证"></a>传统用户身份验证</h4><p>特点，用户向服务器发送用户名和密码，服务器验证相关数据后（如用户角色，登录时间等）将保存在当前会话中，用户的每个后续请求都将通过在 Cookie 中取出 session_id 传给服务器，服务器收到 session_id 并对比之前保存的数据，确认用户的身份，服务器向用户返回 session_id，session 信息都会写入到用户的 Cookie</p><p>缺点，没有分布式架构，无法支持横向扩展</p><h4 id="session-共享"><a href="#session-共享" class="headerlink" title="session 共享"></a>session 共享</h4><p>将透明令牌存入 cookie，将用户身份信息存入 redis</p><h4 id="JWT-令牌"><a href="#JWT-令牌" class="headerlink" title="JWT 令牌"></a>JWT 令牌</h4><p>在微服务之间使用 JWT 共享信息</p><h3 id="JWT-令牌-1"><a href="#JWT-令牌-1" class="headerlink" title="JWT 令牌"></a>JWT 令牌</h3><h4 id="什么是-JWT"><a href="#什么是-JWT" class="headerlink" title="什么是 JWT"></a>什么是 JWT</h4><p>在微服务之间使用 JWT 共享信息</p><p>JSON Web Token（JWT）是一个开放的行业标准（RFC 7519）它定义了一种简介的、自包含的协议格式，用于在通信双方传递 JSON 对象, 传递的信息经过数字签名可以被验证和信任, JWT 可以使用 HMAC 算法或使用 RSA 的公钥 &#x2F; 私钥对来签名，防止被篡改, 对普通的信息进行加密处理后, 转成 JSON, 转过之后的数据称它是 token</p><h4 id="JWT-能做什么"><a href="#JWT-能做什么" class="headerlink" title="JWT 能做什么"></a>JWT 能做什么</h4><p>授权, 这是使用 JWT 的最常见方案。一旦用户登录，每个后续请求将包括 JWT，从而允许用户访问该令牌允许的路由，服务和资源, 登录成功之后, 生成一个 JWT 当中包含用户的信息</p><p>信息交换, JSON Web Token 是在各方之间安全地传输信息的好方法</p><h4 id="session-认证与-JWT-认证的区别"><a href="#session-认证与-JWT-认证的区别" class="headerlink" title="session 认证与 JWT 认证的区别"></a>session 认证与 JWT 认证的区别</h4><p>session: 基于 session 和基于 jwt 的方式的主要区别就是用户的状态保存的位置，session 是保存在服务端的，下一次再去从 session 当中取数据</p><p>jwt: 用户输入用户名与密码, 校验(从数据库当中查看有没有对应的数据)如果有对应的数据, 会把用户取出来, 把取出的用户数据, 转成 JWT，以 token 令牌的形式传给前端, 前端拿到数据之后, 会给存储到 cookie，以后每一次请求都要携带 token，服务器就会获取 token 之后, 再进行 jwt 解析, 读取用户数据, 如果没有数据, 就代表没有登录, 而 jwt 是保存在客户端的</p><h4 id="JWT-令牌的优缺点"><a href="#JWT-令牌的优缺点" class="headerlink" title="JWT 令牌的优缺点"></a>JWT 令牌的优缺点</h4><p>优点：jwt 基于 JSON，非常方便解析, 可以在令牌中自定义丰富的内容，易扩展, 通过 <code>非对称</code> 加密算法及数字签名技术，JWT 防止篡改，安全性高, 资源服务使用 JWT 可不依赖认证服务即可完成授权</p><p>缺点：JWT 令牌较长，占存储空间比较大</p><h4 id="令牌结构"><a href="#令牌结构" class="headerlink" title="令牌结构"></a>令牌结构</h4><p>JWT 令牌由三部分组成，每部分中间使用点（<code>.</code>）分隔, 比如：xxxxx<code>.</code>yyyyy<code>.</code>zzzzz</p><h3 id="三部分"><a href="#三部分" class="headerlink" title="三部分"></a>三部分</h3><h4 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h4><p>JWT 头部分是一个描述 JWT 元数据的 JSON 对象, 头部包括令牌的类型（即 JWT）及使用的哈希算法（如 HMAC SHA256 或 RSA）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;alg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;HS256&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;typ&quot;</span><span class="punctuation">:</span> <span class="string">&quot;JWT&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h4><p>第二部分是负载，内容也是一个 JSON 对象, JWT 指定七个默认字段供选择</p><ul><li>iss：发行人</li><li>exp：到期时间</li><li>sub：主题</li><li>aud：用户</li><li>nbf：在此之前不可用</li><li>iat：发布时间</li><li>jti：JWT ID 用于标识该 JWT</li></ul><p>除以上默认字段外，我们还可以自定义私有字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">&quot;name&quot;: &quot;456&quot;,</span><br><span class="line">&quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此部分不建议存放敏感信息，因为此部分可以解码还原原始内容, 最后将第二部分负载使用 Base64Url 编码，得到一个字符串就是 JWT 令牌的第二部分</p><h4 id="Signature"><a href="#Signature" class="headerlink" title="Signature"></a>Signature</h4><p>第三部分签名哈希部分是对上面两部分数据签名，通过指定的算法生成哈希，以确保数据不会被篡改, 首先，需要指定一个密码（secret）该密码仅仅为保存在服务器中，并且不能向用户公开, 然后，使用标头中指定的签名算法（默认情况下为 HMAC SHA256）根据以下公式生成签名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">base64UrlEncode(header) + &quot;.&quot; +base64UrlEncode(payload),secret</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504184003834-960750464.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504184003834-960750464.png" alt="img"></a></p><h3 id="在工具类当中集成-JWT-令牌"><a href="#在工具类当中集成-JWT-令牌" class="headerlink" title="在工具类当中集成 JWT 令牌"></a>在工具类当中集成 JWT 令牌</h3><p>在 common_utils 微服务当中添加 jwt 依赖如下，你直接替换一下全部的内容吧 common_utils pom.xml 依赖如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- JWT--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--工具类包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.activation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 JwtUtils</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> jwt工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 16:15</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtils</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过期时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">EXPIRE</span> <span class="operator">=</span> <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">APP_SECRET</span> <span class="operator">=</span> <span class="string">&quot;BNTang&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id和昵称获取token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getJwtToken</span><span class="params">(String id, String nickname)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Jwts.builder()</span><br><span class="line">                .setHeaderParam(<span class="string">&quot;typ&quot;</span>, <span class="string">&quot;JWT&quot;</span>)</span><br><span class="line">                .setHeaderParam(<span class="string">&quot;alg&quot;</span>, <span class="string">&quot;HS256&quot;</span>)</span><br><span class="line">                .setSubject(<span class="string">&quot;fm-user&quot;</span>)</span><br><span class="line">                .setIssuedAt(<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line">                .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + EXPIRE))</span><br><span class="line">                .claim(<span class="string">&quot;id&quot;</span>, id)</span><br><span class="line">                .claim(<span class="string">&quot;nickname&quot;</span>, nickname)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS256, APP_SECRET)</span><br><span class="line">                .compact();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断token是否存在与有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkToken</span><span class="params">(String jwtToken)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jwtToken)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断token是否存在与有效</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkToken</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">jwtToken</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(jwtToken)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getUserIdByJwtToken</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">jwtToken</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(jwtToken)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Jws&lt;Claims&gt; claimsJws = Jwts.parser().setSigningKey(APP_SECRET).parseClaimsJws(jwtToken);</span><br><span class="line">        <span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> claimsJws.getBody();</span><br><span class="line">        <span class="keyword">return</span> (String) claims.get(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="45-权限控制-auth工程当中添加用户验证"><a href="#45-权限控制-auth工程当中添加用户验证" class="headerlink" title="45-权限控制-auth工程当中添加用户验证"></a>45-权限控制-auth工程当中添加用户验证</h2><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><p>创建 IndexService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 21:03</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IndexService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Map&lt;String, Object&gt; <span class="title function_">getUserInfo</span><span class="params">(String name)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前登陆用户的菜单</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户菜单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;JSONObject&gt; <span class="title function_">getMenu</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 MenuService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户ID查询用户权限</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 用户权限</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;String&gt; <span class="title function_">selectPermissionValueByUserId</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户id返回前端的菜单</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 前端的菜单</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;JSONObject&gt; <span class="title function_">selectPermissionByUserId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 RoleService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户id查询角色</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 用户对应的角色</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Role&gt; <span class="title function_">selectRoleByUserId</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 UserService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户名从数据库中取出用户信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User <span class="title function_">selectByUserName</span><span class="params">(String username)</span>;</span><br></pre></td></tr></table></figure><h3 id="Impl"><a href="#Impl" class="headerlink" title="Impl"></a>Impl</h3><p>创建 IndexServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 21:09</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IndexService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RoleService roleService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MenuService menuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, List&lt;String&gt;&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名获取用户登录信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getUserInfo</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        Map&lt;String, Object&gt; result = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectByUserName(username);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isEmpty(user)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">200001</span>, <span class="string">&quot;没有该用户&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据用户id获取角色</span></span><br><span class="line">        List&lt;Role&gt; roleList = roleService.selectRoleByUserId(user.getId());</span><br><span class="line">        List&lt;String&gt; roleNameList = roleList.stream().map(Role::getRoleName).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">if</span> (roleNameList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 前端框架必须返回一个角色，否则报错，如果没有角色，返回一个空角色</span></span><br><span class="line">            roleNameList.add(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据用户id获取操作权限值</span></span><br><span class="line">        List&lt;String&gt; permissionValueList = menuService.selectPermissionValueByUserId(user.getId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 把权限缓存到redis当中</span></span><br><span class="line">        redisTemplate.opsForValue().set(username, permissionValueList);</span><br><span class="line"></span><br><span class="line">        result.put(<span class="string">&quot;name&quot;</span>, user.getUsername());</span><br><span class="line">        result.put(<span class="string">&quot;avatar&quot;</span>, user.getSalt());</span><br><span class="line">        result.put(<span class="string">&quot;roles&quot;</span>, roleNameList);</span><br><span class="line">        result.put(<span class="string">&quot;permissionValueList&quot;</span>, permissionValueList);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名获取动态菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;JSONObject&gt; <span class="title function_">getMenu</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="comment">// 根据用户id获取用户菜单权限</span></span><br><span class="line">        <span class="keyword">return</span> menuService.selectPermissionByUserId(userService.selectByUserName(username).getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 MenuServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;String&gt; <span class="title function_">selectPermissionValueByUserId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    List&lt;String&gt; selectPermissionValueList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.isSysAdmin(id)) &#123;</span><br><span class="line">        <span class="comment">// 如果是系统管理员，获取所有权限</span></span><br><span class="line">        selectPermissionValueList = baseMapper.selectAllMenuValue();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 否则就不是系统管理员，根据用户查询菜单权限</span></span><br><span class="line">        selectPermissionValueList = baseMapper.selectMenuValueByUserId(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> selectPermissionValueList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;JSONObject&gt; <span class="title function_">selectPermissionByUserId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    List&lt;Menu&gt; selectMenuList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.isSysAdmin(id)) &#123;</span><br><span class="line">        <span class="comment">// 如果是超级管理员，获取所有菜单</span></span><br><span class="line">        selectMenuList = baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        selectMenuList = baseMapper.selectMenuByUserId(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1.构建树形菜单</span></span><br><span class="line">    List&lt;Menu&gt; menuList = buildTreeMenu(selectMenuList);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.返回给前端json数据</span></span><br><span class="line">    <span class="keyword">return</span> buildMenuWebList(menuList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;JSONObject&gt; <span class="title function_">buildMenuWebList</span><span class="params">(List&lt;Menu&gt; menuList)</span> &#123;</span><br><span class="line">    List&lt;JSONObject&gt; menus = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (menuList.size() == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 左侧一级菜单</span></span><br><span class="line">        menuList.get(<span class="number">0</span>).getChildren().forEach(oneMenu -&gt; &#123;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">oneMenuObj</span> <span class="operator">=</span> <span class="built_in">this</span>.generateJsonObj(oneMenu, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            List&lt;JSONObject&gt; children = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            oneMenu.getChildren().forEach(twoMenu -&gt; &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">twoMenuObj</span> <span class="operator">=</span> <span class="built_in">this</span>.generateJsonObj(twoMenu, <span class="literal">false</span>);</span><br><span class="line">                children.add(twoMenuObj);</span><br><span class="line"></span><br><span class="line">                twoMenu.getChildren().forEach(three -&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (StringUtils.isEmpty(three.getPath())) &#123;</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">JSONObject</span> <span class="variable">threeMenu</span> <span class="operator">=</span> <span class="built_in">this</span>.generateJsonObj(three, <span class="literal">true</span>);</span><br><span class="line">                    children.add(threeMenu);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">            oneMenuObj.put(<span class="string">&quot;children&quot;</span>, children);</span><br><span class="line">            menus.add(oneMenuObj);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> menus;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成菜单信息JSON对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> JSONObject <span class="title function_">generateJsonObj</span><span class="params">(Menu menu, Boolean whetherDisplay)</span> &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">jsonObj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    jsonObj.put(<span class="string">&quot;path&quot;</span>, menu.getPath());</span><br><span class="line">    jsonObj.put(<span class="string">&quot;component&quot;</span>, menu.getComponent());</span><br><span class="line">    jsonObj.put(<span class="string">&quot;hidden&quot;</span>, whetherDisplay);</span><br><span class="line"></span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">oneMeta</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    oneMeta.put(<span class="string">&quot;title&quot;</span>, menu.getName());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(menu.getIcon())) &#123;</span><br><span class="line">        oneMeta.put(<span class="string">&quot;icon&quot;</span>, menu.getIcon());</span><br><span class="line">    &#125;</span><br><span class="line">    jsonObj.put(<span class="string">&quot;meta&quot;</span>, oneMeta);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonObj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断用户是否是系统管理员</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isSysAdmin</span><span class="params">(String userId)</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(userId);</span><br><span class="line">    <span class="keyword">return</span> !ObjectUtils.isEmpty(user) &amp;&amp; <span class="string">&quot;admin&quot;</span>.equals(user.getUsername());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 RoleServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Role&gt; <span class="title function_">selectRoleByUserId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="comment">// 根据用户id查询拥有的角色id</span></span><br><span class="line">    List&lt;UserRole&gt; userRoleList = userRoleService.list(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;UserRole&gt;()</span><br><span class="line">            .eq(<span class="string">&quot;user_id&quot;</span>, id)</span><br><span class="line">            .select(<span class="string">&quot;role_id&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取所有角色id</span></span><br><span class="line">    List&lt;String&gt; roleIdList = userRoleList.stream().map(UserRole::getRoleId).collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据角色id查询所有的角色信息</span></span><br><span class="line">    List&lt;Role&gt; roleList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (roleIdList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        roleList = baseMapper.selectBatchIds(roleIdList);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> roleList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 UserDetailsServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 用户验证业务</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 16:42</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MenuService menuService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     * 根据账号获取用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException &#123;</span><br><span class="line">        <span class="comment">// 从数据库中取出用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectByUserName(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (ObjectUtils.isEmpty(user)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UsernameNotFoundException</span>(<span class="string">&quot;用户不存在！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回UserDetails实现类</span></span><br><span class="line">        top.it6666.common_security.entity.<span class="type">User</span> <span class="variable">curUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">top</span>.it6666.common_security.entity.User();</span><br><span class="line">        BeanUtils.copyProperties(user, curUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询用户权限</span></span><br><span class="line">        List&lt;String&gt; authorities = menuService.selectPermissionValueByUserId(user.getId());</span><br><span class="line">        <span class="type">SecurityUser</span> <span class="variable">securityUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityUser</span>(curUser);</span><br><span class="line">        securityUser.setPermissionValueList(authorities);</span><br><span class="line">        <span class="keyword">return</span> securityUser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 UserServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">selectByUserName</span><span class="params">(String username)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> baseMapper.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().eq(<span class="string">&quot;username&quot;</span>, username));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>创建 IndexController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/2 002 21:02</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;工作人员-用户组&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_auth/admin/index&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> IndexService indexService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据token获取用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据token获取用户信息&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;info&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">info</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前登录用户用户名</span></span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(indexService.getUserInfo(SecurityContextHolder.getContext().getAuthentication().getName()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前登陆用户的菜单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取当前登陆用户的菜单&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;menu&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getMenu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前登录用户用户名</span></span><br><span class="line">        List&lt;JSONObject&gt; menuList = indexService.getMenu(SecurityContextHolder.getContext().getAuthentication().getName());</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;menuList&quot;</span>, menuList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 application.yml 加入 Redis 的相关配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">  <span class="attr">lettuce:</span></span><br><span class="line">    <span class="attr">pool:</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">      <span class="comment"># 最大阻塞等待时间</span></span><br><span class="line">      <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>修改 service_auth 的 pom.xml 加入 security 安全认证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;top.it6666&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;common_security&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="Mapper"><a href="#Mapper" class="headerlink" title="Mapper"></a>Mapper</h3><p>修改 MenuMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 菜单权限 Mapper 接口</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-04-21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MenuMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Menu&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有的菜单</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 菜单信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;String&gt; <span class="title function_">selectAllMenuValue</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户ID查询用户菜单权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 菜单权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;String&gt; <span class="title function_">selectMenuValueByUserId</span><span class="params">(String id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id获取菜单权限</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 菜单权限信息数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Menu&gt; <span class="title function_">selectMenuByUserId</span><span class="params">(String id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 MenuMapper.xml</p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;top.it6666.service_auth.mapper.MenuMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllMenuValue&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">        SELECT permission_value</span><br><span class="line">        FROM auth_menu</span><br><span class="line">        WHERE type = 2</span><br><span class="line">          AND is_deleted = 0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectMenuValueByUserId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">        SELECT p.permission_value</span><br><span class="line">        FROM auth_user_role ur</span><br><span class="line">                     INNER JOIN auth_role_menu rp ON rp.role_id = ur.role_id</span><br><span class="line">                     INNER JOIN auth_menu p ON p.id = rp.permission_id</span><br><span class="line">        WHERE ur.user_id = #&#123;userId&#125;</span><br><span class="line">          AND p.type = 2</span><br><span class="line">          AND ur.is_deleted = 0</span><br><span class="line">          AND rp.is_deleted = 0</span><br><span class="line">          AND p.is_deleted = 0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectMenuByUserId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;top.it6666.service_auth.entity.Menu&quot;</span>&gt;</span></span><br><span class="line">        SELECT p.id,</span><br><span class="line">               p.pid,</span><br><span class="line">               p.name,</span><br><span class="line">               p.type,</span><br><span class="line">               p.permission_value,</span><br><span class="line">               path,</span><br><span class="line">               p.component,</span><br><span class="line">               p.icon,</span><br><span class="line">               p.status,</span><br><span class="line">               p.is_deleted</span><br><span class="line">        FROM auth_user_role ur</span><br><span class="line">                     INNER JOIN auth_role_menu rp ON rp.role_id = ur.role_id</span><br><span class="line">                     INNER JOIN auth_menu p ON p.id = rp.permission_id</span><br><span class="line">        WHERE ur.user_id = #&#123;userId&#125;</span><br><span class="line">          AND ur.is_deleted = 0</span><br><span class="line">          AND rp.is_deleted = 0</span><br><span class="line">          AND p.is_deleted = 0</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 Menu 实体类去除逻辑删除</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504194832533-2026546127.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210504194832533-2026546127.png" alt="img"></a></p><h2 id="46-权限控制-前端权限按钮控制"><a href="#46-权限控制-前端权限按钮控制" class="headerlink" title="46-权限控制-前端权限按钮控制"></a>46-权限控制-前端权限按钮控制</h2><p>创建 <code>button-control.js</code> 如下代码的含义为就是校验一下看看是否有对应的权限如果有就是返回 true 没有就是 false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;@/store&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">hasBtnPermission</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> myBtns = store.<span class="property">getters</span>.<span class="property">buttons</span></span><br><span class="line">  <span class="keyword">return</span> myBtns.<span class="title function_">indexOf</span>(value) &gt; -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将自定义的方法绑定到 vue 的实例上面这样我们就可以在 v-if 获取其它的标签当中直接使用我们的方法了如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181644255-90228828.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181644255-90228828.png" alt="img"></a></p><p>使用方式如下，看看是否有对应的权限值如果没有就不显示按钮给用户操作</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181719799-2023198645.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181719799-2023198645.png" alt="img"></a></p><p>修复一个 BUG 修改 user.js 如下添加如下内容即可修复，问题就是同一个用户登录，退出之后在登陆路由信息点击有问题就是重置路由的问题</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181901242-2070449372.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210505181901242-2070449372.png" alt="img"></a></p><h2 id="47-前端门户-服务端渲染SSR"><a href="#47-前端门户-服务端渲染SSR" class="headerlink" title="47-前端门户-服务端渲染SSR"></a>47-前端门户-服务端渲染SSR</h2><h3 id="关于服务端渲染"><a href="#关于服务端渲染" class="headerlink" title="关于服务端渲染"></a>关于服务端渲染</h3><blockquote><ul><li>服务端渲染又称 <code>SSR(Server Side Render)</code> 是在服务端完成页面的内容，而不是在客户端通过 AJAX 获取数据。</li><li>服务器端渲染 (SSR) 的优势主要在于：更好的 <code>SEO</code>，由于搜索引擎爬虫抓取工具可以直接查看完全渲染的页面。</li><li>使用服务器端渲染，我们可以获得更快的内容到达时间 (time-to-content) 无需等待所有的 JavaScript 都完成下载并执行，产生更好的用户体验。</li><li>简单理解就是将组件或页面通过服务器生成 HTML 字符串，再发送到浏览器，最后将静态标记 “混合” 为客户端上完全交互的应用程序。</li></ul></blockquote><h3 id="NUXT-js"><a href="#NUXT-js" class="headerlink" title="NUXT.js"></a>NUXT.js</h3><blockquote><ul><li><code>Nuxt.js</code> 是一个基于 <code>Vue.js</code> 的轻量级应用框架, 可用来创建服务端渲染 (SSR) 应用。</li><li>也可以充当静态站点引擎生成静态站点应用, 具有优雅的代码结构分层和热加载等特性。</li><li>官方地址：<a href="https://zh.nuxtjs.org/">https://zh.nuxtjs.org</a></li><li>一个用于 Vue.js 开发 SSR 应用的一站式解决方案。</li><li>Nuxt.js 是使用 Webpack 和 Node.js 进行封装的基于 Vue 的 SSR 框架。</li></ul></blockquote><h4 id="NUXT-环境初始化"><a href="#NUXT-环境初始化" class="headerlink" title="NUXT 环境初始化"></a>NUXT 环境初始化</h4><p>有两种方式可以进行初始化</p><h5 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h5><p>就是直接去 GitHub 下载对应的模板</p><p>GitHub 地址：<a href="https://github.com/nuxt-community/starter-template">https://github.com/nuxt-community/starter-template</a></p><h5 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h5><p>就是使用 vue-cli</p><p>安装 vue-cli</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli-init</span><br></pre></td></tr></table></figure><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init nuxt-community/starter-template video_portal</span><br></pre></td></tr></table></figure><p>选择一个存放位置如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509114654817-699452394.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509114654817-699452394.png" alt="img"></a></p><p>在该项目当中使用安装相关依赖</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509130704696-1821498642.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509130704696-1821498642.png" alt="img"></a></p><p>配置启动设置</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509141537600-595648792.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509141537600-595648792.png" alt="img"></a></p><h4 id="NUXT-目录结构"><a href="#NUXT-目录结构" class="headerlink" title="NUXT 目录结构"></a>NUXT 目录结构</h4><ul><li>资源目录：assets 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript。</li><li>组件目录：components 用于组织应用的 Vue.js 组件。Nuxt.js 不会扩展增强该目录下 Vue.js 组件，即这些组件不会像页面组件那样有 asyncData 方法的特性。</li><li>布局目录：layouts 用于组织应用的布局组件。对整个页面进行整体划分布局。</li><li>页面目录：pages 用于组织应用的路由及视图。Nuxt.js 框架读取该目录下所有的 <code>.vue</code> 文件并自动生成对应的路由配置，具体的页面信息。</li><li>插件目录：plugins 用于组织那些需要在根 vue.js 应用实例化之前需要运行的 Javascript 插件。</li><li>nuxt.config.js：文件，<code>nuxt.config.js</code> 文件用于组织 Nuxt.js 应用的个性化配置，以便覆盖默认配置。</li></ul><h4 id="布局与页面"><a href="#布局与页面" class="headerlink" title="布局与页面"></a>布局与页面</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509214456564-786002433.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210509214456564-786002433.png" alt="img"></a></p><h3 id="页面整合"><a href="#页面整合" class="headerlink" title="页面整合"></a>页面整合</h3><h4 id="安装轮播图插件"><a href="#安装轮播图插件" class="headerlink" title="安装轮播图插件"></a>安装轮播图插件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install swiper vue-awesome-swiper --save</span><br></pre></td></tr></table></figure><h4 id="配置轮播图插件"><a href="#配置轮播图插件" class="headerlink" title="配置轮播图插件"></a>配置轮播图插件</h4><p>在 plugins 文件夹下新建文件 <code>nuxt-swiper-plugin.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;;</span><br><span class="line">import VueAwesomeSwiper from &#x27;vue-awesome-swiper&#x27;;</span><br><span class="line"></span><br><span class="line">Vue.use(VueAwesomeSwiper);</span><br></pre></td></tr></table></figure><p>在 <code>nuxt.config.js</code> 文件中配置轮播图插件，将 plugins 和 css 节点复制到 module.exports 节点下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515111128939-1962923580.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515111128939-1962923580.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* plugins</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">  &#123;<span class="attr">src</span>: <span class="string">&#x27;~/plugins/nuxt-swiper-plugin.js&#x27;</span>, <span class="attr">ssr</span>: <span class="literal">false</span>&#125;</span><br><span class="line">],</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* CSS</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="attr">css</span>: [</span><br><span class="line">  <span class="string">&#x27;swiper/swiper-bundle.css&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="集成-Element-UI"><a href="#集成-Element-UI" class="headerlink" title="集成 Element-UI"></a>集成 Element-UI</h4><h5 id="安装-Element-UI"><a href="#安装-Element-UI" class="headerlink" title="安装 Element-UI"></a>安装 Element-UI</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-ui</span><br></pre></td></tr></table></figure><p>在 plugins 文件夹下，添加 <code>ElementUI.js</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;;</span><br><span class="line">import ElementUI from &#x27;element-ui&#x27;;</span><br><span class="line"></span><br><span class="line">Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><p>在 nuxt.config.js 中添加 Element-UI 配置</p><p><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515111537148-1867048462.png" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;src: &#x27;~plugins/ElementUI&#x27;, ssr: true&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span><br></pre></td></tr></table></figure><h3 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h3><h4 id="复制静态资源"><a href="#复制静态资源" class="headerlink" title="复制静态资源"></a>复制静态资源</h4><p>将静态原型中的 css、img、js 目录拷贝至 assets 目录下, 将 favicon.ico 复制到 static 目录下，页面资源下载链接：<a href="https://wwe.lanzoui.com/iQyhyp5jwab">https://wwe.lanzoui.com/iQyhyp5jwab</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515112035890-385520003.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515112035890-385520003.png" alt="img"></a></p><h4 id="定义布局"><a href="#定义布局" class="headerlink" title="定义布局"></a>定义布局</h4><p>修改 layouts 目录下 <code>default.vue</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515112150168-1525156400.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515112150168-1525156400.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 页头部分 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 内容的区域 --&gt;</span><br><span class="line">    &lt;nuxt/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 页尾部分 --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>定义首页页面, 修改 <code>pages/index.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 轮播图 开始 --&gt;</span><br><span class="line">    &lt;div class=&quot;warper&quot; style=&quot;position: relative&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;warper_content&quot;&gt;</span><br><span class="line">        &lt;!--分类--&gt;</span><br><span class="line">        &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(cate, index) in categoryList&quot; v-bind:key=&quot;index&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;coursex-item1&quot;&gt;</span><br><span class="line">                &lt;a class=&quot;shuang&quot;&gt;&#123;&#123; cate.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;swiper :options=&quot;swiperOptions&quot; class=&quot;swiper-cus&quot;&gt;</span><br><span class="line">          &lt;swiper-slide v-for=&quot;banner in bannerList&quot; :key=&quot;banner.id&quot; :style=&quot;&#123;background:banner.imageBg&#125;&quot;&gt;</span><br><span class="line">            &lt;a target=&quot;_blank&quot; :href=&quot;banner.linkUrl&quot;&gt;</span><br><span class="line">              &lt;img width=&quot;1200&quot; height=&quot;380&quot; style=&quot;min-height: 380px;&quot;</span><br><span class="line">                   :src=&quot;banner.imageUrl&quot;</span><br><span class="line">                   :alt=&quot;banner.title&quot;/&gt;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">          &lt;/swiper-slide&gt;</span><br><span class="line">          &lt;div class=&quot;swiper-pagination swiper-pagination-white&quot; slot=&quot;pagination&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div style=&quot;left: 200px;&quot; class=&quot;swiper-button-prev swiper-button-white&quot; slot=&quot;button-prev&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;div style=&quot;right: 200px&quot; class=&quot;swiper-button-next swiper-button-white&quot; slot=&quot;button-next&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/swiper&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 轮播图 结束 --&gt;</span><br><span class="line">    &lt;!--列表--&gt;</span><br><span class="line">    &lt;div id=&quot;videoList&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">          &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">            &lt;h2 class=&quot;tac&quot;&gt;</span><br><span class="line">              &lt;span class=&quot;c-333&quot; style=&quot;float:left; border-left: 3px solid red; padding-left: 10px;&quot;&gt;热门视频&lt;/span&gt;</span><br><span class="line">              &lt;span class=&quot;c-333&quot; style=&quot;float:right; font-size: 18px; &quot;&gt;&lt;a href=&quot;#&quot;&gt;更多&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/h2&gt;</span><br><span class="line">          &lt;/header&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;article class=&quot;comm-video-list&quot;&gt;</span><br><span class="line">              &lt;ul&gt;</span><br><span class="line">                &lt;li v-for=&quot;(content,index) in contentList&quot; class=&quot;fl&quot; v-bind:key=&quot;index&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                    &lt;section class=&quot;video-img&quot;&gt;</span><br><span class="line">                      &lt;img style=&quot;width: 100%;height: 100%&quot;</span><br><span class="line">                           :src=&quot;content.cover&quot;</span><br><span class="line">                           class=&quot;img-responsive&quot;</span><br><span class="line">                      &gt;</span><br><span class="line">                      &lt;div class=&quot;cc-mask&quot;&gt;</span><br><span class="line">                        &lt;a :href=&quot;&#x27;/video/&#x27;+content.id&quot; class=&quot;comm-btn c-btn-1&quot;&gt;播放&lt;/a&gt;</span><br><span class="line">                      &lt;/div&gt;</span><br><span class="line">                    &lt;/section&gt;</span><br><span class="line">                    &lt;h3 class=&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                      &lt;a href=&quot;#&quot; class=&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123; content.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/h3&gt;</span><br><span class="line">                    &lt;section class=&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;fr jgTag bg-orangered&quot; v-if=&quot;Number(content.price) === 0&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;fr jgTag bg-orangered&quot; v-else&gt;</span><br><span class="line">                          &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt; ￥&#123;&#123; content.price &#125;&#125;&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.buyCount &#125;&#125; 人学习&lt;/i&gt;|</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.viewCount &#125;&#125; 人浏览&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                    &lt;/section&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/article&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      优秀创作者</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">          &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">            &lt;h2 class=&quot;tac&quot;&gt;</span><br><span class="line">              &lt;span class=&quot;c-333&quot; style=&quot;float:left; border-left: 3px solid red; padding-left: 10px;&quot;&gt;优秀创作者&lt;/span&gt;</span><br><span class="line">              &lt;span class=&quot;c-333&quot; style=&quot;float:right; font-size: 18px; &quot;&gt;&lt;a href=&quot;#&quot;&gt;更多&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/h2&gt;</span><br><span class="line">          &lt;/header&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">            &lt;article class=&quot;i-author-list&quot;&gt;</span><br><span class="line">              &lt;div v-for=&quot;(author,index) in authorList&quot; v-bind:key=&quot;index&quot; class=&quot;yd-open-course-card open-course-card&quot;&gt;</span><br><span class="line">                &lt;a :href=&#x27;&quot;/author/&quot;+author.id&#x27; :title=&quot;index.name&quot; style=&quot;color: #7F828B;text-decoration:none;&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;yd-open-course-card_avatar&quot;&gt;</span><br><span class="line">                    &lt;img :alt=&quot;author.name&quot; :src=&quot;author.avatar&quot;&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div class=&quot;yd-open-course-card_content_teacher&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;yd-open-course-card_content_teacher_tag&quot;&gt;&#123;&#123; author.name &#125;&#125;&lt;/div&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div&gt;&#123;&#123; author.intro &#125;&#125;&lt;/div&gt;</span><br><span class="line">                  &lt;span&gt;-------------------------&lt;/span&gt;</span><br><span class="line">                  &lt;div&gt;&#123;&#123; author.career &#125;&#125;&lt;/div&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/article&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Swiper, &#123;Pagination, Navigation&#125; from &#x27;swiper&#x27;;</span><br><span class="line"></span><br><span class="line">Swiper.use([Pagination, Navigation]);</span><br><span class="line">import banner from &quot;@/api/banner&quot;;</span><br><span class="line">import index from &#x27;@/api/index&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      swiperOptions: &#123;</span><br><span class="line">        loop: true,</span><br><span class="line">        pagination: &#123;</span><br><span class="line">          el: &#x27;.swiper-pagination&#x27;</span><br><span class="line">        &#125;,</span><br><span class="line">        // 配置导航</span><br><span class="line">        navigation: &#123;</span><br><span class="line">          // 下一页dom节点</span><br><span class="line">          nextEl: &#x27;.swiper-button-next&#x27;,</span><br><span class="line">          // 前一页dom节点</span><br><span class="line">          prevEl: &#x27;.swiper-button-prev&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      bannerList: &#123;&#125;,</span><br><span class="line">      categoryList: &#123;&#125;,</span><br><span class="line">      authorList: &#123;&#125;,</span><br><span class="line">      contentList: &#123;&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.initBanner();</span><br><span class="line">    this.initIndexData();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initBanner() &#123;</span><br><span class="line">      banner.getList().then(response =&gt; &#123;</span><br><span class="line">        this.bannerList = response.data.list;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    initIndexData() &#123;</span><br><span class="line">      index.getList().then(response =&gt; &#123;</span><br><span class="line">        this.authorList = response.data.authorList;</span><br><span class="line">        this.contentList = response.data.contentList;</span><br><span class="line">        this.categoryList = response.data.categoryList;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;stylus&quot; scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><h4 id="固定路由"><a href="#固定路由" class="headerlink" title="固定路由"></a>固定路由</h4><p>使用 router-link 构建路由，地址是 &#x2F;course，在 page 目录创建文件夹 video，在 video 目录创建 index.vue</p><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><p>如果我们需要根据 id 查询一条记录，就需要使用动态路由，NUXT 的动态路由是以下划线开头的 vue 文件，参数名为下划线后边的文件名</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515190031367-150648376.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515190031367-150648376.png" alt="img"></a></p><h3 id="静态页面"><a href="#静态页面" class="headerlink" title="静态页面"></a>静态页面</h3><h4 id="布局页"><a href="#布局页" class="headerlink" title="布局页"></a>布局页</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;in-wrap&quot;&gt;</span><br><span class="line">    &lt;!--头部布局--&gt;</span><br><span class="line">    &lt;header id=&quot;header&quot;&gt;</span><br><span class="line">      &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;h1 id=&quot;logo&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;#&quot; title=&quot;BNTang&quot;&gt;</span><br><span class="line">            &lt;img src=&quot;~/assets/img/logo.png&quot; height=&quot;100px&quot; alt=&quot;BNTang&quot;&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;div class=&quot;h-r-nsl&quot;&gt;</span><br><span class="line">          &lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">            &lt;router-link to=&quot;/&quot; tag=&quot;li&quot; active-class=&quot;current&quot; exact&gt;</span><br><span class="line">              &lt;a&gt;首页&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/video&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;全部视频&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/author&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;创作者&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/article&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;资讯信息&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/qa&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;学习交流&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">          &lt;!-- / nav --&gt;</span><br><span class="line">          &lt;ul class=&quot;h-r-login&quot;&gt;</span><br><span class="line">            &lt;li id=&quot;no-login&quot;&gt;</span><br><span class="line">              &lt;a href=&quot;/login&quot;&gt;</span><br><span class="line">                &lt;em class=&quot;icon18 login-icon&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">                &lt;span class=&quot;vam ml5&quot;&gt;登录&lt;/span&gt;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">              |</span><br><span class="line">              &lt;a href=&quot;/register&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;vam ml5&quot;&gt;注册&lt;/span&gt;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">          &lt;aside class=&quot;h-r-search&quot;&gt;</span><br><span class="line">            &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class="line">              &lt;label class=&quot;h-r-s-box&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; placeholder=&quot;搜索...&quot; value&gt;</span><br><span class="line">                &lt;button type=&quot;submit&quot; class=&quot;s-btn&quot;&gt;</span><br><span class="line">                  &lt;em class=&quot;icon18&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">                &lt;/button&gt;</span><br><span class="line">              &lt;/label&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">          &lt;/aside&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;aside class=&quot;mw-nav-btn&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;mw-nav-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/aside&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;!--引入主体--&gt;</span><br><span class="line">    &lt;nuxt/&gt;</span><br><span class="line">    &lt;!--尾部布局--&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot; style=&quot;height: 121px; background-color: #242A39; width: 100%;text-align: center;&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;three links&quot;&gt;友情链接：&lt;a style=&quot;color: #ffff;&quot; href=&quot;https://tool.oschina.net/codeformat/js/&quot;</span><br><span class="line">                                         target=&quot;_blank&quot;&gt;在线代码格式化&lt;/a&gt;&lt;a style=&quot;color: #ffff;&quot;&gt; &amp;nbsp;|&amp;nbsp; &lt;/a&gt;&lt;a</span><br><span class="line">          style=&quot;color: #ffff;&quot; href=&quot;https://www.processon.com/&quot; target=&quot;_blank&quot;&gt;在线UML&lt;/a&gt;&lt;a style=&quot;color: #ffff;&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;footer-words&quot;&gt;</span><br><span class="line">          &lt;span&gt;版权所有 © 2021 BNTang 科技有限公司 &amp;nbsp; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;http://www.beian.miit.gov.cn&quot; target=&quot;_blank&quot;</span><br><span class="line">                                                                 style=&quot;color: #C0C4CC;&quot;&gt;苏ICP备20019650号-1&lt;/a&gt; &amp;nbsp;&lt;/span&gt;</span><br><span class="line">          BNTang 技术有限公司 &lt;a style=&quot;padding-left: 14px;color:rgba(246,246,246,1);&quot; href=&quot;/sitemap.html&quot;&gt;网站地图&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &quot;~/assets/css/reset.css&quot;;</span><br><span class="line">import &quot;~/assets/css/theme.css&quot;;</span><br><span class="line">import &quot;~/assets/css/global.css&quot;;</span><br><span class="line">import &quot;~/assets/css/web.css&quot;;</span><br><span class="line">import &quot;~/assets/css/content.css&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;default&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="封装-axios"><a href="#封装-axios" class="headerlink" title="封装 axios"></a>封装 axios</h3><h4 id="下载-axios"><a href="#下载-axios" class="headerlink" title="下载 axios"></a>下载 axios</h4><p>使用命令</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>创建 utils 文件夹，utils 下创建 request.js</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515190726697-1670871587.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515190726697-1670871587.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">MessageBox</span>, <span class="title class_">Message</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// create an axios instance</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://localhost:9000&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span> <span class="comment">// request timeout</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = response.<span class="property">data</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if the custom code is not 20000, it is judged as an error.</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> !== <span class="number">20000</span>) &#123;</span><br><span class="line">      <span class="title class_">Message</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;</span></span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">50008</span> || res.<span class="property">code</span> === <span class="number">50012</span> || res.<span class="property">code</span> === <span class="number">50014</span>) &#123;</span><br><span class="line">        <span class="comment">// to re-login</span></span><br><span class="line">        <span class="title class_">MessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;You have been logged out, you can cancel to stay on this page, or log in again&#x27;</span>, <span class="string">&#x27;Confirm logout&#x27;</span>, &#123;</span><br><span class="line">          <span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,</span><br><span class="line">          <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            location.<span class="title function_">reload</span>();</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><h2 id="48-前端门户-banner微服务"><a href="#48-前端门户-banner微服务" class="headerlink" title="48-前端门户-banner微服务"></a>48-前端门户-banner微服务</h2><h3 id="创建-service-cms-工程"><a href="#创建-service-cms-工程" class="headerlink" title="创建 service_cms 工程"></a>创建 service_cms 工程</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515191720493-1564404877.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210515191720493-1564404877.png" alt="img"></a></p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `cms_banner` (</span><br><span class="line">`id` CHAR ( 19 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;ID&#x27;,</span><br><span class="line">`title` VARCHAR ( 20 ) DEFAULT &#x27;&#x27; COMMENT &#x27;标题&#x27;,</span><br><span class="line">`image_url` VARCHAR ( 500 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;图片地址&#x27;,</span><br><span class="line">`link_url` VARCHAR ( 500 ) DEFAULT &#x27;&#x27; COMMENT &#x27;链接地址&#x27;,</span><br><span class="line">`image_bg` VARCHAR ( 500 ) DEFAULT &#x27;&#x27; COMMENT &#x27;背景颜色&#x27;,</span><br><span class="line">`sort` INT ( 10 ) UNSIGNED NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;排序&#x27;,</span><br><span class="line">`is_deleted` TINYINT ( 1 ) UNSIGNED NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">`gmt_create` datetime NOT NULL COMMENT &#x27;创建时间&#x27;,</span><br><span class="line">`gmt_modified` datetime NOT NULL COMMENT &#x27;更新时间&#x27;,</span><br><span class="line">PRIMARY KEY ( `id` ),</span><br><span class="line">UNIQUE KEY `uk_name` ( `title` ) </span><br><span class="line">) ENGINE = INNODB DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci COMMENT = &#x27;首页banner表&#x27;;</span><br></pre></td></tr></table></figure><h3 id="使用代码生成器生成代码-1"><a href="#使用代码生成器生成代码-1" class="headerlink" title="使用代码生成器生成代码"></a>使用代码生成器生成代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="comment">//配置输出路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_cms\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="literal">false</span>); <span class="comment">//生成后是否打开资源管理器</span></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>); <span class="comment">//重新生成时文件是否覆盖</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * mp生成service层代码，默认接口名称第一个字母有 I</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_cms&quot;</span>); <span class="comment">//模块名</span></span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;cms_banner&quot;</span>);</span><br><span class="line">        <span class="comment">//数据库表映射到实体的命名策略 驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;cms_&quot;</span>);</span><br><span class="line">        <span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>创建 application.yml 内容如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8005</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-cms</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">HikariPool</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">top/it6666/service_cms/mapper/xml/*.xml</span></span><br></pre></td></tr></table></figure><h3 id="添加网关地址"><a href="#添加网关地址" class="headerlink" title="添加网关地址"></a>添加网关地址</h3><p>修改网关服务的 application.yml</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516000000724-1649586938.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516000000724-1649586938.png" alt="img"></a></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-cms</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://service-cms</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/service_cms/**</span></span><br></pre></td></tr></table></figure><h3 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> */</span><br><span class="line">@SpringBootApplication</span><br><span class="line">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">@MapperScan(&quot;top.it6666.service_cms.mapper&quot;)</span><br><span class="line">public class CmsApplication &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(CmsApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="接口与业务"><a href="#接口与业务" class="headerlink" title="接口与业务"></a>接口与业务</h3><p>修改 BannerController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 首页banner表 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-05-15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;首页banner组&quot;)</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_cms/banner&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BannerController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> BannerService bannerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;查询所有banner&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getAllBanner&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getAllBanner</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Banner&gt; list = bannerService.selectAllBanner();</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;list&quot;</span>, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页查询banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;分页查询banner&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;pageBanner/&#123;page&#125;/&#123;limit&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">pageBanner</span><span class="params">(<span class="meta">@PathVariable</span> <span class="type">long</span> page, <span class="meta">@PathVariable</span> <span class="type">long</span> limit)</span> &#123;</span><br><span class="line">        Page&lt;Banner&gt; pageBanner = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(page, limit);</span><br><span class="line">        bannerService.page(pageBanner, <span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok()</span><br><span class="line">                .data(<span class="string">&quot;items&quot;</span>, pageBanner.getRecords())</span><br><span class="line">                .data(<span class="string">&quot;total&quot;</span>, pageBanner.getTotal());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;添加banner&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;addBanner&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">addBanner</span><span class="params">(<span class="meta">@RequestBody</span> Banner crmBanner)</span> &#123;</span><br><span class="line">        bannerService.save(crmBanner);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取Banner&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">get</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, bannerService.getById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改Banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;修改Banner&quot;)</span></span><br><span class="line">    <span class="meta">@PutMapping(&quot;update&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">updateById</span><span class="params">(<span class="meta">@RequestBody</span> Banner banner)</span> &#123;</span><br><span class="line">        bannerService.updateById(banner);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除Banner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;删除Banner&quot;)</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;remove/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">remove</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">        bannerService.removeById(id);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 BannerService.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * &lt;p&gt;</span><br><span class="line"> * 首页banner表 服务类</span><br><span class="line"> * &lt;/p&gt;</span><br><span class="line"> *</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @since 2021-05-15</span><br><span class="line"> */</span><br><span class="line">public interface BannerService extends IService&lt;Banner&gt; &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 查询所有banner</span><br><span class="line">     *</span><br><span class="line">     * @return banner信息</span><br><span class="line">     */</span><br><span class="line">    List&lt;Banner&gt; selectAllBanner();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 BannerServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 首页banner表 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-05-15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BannerServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;BannerMapper, Banner&gt; <span class="keyword">implements</span> <span class="title class_">BannerService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;banner&quot;, key = &quot;&#x27;selectIndexList&#x27;&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Banner&gt; <span class="title function_">selectAllBanner</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 根据id进行降序排列，显示排列之后前两条记录</span></span><br><span class="line">        QueryWrapper&lt;Banner&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// last方法，拼接sql语句</span></span><br><span class="line">        wrapper.last(<span class="string">&quot;limit 3&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> baseMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在如上的 BannerServiceImpl 当中添加了 Redis 缓存</p><h3 id="SpringBoot-中-Redis-缓存注解介绍"><a href="#SpringBoot-中-Redis-缓存注解介绍" class="headerlink" title="SpringBoot 中 Redis 缓存注解介绍"></a>SpringBoot 中 Redis 缓存注解介绍</h3><h4 id="Cacheable"><a href="#Cacheable" class="headerlink" title="@Cacheable"></a>@Cacheable</h4><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><p>根据方法对其返回结果进行缓存，下次请求时，如果缓存存在，则直接读取缓存数据返回；如果缓存不存在，则执行方法，并把返回的结果存入缓存中。</p><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><ul><li>value：缓存名，必填，它指定了你的缓存存放在哪块命名空间。</li><li>cacheNames：与 value 差不多，二选一即可。</li><li>key：可选属性，可以使用 SpEL 标签自定义缓存的 key。</li></ul><h4 id="CachePut"><a href="#CachePut" class="headerlink" title="@CachePut"></a>@CachePut</h4><h5 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h5><p>使用该注解标志的方法，每次都会执行，并将结果存入指定的缓存中。其他方法可以直接从响应的缓存中读取缓存数据，而不需要再去查询数据库。一般用在新增方法上。</p><h5 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h5><ul><li>value：缓存名，必填，它指定了你的缓存存放在哪块命名空间。</li><li>cacheNames：与 value 差不多，二选一即可。</li><li>key：可选属性，可以使用 SpEL 标签自定义缓存的 key。</li></ul><h4 id="CacheEvict"><a href="#CacheEvict" class="headerlink" title="@CacheEvict"></a>@CacheEvict</h4><h5 id="作用-2"><a href="#作用-2" class="headerlink" title="作用"></a>作用</h5><p>使用该注解标志的方法，会清空指定的缓存。一般用在更新或者删除方法上。</p><h5 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h5><ul><li>value：缓存名，必填，它指定了你的缓存存放在哪块命名空间。</li><li>cacheNames：与 value 差不多，二选一即可。</li><li>key：可选属性，可以使用 SpEL 标签自定义缓存的 key。</li><li>allEntries：是否清空所有缓存，默认为 false。如果指定为 true，则方法调用后将立即清空所有的缓存。</li><li>beforeInvocation：是否在方法执行前就清空，默认为 false。如果指定为 true，则在方法执行前就会清空缓存。</li></ul><p>示例如上的代码参考即可</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516001645385-1857554220.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516001645385-1857554220.png" alt="img"></a></p><h3 id="banner-前端数据显示"><a href="#banner-前端数据显示" class="headerlink" title="banner 前端数据显示"></a>banner 前端数据显示</h3><p>创建 api 文件夹，创建 banner.js 文件内容如下</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">getList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/service_cms/banner/getAllBanner&quot;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在首页面引入，调用实现, 引入 banner.js</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092155209-1660948041.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092155209-1660948041.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> banner <span class="keyword">from</span> <span class="string">&quot;@/api/banner&quot;</span>;</span><br></pre></td></tr></table></figure><p>在 data 当中定义 <code>bannerList: &#123;&#125;</code> 初始化时加载 banner</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092404703-1714344597.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092404703-1714344597.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">initBanner</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">initBanner</span>(<span class="params"></span>) &#123;</span><br><span class="line">    banner.<span class="title function_">getList</span>().<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">bannerList</span> = response.<span class="property">data</span>.<span class="property">list</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="页面渲染"><a href="#页面渲染" class="headerlink" title="页面渲染"></a>页面渲染</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092652239-2011322036.png"><br><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516092652239-2011322036.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;warper&quot; style=&quot;position: relative&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;warper_content&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    分类</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">        &lt;li v-for=&quot;(cate, index) in categoryList&quot; v-bind:key=&quot;index&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;coursex-item1&quot;&gt;</span><br><span class="line">            &lt;a class=&quot;shuang&quot;&gt;&#123;&#123; cate.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;swiper :options=&quot;swiperOptions&quot; class=&quot;swiper-cus&quot;&gt;</span><br><span class="line">      &lt;swiper-slide v-for=&quot;banner in bannerList&quot; :key=&quot;banner.id&quot; :style=&quot;&#123;background:banner.imageBg&#125;&quot;&gt;</span><br><span class="line">        &lt;a target=&quot;_blank&quot; :href=&quot;banner.linkUrl&quot;&gt;</span><br><span class="line">          &lt;img width=&quot;1200&quot; height=&quot;380&quot; style=&quot;min-height: 380px;&quot;</span><br><span class="line">               :src=&quot;banner.imageUrl&quot;</span><br><span class="line">               :alt=&quot;banner.title&quot;/&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/swiper-slide&gt;</span><br><span class="line">      &lt;div class=&quot;swiper-pagination swiper-pagination-white&quot; slot=&quot;pagination&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div style=&quot;left: 200px;&quot; class=&quot;swiper-button-prev swiper-button-white&quot; slot=&quot;button-prev&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div style=&quot;right: 200px&quot; class=&quot;swiper-button-next swiper-button-white&quot; slot=&quot;button-next&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/swiper&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="49-前端门户-门户首页数据显示"><a href="#49-前端门户-门户首页数据显示" class="headerlink" title="49-前端门户-门户首页数据显示"></a>49-前端门户-门户首页数据显示</h2><h3 id="修改-service-video-模块"><a href="#修改-service-video-模块" class="headerlink" title="修改 service_video 模块"></a>修改 service_video 模块</h3><p>在后台当中创建门户首页接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516093211715-1634444494.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516093211715-1634444494.png" alt="img"></a></p><h4 id="创建-IndexPortalController-java"><a href="#创建-IndexPortalController-java" class="headerlink" title="创建 IndexPortalController.java"></a>创建 IndexPortalController.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_video/index&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;门户首页组&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexPortalController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> IndexPortalService indexPortalService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取门户首页所有数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getIndexData&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok()</span><br><span class="line">                .data(<span class="string">&quot;contentList&quot;</span>, indexPortalService.getContentIndexList())</span><br><span class="line">                .data(<span class="string">&quot;authorList&quot;</span>, indexPortalService.getAuthorIndexList())</span><br><span class="line">                .data(<span class="string">&quot;categoryList&quot;</span>, indexPortalService.getCategoryIndexList());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><p>创建 IndexPortalService.jav</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IndexPortalService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取作品</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 作品列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Object <span class="title function_">getContentIndexList</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取创作者</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 创作者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Object <span class="title function_">getAuthorIndexList</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取作品分类</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 分类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Object <span class="title function_">getCategoryIndexList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现类"><a href="#实现类" class="headerlink" title="实现类"></a>实现类</h4><p>创建 IndexPortalServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexPortalServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IndexPortalService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ContentService contentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> AuthorService authorService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> CategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;index&quot;, key = &quot;&#x27;getContentIndexList&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Content&gt; <span class="title function_">getContentIndexList</span><span class="params">()</span> &#123;</span><br><span class="line">        QueryWrapper&lt;Content&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        wrapper.last(<span class="string">&quot;limit 8&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> contentService.list(wrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;index&quot;, key = &quot;&#x27;getAuthorIndexList&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Author&gt; <span class="title function_">getAuthorIndexList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 查询前4条作者</span></span><br><span class="line">        QueryWrapper&lt;Author&gt; wrapperAuthor = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapperAuthor.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        wrapperAuthor.last(<span class="string">&quot;limit 4&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> authorService.list(wrapperAuthor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;index&quot;, key = &quot;&#x27;getCategoryIndexList&#x27;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Category&gt; <span class="title function_">getCategoryIndexList</span><span class="params">()</span> &#123;</span><br><span class="line">        QueryWrapper&lt;Category&gt; wrapperCategory = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapperCategory.orderByDesc(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        wrapperCategory.eq(<span class="string">&quot;parent_id&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">        wrapperCategory.last(<span class="string">&quot;limit 8&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> categoryService.list(wrapperCategory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端-7"><a href="#前端-7" class="headerlink" title="前端"></a>前端</h3><p>在门户工程 api 当中创建 index.js 文件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114357488-916655376.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114357488-916655376.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">getList</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/index/getIndexData`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在首页面引入，调用实现</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> index <span class="keyword">from</span> <span class="string">&#x27;@/api/index&#x27;</span>;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114453684-843855904.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114453684-843855904.png" alt="img"></a></p><p>定义数据结果集</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114652148-1392501304.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114652148-1392501304.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categoryList</span>: &#123;&#125;,</span><br><span class="line"><span class="attr">authorList</span>: &#123;&#125;,</span><br><span class="line"><span class="attr">contentList</span>: &#123;&#125;,</span><br></pre></td></tr></table></figure><h4 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114751818-8177583.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516114751818-8177583.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="title function_">initIndexData</span>();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">initIndexData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  index.<span class="title function_">getList</span>().<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">authorList</span> = response.<span class="property">data</span>.<span class="property">authorList</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">contentList</span> = response.<span class="property">data</span>.<span class="property">contentList</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">categoryList</span> = response.<span class="property">data</span>.<span class="property">categoryList</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="渲染数据"><a href="#渲染数据" class="headerlink" title="渲染数据"></a>渲染数据</h4><h5 id="渲染分类"><a href="#渲染分类" class="headerlink" title="渲染分类"></a>渲染分类</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115042258-1648395848.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115042258-1648395848.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;category&quot;&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li v-for=&quot;(cate, index) in categoryList&quot; v-bind:key=&quot;index&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;coursex-item1&quot;&gt;</span><br><span class="line">        &lt;a class=&quot;shuang&quot;&gt;&#123;&#123; cate.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="渲染视频"><a href="#渲染视频" class="headerlink" title="渲染视频"></a>渲染视频</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115154298-2011849339.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115154298-2011849339.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;videoList&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">        &lt;h2 class=&quot;tac&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;c-333&quot; style=&quot;float:left; border-left: 3px solid red; padding-left: 10px;&quot;&gt;热门视频&lt;/span&gt;</span><br><span class="line">          &lt;span class=&quot;c-333&quot; style=&quot;float:right; font-size: 18px; &quot;&gt;&lt;a href=&quot;#&quot;&gt;更多&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/h2&gt;</span><br><span class="line">      &lt;/header&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;article class=&quot;comm-video-list&quot;&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(content,index) in contentList&quot; class=&quot;fl&quot; v-bind:key=&quot;index&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                &lt;section class=&quot;video-img&quot;&gt;</span><br><span class="line">                  &lt;img style=&quot;width: 100%;height: 100%&quot;</span><br><span class="line">                       :src=&quot;content.cover&quot;</span><br><span class="line">                       class=&quot;img-responsive&quot;</span><br><span class="line">                  &gt;</span><br><span class="line">                  &lt;div class=&quot;cc-mask&quot;&gt;</span><br><span class="line">                    &lt;a :href=&quot;&#x27;/video/&#x27;+content.id&quot; class=&quot;comm-btn c-btn-1&quot;&gt;播放&lt;/a&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">                &lt;h3 class=&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;#&quot; class=&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123; content.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/h3&gt;</span><br><span class="line">                &lt;section class=&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                  &lt;span class=&quot;fr jgTag bg-orangered&quot; v-if=&quot;Number(content.price) === 0&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;/i&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                  &lt;span class=&quot;fr jgTag bg-orangered&quot; v-else&gt;</span><br><span class="line">                      &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt; ￥&#123;&#123; content.price &#125;&#125;&lt;/i&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                  &lt;span class=&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                    &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.buyCount &#125;&#125; 人学习&lt;/i&gt;|</span><br><span class="line">                    &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.viewCount &#125;&#125; 人浏览&lt;/i&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/article&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="渲染作者"><a href="#渲染作者" class="headerlink" title="渲染作者"></a>渲染作者</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115250887-303572701.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210516115250887-303572701.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;tac&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;c-333&quot; style=&quot;float:left; border-left: 3px solid red; padding-left: 10px;&quot;&gt;优秀创作者&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;c-333&quot; style=&quot;float:right; font-size: 18px; &quot;&gt;&lt;a href=&quot;#&quot;&gt;更多&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">      &lt;/h2&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;article class=&quot;i-author-list&quot;&gt;</span><br><span class="line">        &lt;div v-for=&quot;(author,index) in authorList&quot; v-bind:key=&quot;index&quot; class=&quot;yd-open-course-card open-course-card&quot;&gt;</span><br><span class="line">          &lt;a :href=&#x27;&quot;/author/&quot;+author.id&#x27; :title=&quot;index.name&quot; style=&quot;color: #7F828B;text-decoration:none;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;yd-open-course-card_avatar&quot;&gt;</span><br><span class="line">              &lt;img :alt=&quot;author.name&quot; :src=&quot;author.avatar&quot;/&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;yd-open-course-card_content_teacher&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;yd-open-course-card_content_teacher_tag&quot;&gt;&#123;&#123; author.name &#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div&gt;&#123;&#123; author.intro &#125;&#125;&lt;/div&gt;</span><br><span class="line">            &lt;span&gt;-------------------------&lt;/span&gt;</span><br><span class="line">            &lt;div&gt;&#123;&#123; author.career &#125;&#125;&lt;/div&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/article&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="50-门户登录-用户前端登录注册"><a href="#50-门户登录-用户前端登录注册" class="headerlink" title="50-门户登录-用户前端登录注册"></a>50-门户登录-用户前端登录注册</h2><p>登录与注册按钮点击跳转到指定的页面处，如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210520221524363-748223496.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210520221524363-748223496.png" alt="img"></a></p><p>在 Layout 当中添加新布局 <code>loginLayout.vue</code> 如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210520231239311-369371634.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210520231239311-369371634.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login&quot;&gt;</span><br><span class="line">    &lt;!--头部布局--&gt;</span><br><span class="line">    &lt;header id=&quot;header&quot;&gt;</span><br><span class="line">      &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;h1 id=&quot;logo&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;#&quot; title=&quot;BNTang&quot;&gt;</span><br><span class="line">            &lt;img src=&quot;~/assets/img/logo.png&quot; height=&quot;100px&quot; alt=&quot;BNTang&quot;&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;div class=&quot;h-r-nsl&quot;&gt;</span><br><span class="line">          &lt;!--导航--&gt;</span><br><span class="line">          &lt;ul class=&quot;nav&quot;&gt;</span><br><span class="line">            &lt;router-link to=&quot;/&quot; tag=&quot;li&quot; active-class=&quot;current&quot; exact&gt;</span><br><span class="line">              &lt;a&gt;首页&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/video&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;全部视频&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/author&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;创作者&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/article&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;资讯信息&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">            &lt;router-link to=&quot;/qa&quot; tag=&quot;li&quot; active-class=&quot;current&quot;&gt;</span><br><span class="line">              &lt;a&gt;学习交流&lt;/a&gt;</span><br><span class="line">            &lt;/router-link&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">          &lt;!--搜索--&gt;</span><br><span class="line">          &lt;aside class=&quot;h-r-search&quot;&gt;</span><br><span class="line">            &lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class="line">              &lt;label class=&quot;h-r-s-box&quot;&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; placeholder=&quot;搜索...&quot; name=&quot;queryCourse.courseName&quot; value&gt;</span><br><span class="line">                &lt;button type=&quot;submit&quot; class=&quot;s-btn&quot;&gt;</span><br><span class="line">                  &lt;em class=&quot;icon18&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">                &lt;/button&gt;</span><br><span class="line">              &lt;/label&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">          &lt;/aside&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;aside class=&quot;mw-nav-btn&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;mw-nav-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/aside&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;!--页面信息--&gt;</span><br><span class="line">    &lt;nuxt/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;loginLayout&quot;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#logo a img&#123;</span><br><span class="line">  width: 110px !important;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>在 pages 文件夹下，创建登录与注册页面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522085141573-616418148.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522085141573-616418148.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;main&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;login-up-container&quot;&gt;</span><br><span class="line">      &lt;el-tabs v-model=&quot;activeName&quot;  @tab-click=&quot;handleClick&quot;&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;用户登录&quot; name=&quot;first&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;立即注册&quot; name=&quot;second&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;div class=&quot;login-up-container&quot;&gt;</span><br><span class="line">          &lt;el-form ref=&quot;userForm&quot; :model=&quot;params&quot;&gt;</span><br><span class="line">            &lt;!--用户昵称--&gt;</span><br><span class="line">            &lt;el-form-item class=&quot;input-prepend restyle&quot; prop=&quot;nickname&quot;</span><br><span class="line">                          v-if=&quot;!isLogin&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-input type=&quot;text&quot; placeholder=&quot;用户昵称&quot; v-model=&quot;params.nickname&quot;/&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-user&quot;/&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;!--用户手机号--&gt;</span><br><span class="line">            &lt;el-form-item class=&quot;input-prepend restyle no-radius&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-input type=&quot;text&quot; placeholder=&quot;手机号&quot; v-model=&quot;params.phone&quot; /&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-phone&quot;/&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;!--用户密码--&gt;</span><br><span class="line">            &lt;el-form-item class=&quot;input-prepend restyle no-radius&quot; prop=&quot;password&quot;</span><br><span class="line">                          v-if=&quot;isLogin&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-input type=&quot;text&quot; placeholder=&quot;用户密码&quot;</span><br><span class="line">                          v-model=&quot;params.password&quot; /&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-password&quot;/&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--验证码--&gt;</span><br><span class="line">            &lt;el-form-item class=&quot;input-prepend restyle no-radius&quot; prop=&quot;code&quot;</span><br><span class="line">                          v-if=&quot;!isLogin&quot;&gt;</span><br><span class="line">              &lt;div style=&quot;width: 100%;display: block;float: left;position: relative&quot;&gt;</span><br><span class="line">                &lt;el-input type=&quot;text&quot; placeholder=&quot;验证码&quot;</span><br><span class="line">                          v-model=&quot;params.code&quot;/&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-phone&quot;/&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;btn&quot; style=&quot;position:absolute;right: -10px;top: 6px;width: 40%;&quot;&gt;</span><br><span class="line">                &lt;a href=&quot;javascript:&quot; type=&quot;button&quot;</span><br><span class="line">                   @click=&quot;getCodeFun()&quot;</span><br><span class="line">                   :value=&quot;codeValue&quot; style=&quot;color: orangered&quot;&gt;</span><br><span class="line">                  &#123;&#123;codeValue&#125;&#125;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line">            &lt;!--设置密码--&gt;</span><br><span class="line">            &lt;el-form-item class=&quot;input-prepend&quot; prop=&quot;password&quot; v-if=&quot;!isLogin&quot;&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-input type=&quot;password&quot; placeholder=&quot;设置密码&quot; v-model=&quot;params.password&quot;/&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-password&quot;/&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">              &lt;input type=&quot;button&quot; v-model=&quot;btn_value&quot; class=&quot;login-up-button&quot; @click=&quot;btnClick()&quot;&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;p class=&quot;login-up-msg&quot; v-if=&quot;!isLogin&quot;&gt;</span><br><span class="line">              点击 “注册” 即表示您同意并愿意遵守简书</span><br><span class="line">              &lt;br&gt;</span><br><span class="line">              &lt;a target=&quot;_blank&quot; href=&quot;http://www.jianshu.com/p/c44d171298ce&quot;&gt;用户协议&lt;/a&gt;</span><br><span class="line">              和</span><br><span class="line">              &lt;a target=&quot;_blank&quot; href=&quot;http://www.jianshu.com/p/2ov8x3&quot;&gt;隐私政策&lt;/a&gt; 。</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">          &lt;/el-form&gt;</span><br><span class="line">          &lt;!-- 更多注册方式 --&gt;</span><br><span class="line">          &lt;div class=&quot;more-sign&quot;&gt;</span><br><span class="line">            &lt;h6&gt;社交帐号直接注册&lt;/h6&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a id=&quot;weixin&quot; class=&quot;weixin&quot; target=&quot;_blank&quot;</span><br><span class="line">                   href=&quot;http://huaan.free.idcfengye.com/api/ucenter/wx/login&quot;&gt;</span><br><span class="line">                  &lt;i class=&quot;iconfont icon-weixin&quot;/&gt;&lt;/a&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li&gt;</span><br><span class="line">                &lt;a id=&quot;qq&quot; class=&quot;qq&quot; target=&quot;_blank&quot; href=&quot;#&quot;&gt;&lt;i class=&quot;iconfont icon-qq&quot;/&gt;&lt;/a&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-tabs&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#x27;assets/css/login.css&#x27;</span><br><span class="line">import &#x27;~/assets/css/iconfont.css&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  layout: &#x27;loginLayout&#x27;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // 记录当前是否为登录状态</span><br><span class="line">      isLogin:true,</span><br><span class="line">      // 记录当前选择的tabs</span><br><span class="line">      activeName: &#x27;first&#x27;,</span><br><span class="line">      // 封装注册输入数据</span><br><span class="line">      params: &#123;</span><br><span class="line">        phone: &#x27;&#x27;,</span><br><span class="line">        // 验证码</span><br><span class="line">        code: &#x27;&#x27;,</span><br><span class="line">        // 用户昵称</span><br><span class="line">        nickname: &#x27;&#x27;,</span><br><span class="line">        password: &#x27;&#x27;</span><br><span class="line">      &#125;,</span><br><span class="line">      // 是否发送验证码</span><br><span class="line">      isSend: true,</span><br><span class="line">      // 倒计时间</span><br><span class="line">      second: 60,        </span><br><span class="line">      codeValue: &#x27;获取验证码&#x27;,</span><br><span class="line">      btn_value:&#x27;登录&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleClick(tab, event) &#123;</span><br><span class="line">      if (tab.index == 0)&#123;</span><br><span class="line">        this.isLogin = true;</span><br><span class="line">        this.btn_value = &quot;登录&quot;;</span><br><span class="line">      &#125;else &#123;</span><br><span class="line">        this.isLogin = false;</span><br><span class="line">        this.btn_value = &quot;注册&quot;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    checkPhone (rule, value, callback) &#123;</span><br><span class="line">      if (!(/^1[34578]\d&#123;9&#125;$/.test(value))) &#123;</span><br><span class="line">        return callback(new Error(&#x27;手机号码格式不正确&#x27;));</span><br><span class="line">      &#125;</span><br><span class="line">      return callback();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>在 api 当中创建 <code>login.js</code> 与 <code>regist.js</code></p><h3 id="login-js"><a href="#login-js" class="headerlink" title="login.js"></a>login.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 登录</span></span><br><span class="line">  <span class="title function_">login</span>(<span class="params">userInfo</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_user/user/login`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: userInfo</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据token获取用户信息</span></span><br><span class="line">  <span class="title function_">getLoginInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_user/user/auth/getLoginInfo`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 验证是否已经登录</span></span><br><span class="line">  <span class="title function_">checkLogin</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_user/user/wx/checkLogin`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="register-js"><a href="#register-js" class="headerlink" title="register.js"></a>register.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 根据手机号发验证码</span></span><br><span class="line">  <span class="title function_">sendCode</span>(<span class="params">phone</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_sms/api/sms/send/<span class="subst">$&#123;phone&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 注册的方法</span></span><br><span class="line">  <span class="title function_">register</span>(<span class="params">formItem</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_user/user/register`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: formItem</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 login.vue 页面当中引入 api 中创建的如上的两个 js 文件</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522085638330-1514720477.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522085638330-1514720477.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> registerApi <span class="keyword">from</span> <span class="string">&quot;@/api/register&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> loginApi <span class="keyword">from</span> <span class="string">&quot;@/api/login&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="获取验证码"><a href="#获取验证码" class="headerlink" title="获取验证码"></a>获取验证码</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522090233941-626821839.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522090233941-626821839.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522092314171-1184001901.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522092314171-1184001901.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取验证码</span></span><br><span class="line"><span class="title function_">timeDown</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> result = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    --<span class="variable language_">this</span>.<span class="property">second</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">codeValue</span> = <span class="variable language_">this</span>.<span class="property">second</span>+<span class="string">&quot;秒后重发&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">second</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="built_in">clearInterval</span>(result);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isSend</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">second</span> = <span class="number">60</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">codeValue</span> = <span class="string">&quot;获取验证码&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 通过输入的手机号发送验证码</span></span><br><span class="line"><span class="title function_">getCodeFun</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isSend</span>)&#123;</span><br><span class="line">    registerApi.<span class="title function_">sendCode</span>(<span class="variable language_">this</span>.<span class="property">params</span>.<span class="property">phone</span>)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 调用倒计时的方法</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">timeDown</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isSend</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 提示注册成功</span></span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;短信发送成功&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册功能"><a href="#注册功能" class="headerlink" title="注册功能"></a>注册功能</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522093938670-1909220464.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522093938670-1909220464.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094100075-1068321921.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094100075-1068321921.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">btnClick</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 登录</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isLogin</span>)&#123;</span><br><span class="line"></span><br><span class="line">  &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 注册</span></span><br><span class="line">    registerApi.<span class="title function_">register</span>(<span class="variable language_">this</span>.<span class="property">params</span>).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 提示注册成功</span></span><br><span class="line">        <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">&quot;注册成功&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳转登录页面</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">activeName</span> = <span class="string">&quot;first&quot;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isLogin</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">btn_value</span> = <span class="string">&quot;登录&quot;</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h3><h4 id="安装-js-cookie-插件"><a href="#安装-js-cookie-插件" class="headerlink" title="安装 js-cookie 插件"></a>安装 js-cookie 插件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install js-cookie</span><br></pre></td></tr></table></figure><p>引入 js-cookie</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094416646-1639153066.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094416646-1639153066.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span>;</span><br></pre></td></tr></table></figure><p>登录逻辑</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094555784-1920242010.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522094555784-1920242010.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">loginApi.<span class="title function_">login</span>(<span class="variable language_">this</span>.<span class="property">params</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(res.<span class="property">success</span>)&#123;</span><br><span class="line">    <span class="comment">// 把token存在cookie中</span></span><br><span class="line">    cookie.<span class="title function_">set</span>(<span class="string">&#x27;login_token&#x27;</span>, res.<span class="property">data</span>.<span class="property">token</span>, &#123; <span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span> &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 登录成功根据token获取用户信息</span></span><br><span class="line">    loginApi.<span class="title function_">getLoginInfo</span>().<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 将用户信息记录cookie</span></span><br><span class="line">      cookie.<span class="title function_">set</span>(<span class="string">&#x27;portal_user&#x27;</span>, response.<span class="property">data</span>.<span class="property">userInfo</span>, &#123; <span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span> &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 跳转页面</span></span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="首页中用户信息显示"><a href="#首页中用户信息显示" class="headerlink" title="首页中用户信息显示"></a>首页中用户信息显示</h3><p>定义属性信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213131867-6780759.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213131867-6780759.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">loginInfo</span>: &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">avatar</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">nickname</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 created 方法当中加载用户信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213450993-944335052.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213450993-944335052.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">showInfo</span>();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">showInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> jsonStr = cookie.<span class="title function_">get</span>(<span class="string">&quot;portal_user&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (jsonStr) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loginInfo</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">logout</span>(<span class="params"></span>) &#123;</span><br><span class="line">    cookie.<span class="title function_">set</span>(<span class="string">&#x27;portal_user&#x27;</span>, <span class="string">&quot;&quot;</span>, &#123;<span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span>&#125;);</span><br><span class="line">    cookie.<span class="title function_">set</span>(<span class="string">&#x27;login_token&#x27;</span>, <span class="string">&quot;&quot;</span>, &#123;<span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span>&#125;);</span><br><span class="line">    <span class="comment">// 跳转页面</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;/&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在首页当中显示登录成功之后的用户信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213632174-737565404.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523213632174-737565404.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;h-r-login&quot;&gt;</span><br><span class="line">  &lt;li v-if=&quot;!loginInfo.id&quot; id=&quot;no-login&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;/login&quot;&gt;</span><br><span class="line">      &lt;em class=&quot;icon18 login-icon&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">      &lt;span class=&quot;vam ml5&quot;&gt;登录&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    |</span><br><span class="line">    &lt;a href=&quot;/register&quot;&gt;</span><br><span class="line">      &lt;span class=&quot;vam ml5&quot;&gt;注册&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">  &lt;!--退出--&gt;</span><br><span class="line">  &lt;li v-if=&quot;loginInfo.id&quot; id=&quot;is-login-two&quot; class=&quot;h-r-user&quot;&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; title&gt;</span><br><span class="line">      &lt;img</span><br><span class="line">        :src=&quot;loginInfo.avatar&quot;</span><br><span class="line">        width=&quot;30&quot;</span><br><span class="line">        height=&quot;30&quot;</span><br><span class="line">        class=&quot;vam picImg&quot;</span><br><span class="line">        alt</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;span id=&quot;userName&quot; class=&quot;vam disIb&quot;&gt;&#123;&#123; loginInfo.nickname &#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;javascript:void(0);&quot; title=&quot;退出&quot; @click=&quot;logout()&quot; class=&quot;ml5&quot;&gt;退出&lt;/a&gt;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p>在 default.vue 当中引入 js-cookie</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import cookie from <span class="string">&#x27;js-cookie&#x27;</span>;</span><br></pre></td></tr></table></figure><p>修改 utils&#x2F;request.js axios 的封装方法修改内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524133116848-1661723140.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524133116848-1661723140.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524133136932-1012707088.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524133136932-1012707088.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">MessageBox</span>, <span class="title class_">Message</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> cookie <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://localhost:9000&#x27;</span>,</span><br><span class="line">  <span class="comment">// request timeout</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">50000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">code</span> !== <span class="number">20000</span>) &#123;</span><br><span class="line">      <span class="title class_">Message</span>(&#123;</span><br><span class="line">        <span class="attr">message</span>: res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">code</span> === <span class="number">50008</span> || res.<span class="property">code</span> === <span class="number">50012</span> || res.<span class="property">code</span> === <span class="number">50014</span>) &#123;</span><br><span class="line">        <span class="comment">// to re-login</span></span><br><span class="line">        <span class="title class_">MessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;You have been logged out, you can cancel to stay on this page, or log in again&#x27;</span>, <span class="string">&#x27;Confirm logout&#x27;</span>, &#123;</span><br><span class="line">          <span class="attr">confirmButtonText</span>: <span class="string">&#x27;Re-Login&#x27;</span>,</span><br><span class="line">          <span class="attr">cancelButtonText</span>: <span class="string">&#x27;Cancel&#x27;</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">        &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          store.<span class="title function_">dispatch</span>(<span class="string">&#x27;user/resetToken&#x27;</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            location.<span class="title function_">reload</span>()</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">message</span> || <span class="string">&#x27;Error&#x27;</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>(&#123;</span><br><span class="line">      <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (cookie.<span class="title function_">get</span>(<span class="string">&#x27;login_token&#x27;</span>)) &#123;</span><br><span class="line">      config.<span class="property">headers</span>[<span class="string">&#x27;token&#x27;</span>] = cookie.<span class="title function_">get</span>(<span class="string">&#x27;login_token&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err);</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><h2 id="51-门户登录-短信微服务"><a href="#51-门户登录-短信微服务" class="headerlink" title="51-门户登录-短信微服务"></a>51-门户登录-短信微服务</h2><h3 id="创建短信微服务工程"><a href="#创建短信微服务工程" class="headerlink" title="创建短信微服务工程"></a>创建短信微服务工程</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522111945091-1775632471.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522111945091-1775632471.png" alt="img"></a></p><h3 id="添加配置文件-1"><a href="#添加配置文件-1" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>application.yml</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8006</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-sms</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="comment"># password: 1234</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="创建启动类"><a href="#创建启动类" class="headerlink" title="创建启动类"></a>创建启动类</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112350420-877119426.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112350420-877119426.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@SpringBootApplication</span>(exclude = DataSourceAutoConfiguration.class) 取消数据源自动配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;top.it6666&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SmsApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发送短信"><a href="#发送短信" class="headerlink" title="发送短信"></a>发送短信</h3><p>签名</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112439574-1678615459.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112439574-1678615459.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112503799-2120112744.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112503799-2120112744.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112522275-602991188.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112522275-602991188.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112604011-1101454507.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112604011-1101454507.png" alt="img"></a></p><p>进入查看 API 的页面之后就有对应语言发送代码的 Demo 了如下</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">DefaultProfile</span> <span class="variable">profile</span> <span class="operator">=</span> DefaultProfile.getProfile(<span class="string">&quot;cn-hangzhou&quot;</span>, <span class="string">&quot;LTAIqImmxZn7yCpS&quot;</span>, <span class="string">&quot;pJ4OOiDnHYdZZZOkxlPN8HyXiaatZe&quot;</span>);</span><br><span class="line">    <span class="type">IAcsClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAcsClient</span>(profile);</span><br><span class="line"></span><br><span class="line">    <span class="type">CommonRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonRequest</span>();</span><br><span class="line">    request.setMethod(MethodType.POST);</span><br><span class="line">    request.setDomain(<span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>);</span><br><span class="line">    request.setVersion(<span class="string">&quot;2017-05-25&quot;</span>);</span><br><span class="line">    request.setAction(<span class="string">&quot;SendSms&quot;</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">&quot;RegionId&quot;</span>, <span class="string">&quot;cn-hangzhou&quot;</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">&quot;PhoneNumbers&quot;</span>, <span class="string">&quot;1599767931&quot;</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">&quot;SignName&quot;</span>, <span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">&quot;TemplateCode&quot;</span>, <span class="string">&quot;SMS_169111508&quot;</span>);</span><br><span class="line">    request.putQueryParameter(<span class="string">&quot;TemplateParam&quot;</span>, <span class="string">&quot;&#123;code:910612&#125;&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="type">CommonResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.getCommonResponse(request);</span><br><span class="line">        System.out.println(response.getData());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ServerException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加依赖-2"><a href="#添加依赖-2" class="headerlink" title="添加依赖"></a>添加依赖</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112928658-986950734.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522112928658-986950734.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建-SmsController"><a href="#创建-SmsController" class="headerlink" title="创建 SmsController"></a>创建 SmsController</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_sms/api/sms&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> SmsService smsService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送完短信后, 把生成的验证码写到redis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/send/&#123;phone&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">code</span><span class="params">(<span class="meta">@PathVariable</span> String phone)</span> &#123;</span><br><span class="line">        <span class="comment">// 查看redis当中是否有当前手机对应的验证码   手机号当作key</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> redisTemplate.opsForValue().get(phone);</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(code)) &#123;</span><br><span class="line">            <span class="comment">// 已经发送过了 还没有过期</span></span><br><span class="line">            <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成新的验证码</span></span><br><span class="line">        code = randomCode();</span><br><span class="line">        Map&lt;String,Object&gt; param = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 把验证码写到参数当中去</span></span><br><span class="line">        param.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">        <span class="comment">// 发送短信</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isSend</span> <span class="operator">=</span> smsService.send(phone, <span class="string">&quot;SMS_169111508&quot;</span>, param);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送成功</span></span><br><span class="line">        <span class="keyword">if</span>(isSend) &#123;</span><br><span class="line">            <span class="comment">// 把验证码写到Redis当中</span></span><br><span class="line">            redisTemplate.opsForValue().set(phone, code,<span class="number">5</span>, TimeUnit.MINUTES);</span><br><span class="line">            <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 提示用户失败</span></span><br><span class="line">        <span class="keyword">return</span> ResponseResult.error().message(<span class="string">&quot;发送短信失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成4位的数字验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">randomCode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            sb.append(<span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">10</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建短信发送业务类，SmsService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SmsService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送短信</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone 手机号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sms sms模板</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param 参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 发送结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">send</span><span class="params">(String phone, String sms, Map&lt;String, Object&gt; param)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SmsServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">SmsService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">send</span><span class="params">(String phoneNumbers, String templateCode, Map&lt;String, Object&gt; param)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(phoneNumbers)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">DefaultProfile</span> <span class="variable">profile</span> <span class="operator">=</span></span><br><span class="line">                DefaultProfile.getProfile(</span><br><span class="line">                        <span class="string">&quot;cn-hangzhou&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;LTAI4GH19ep2P8caxW2E2N6A&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;NAmWiBmKXofw7hs4JRcx7SLhF1MN6P&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">IAcsClient</span> <span class="variable">client</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DefaultAcsClient</span>(profile);</span><br><span class="line">        <span class="type">CommonRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CommonRequest</span>();</span><br><span class="line">        request.setMethod(MethodType.POST);</span><br><span class="line">        request.setDomain(<span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>);</span><br><span class="line">        request.setVersion(<span class="string">&quot;2017-05-25&quot;</span>);</span><br><span class="line">        request.setAction(<span class="string">&quot;SendSms&quot;</span>);</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;PhoneNumbers&quot;</span>, phoneNumbers);</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;SignName&quot;</span>, <span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">            request.putQueryParameter(<span class="string">&quot;TemplateCode&quot;</span>, templateCode);</span><br><span class="line">        request.putQueryParameter(<span class="string">&quot;TemplateParam&quot;</span>, JSONObject.toJSONString(param));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client.getCommonResponse(request);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="52-门户登录-用户微服务"><a href="#52-门户登录-用户微服务" class="headerlink" title="52-门户登录-用户微服务"></a>52-门户登录-用户微服务</h2><h3 id="创建用户微服务"><a href="#创建用户微服务" class="headerlink" title="创建用户微服务"></a>创建用户微服务</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522201922734-466592243.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522201922734-466592243.png" alt="img"></a></p><h3 id="创建用户表"><a href="#创建用户表" class="headerlink" title="创建用户表"></a>创建用户表</h3><p>sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `portal_user` (</span><br><span class="line">`id` <span class="type">CHAR</span> ( <span class="number">19</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">`openid` <span class="type">VARCHAR</span> ( <span class="number">128</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;微信openid&#x27;</span>,</span><br><span class="line">`mobile` <span class="type">VARCHAR</span> ( <span class="number">11</span> ) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">`password` <span class="type">VARCHAR</span> ( <span class="number">255</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`nickname` <span class="type">VARCHAR</span> ( <span class="number">50</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">`sex` TINYINT ( <span class="number">2</span> ) UNSIGNED <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别 1 女，2 男&#x27;</span>,</span><br><span class="line">`age` TINYINT ( <span class="number">3</span> ) UNSIGNED <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">`avatar` <span class="type">VARCHAR</span> ( <span class="number">255</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户头像&#x27;</span>,</span><br><span class="line">`sign` <span class="type">VARCHAR</span> ( <span class="number">100</span> ) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户签名&#x27;</span>,</span><br><span class="line">`is_disabled` TINYINT ( <span class="number">1</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;是否禁用 1（true）已禁用，  0（false）未禁用&#x27;</span>,</span><br><span class="line">`is_deleted` TINYINT ( <span class="number">1</span> ) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY ( `id` ) </span><br><span class="line">) ENGINE <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> utf8mb4 COMMENT <span class="operator">=</span> <span class="string">&#x27;用户表&#x27;</span>;</span><br></pre></td></tr></table></figure><p>使用代码生成器生成代码</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="comment">// 配置输出路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_user\\src\\main\\java&quot;</span>);</span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * mp生成service层代码，默认接口名称第一个字母有 I</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_user&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;portal_user&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略 驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;portal_&quot;</span>);</span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522202520942-417318644.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522202520942-417318644.png" alt="img"></a></p><h3 id="添加配置文件-2"><a href="#添加配置文件-2" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>application.yml</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application-dev.yml</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8007</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-user</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">HikariPool</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">1800000</span></span><br><span class="line">    <span class="comment"># password: 1234</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">1</span></span><br><span class="line">        <span class="comment"># 最大阻塞等待时间</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">top/it6666/service_user/mapper/xml/*.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="添加启动类-1"><a href="#添加启动类-1" class="headerlink" title="添加启动类"></a>添加启动类</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522202958638-863555390.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522202958638-863555390.png" alt="img"></a></p><p>UserApplication.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ComponentScan(&#123;&quot;top.it6666&quot;&#125;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;top.it6666.service_user.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 LoginVo 和 RegisterVo 用于数据封装</p><p>LoginVo.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginVo</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 手机号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RegisterVo.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegisterVo</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 昵称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 手机号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522203309829-1163948693.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210522203309829-1163948693.png" alt="img"></a></p><p>创建用户业务类</p><p>UserService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 用户表 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-05-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginVo</span></span><br><span class="line"><span class="comment">     *            登录信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">login</span><span class="params">(LoginVo loginVo)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registerVo</span></span><br><span class="line"><span class="comment">     *            注册信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(RegisterVo registerVo)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 用户表 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-05-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(LoginVo loginVo)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> loginVo.getPhone();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> loginVo.getPassword();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验参数</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(phone) || StringUtils.isEmpty(password)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;缺少参数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取用户</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> baseMapper.selectOne(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().eq(<span class="string">&quot;mobile&quot;</span>, phone));</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == user) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;用户不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验密码</span></span><br><span class="line">        <span class="keyword">if</span> (!Md5.encrypt(password).equals(user.getPassword())) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验是否被禁用</span></span><br><span class="line">        <span class="keyword">if</span> (user.getIsDisabled()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;用户被禁用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用JWT生成token字符串</span></span><br><span class="line">        <span class="keyword">return</span> JwtUtils.getJwtToken(user.getId(), user.getNickname());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(RegisterVo registerVo)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取注册信息，进行校验</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">nickname</span> <span class="operator">=</span> registerVo.getNickname();</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> registerVo.getPhone();</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> registerVo.getPassword();</span><br><span class="line">        <span class="type">String</span> <span class="variable">code</span> <span class="operator">=</span> registerVo.getCode();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 校验参数</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(phone) || StringUtils.isEmpty(nickname) || StringUtils.isEmpty(password)</span><br><span class="line">            || StringUtils.isEmpty(code)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;缺少参数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 校验校验验证码</span></span><br><span class="line">        <span class="comment">// 从redis获取发送的验证码</span></span><br><span class="line">        <span class="keyword">if</span> (!code.equals(redisTemplate.opsForValue().get(phone))) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;验证码错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 查询数据库中是否存在相同的手机号码</span></span><br><span class="line">        <span class="keyword">if</span> (baseMapper.selectCount(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;User&gt;().eq(<span class="string">&quot;mobile&quot;</span>, phone)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;手机号已被使用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加注册信息到数据库</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">member</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        member.setNickname(nickname);</span><br><span class="line">        member.setMobile(registerVo.getPhone());</span><br><span class="line">        member.setPassword(Md5.encrypt(password));</span><br><span class="line">        member.setIsDisabled(<span class="literal">false</span>);</span><br><span class="line">        member.setAvatar(<span class="string">&quot;https://xiaohuihuit.github.io/images/avatar.jpg&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.save(member);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建用户请求 api 控制器</p><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 用户表 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-05-22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_user/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;用户登录&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> LoginVo loginVo)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> userService.login(loginVo);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;token&quot;</span>, token);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户注册</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;用户注册&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">register</span><span class="params">(<span class="meta">@RequestBody</span> RegisterVo registerVo)</span> &#123;</span><br><span class="line">        userService.register(registerVo);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户登陆成功之后的用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;获取用户登陆成功之后的用户信息&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;auth/getLoginInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">getLoginInfo</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 查询数据库根据用户id获取用户信息</span></span><br><span class="line">            <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;userInfo&quot;</span>, userService.getById(JwtUtils.getUserIdByJwtToken(request)));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;获取失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="53-门户登录-微信登录"><a href="#53-门户登录-微信登录" class="headerlink" title="53-门户登录-微信登录"></a>53-门户登录-微信登录</h2><h3 id="OAuth2-开放授权"><a href="#OAuth2-开放授权" class="headerlink" title="OAuth2 开放授权"></a>OAuth2 开放授权</h3><h4 id="什么是-OAuth2"><a href="#什么是-OAuth2" class="headerlink" title="什么是 OAuth2"></a>什么是 OAuth2</h4><p>是开放授权的一个标准，旨在让用户允许第三方应用去访问该用户在某服务器中的特定私有的资源，而可以不提供其在某服务器的账号密码给到第三方应用。</p><h4 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h4><h5 id="名词说明"><a href="#名词说明" class="headerlink" title="名词说明"></a>名词说明</h5><ul><li>Third-party application：第三方应用程序, 又称 “客户端”（client）比如打开视频网站，使用第三方登录，选择微信登录，这时候视频网站就是客户端。</li><li>HTTP service：HTTP 服务提供商，简称 “服务提供商” 即微信。</li><li>Resource Owner：资源所有者，登录用户。</li><li>User Agent：用户代理，指浏览器, 手机。</li><li>Authorization server：认证服务器, 即服务提供商专门用来处理认证的服务器。</li><li>Resource server：资源服务器，即服务提供商存放用户生成的资源的服务器。它与认证服务器，可以是同一台服务器，也可以是不同的服务器。</li></ul><h5 id="运行流程图"><a href="#运行流程图" class="headerlink" title="运行流程图"></a>运行流程图</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523221041544-1533943113.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523221041544-1533943113.png" alt="img"></a></p><h4 id="交互过程"><a href="#交互过程" class="headerlink" title="交互过程"></a>交互过程</h4><ul><li>OAuth 在 “客户端” 与 “服务提供商” 之间，设置了一个授权层（authorization layer）</li><li>“客户端” 不能直接登录 “服务提供商”，只能登录授权层，以此将用户与客户端区分开来。</li><li>“客户端” 登录授权层所用的令牌（token）与用户的密码不同。用户可以在登录的时候，指定授权层令牌的权限范围和有效期。</li><li>“客户端” 登录授权层以后，“服务提供商” 根据令牌的权限范围和有效期，向 “客户端” 开放用户储存的资料。</li></ul><h4 id="交互流程图"><a href="#交互流程图" class="headerlink" title="交互流程图"></a>交互流程图</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523222107714-285249540.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210523222107714-285249540.png" alt="img"></a></p><h4 id="令牌的访问与刷新"><a href="#令牌的访问与刷新" class="headerlink" title="令牌的访问与刷新"></a>令牌的访问与刷新</h4><h5 id="Access-Token"><a href="#Access-Token" class="headerlink" title="Access Token"></a>Access Token</h5><ul><li>Access Token 是客户端访问资源服务器的令牌。拥有这个令牌代表着得到用户的授权。</li><li>这个授权应该是临时的，有一定的有效期。这是因为，Access Token 在使用的过程中可能会泄露。</li><li>给 Access Token 限定一个较短的有效期可以降低因 Access Token 泄露而带来的风险。</li><li>每当 Access Token 过期，客户端就必须重新向用户索要授权。这样用户可能每隔几天，甚至每天都需要进行授权操作。这是一件非常影响用户体验的事情。</li></ul><h5 id="Refresh-Token"><a href="#Refresh-Token" class="headerlink" title="Refresh Token"></a>Refresh Token</h5><ul><li>Refresh Token 的作用是用来刷新 Access Token。认证服务器提供一个刷新接口，例如如下链接所示。</li></ul><p><a href="http://www.vx.com/refresh?refresh_token=&client_id=">http://www.VX.com/refresh?refresh_token&#x3D;&amp;client_id&#x3D;</a></p><ul><li>传入 refresh_token 和 client_id，认证服务器验证通过后，返回一个新的 Access Token。</li></ul><p>为了安全，OAuth2.0 引入了两个措施</p><ul><li>OAuth2.0 要求，Refresh Token 一定是保存在客户端的服务器上，而绝不能存放在狭义的客户端（例如 App、PC 端软件）上。调用 refresh 接口的时候，一定是从服务器到服务器的访问。</li></ul><p>OAuth2.0 引入了 client_secret 机制</p><ul><li>即每一个 client_id 都对应一个 client_secret。</li><li>这个 client_secret 会在客户端申请 client_id 时，随 client_id 一起分配给客户端。</li><li>客户端必须把 client_secret 妥善保管在服务器上，决不能泄露。</li><li>刷新 Access Token 时，需要验证这个 client_secret。</li></ul><p><a href="http://www.baidu.com/refresh?refresh_token=&amp;client_id=&amp;client_secret=">http://www.baidu.com/refresh?refresh_token=&amp;client_id=&amp;client_secret=</a></p><p>Refresh Token 的有效期非常长，会在用户授权时，随 Access Token 一起重定向到回调 URL，传递给客户端。</p><h4 id="授权模式"><a href="#授权模式" class="headerlink" title="授权模式"></a>授权模式</h4><p>客户端必须得到用户的授权（authorization grant）才能获得令牌（access token）OAuth 2.0 定义了四种授权方式。</p><h4 id="简化模式"><a href="#简化模式" class="headerlink" title="简化模式"></a>简化模式</h4><p>简化模式，不推荐使用，简化模式适用于纯静态页面应用。所谓纯静态页面应用，也就是应用没有在服务器上执行代码的权限，只有前端 JS 代码的控制权。这种场景下，应用是没有持久化存储的能力的。因此，按照 OAuth2.0 的规定，这种应用是拿不到 Refresh Token 的。其整个授权流程如下。</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524221218670-1924585188.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524221218670-1924585188.png" alt="img"></a></p><p>该模式下，access_token 容易泄露且不可刷新。</p><h5 id="授权码模式"><a href="#授权码模式" class="headerlink" title="授权码模式"></a>授权码模式</h5><p>授权码模式适用于有自己的服务器的应用，它是一个一次性的临时凭证，用来换取 access_token 和 refresh_token。</p><p><a href="https://www.baidu.com/exchange?code=&amp;client_id=&amp;client_secret=">https://www.baidu.com/exchange?code=&amp;client_id=&amp;client_secret=</a></p><p>需要传入 code、client_id 以及 client_secret。验证通过后，返回 access_token 和 refresh_token。一旦换取成功，code 立即作废，不能再使用第二次。</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524221844203-1825714311.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524221844203-1825714311.png" alt="img"></a></p><p>这个 code 的作用是保护 token 的安全性，在第 4 步当中直接把 token 返回给应用。而这一步容易被拦截、窃听。引入了 code 之后，即使攻击者能够窃取到 code，但是由于他无法获得应用保存在服务器的 client_secret，因此也无法通过 code 换取 token。第 5 步，为什么不容易被拦截、窃听呢？这是因为，首先，这是一个从服务器到服务器的访问，黑客比较难捕捉到；其次，这个请求通常要求是 HTTPS 的实现。即使能窃听到数据包也无法解析出内容。</p><h5 id="密码模式"><a href="#密码模式" class="headerlink" title="密码模式"></a>密码模式</h5><p>密码模式中，用户向客户端提供自己的用户名和密码。客户端使用这些信息，向 “服务商提供” 索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分。</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524222720622-892907112.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524222720622-892907112.png" alt="img"></a></p><p>适用于同一公司内部的多个系统，不适用于不受信的第三方应用。</p><h5 id="客户端模式"><a href="#客户端模式" class="headerlink" title="客户端模式"></a>客户端模式</h5><p>如果信任关系再进一步，或者调用者是一个后端的模块，没有用户界面的时候，可以使用客户端模式。鉴权服务器直接对客户端进行身份验证，验证通过后，返回 token。</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524230610079-1585368523.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210524230610079-1585368523.png" alt="img"></a></p><h3 id="微信登录"><a href="#微信登录" class="headerlink" title="微信登录"></a>微信登录</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><h5 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h5><ul><li>注册地址：<a href="https://open.weixin.qq.com/">https://open.weixin.qq.com</a></li><li>注册微信开发平台账号</li></ul><h5 id="开发者资质认证"><a href="#开发者资质认证" class="headerlink" title="开发者资质认证"></a>开发者资质认证</h5><p>准备营业执照，1-2 个工作日审批、300 元。</p><h5 id="创建网站应用"><a href="#创建网站应用" class="headerlink" title="创建网站应用"></a>创建网站应用</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527225442936-110012026.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527225442936-110012026.png" alt="img"></a></p><p>提交审核，7 个工作日审批。</p><h5 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h5><p><a href="https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html">https://developers.weixin.qq.com/doc/oplatform/Website_App/WeChat_Login/Wechat_Login.html</a></p><h4 id="前端开发"><a href="#前端开发" class="headerlink" title="前端开发"></a>前端开发</h4><p>login.js 中添加验证登录请求，我记得之前的文章当中好像添加了，不过这里我还是列举出来，也把对应的代码放在下面。</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527225752644-1335493257.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527225752644-1335493257.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证是否已经登录</span></span><br><span class="line"><span class="title function_">checkLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`/service_user/user/wx/checkLogin`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 login.vue 当中添加属性</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527230158912-1152453589.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527230158912-1152453589.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">head</span>: &#123;</span><br><span class="line">  <span class="attr">script</span>: [</span><br><span class="line">    &#123;<span class="attr">src</span>: <span class="string">&#x27;http://res.wx.qq.com/connect/zh_CN/htmledition/js/wxLogin.js&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wxDialog</span>: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>添加微信登录的对话框</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231256983-1096964311.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231256983-1096964311.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--@opened 对话框打开后的回调--&gt;</span><br><span class="line">&lt;el-dialog</span><br><span class="line">  :visible.sync=&quot;wxDialog&quot;</span><br><span class="line">  @opened=&quot;wxOpen&quot;</span><br><span class="line">  width=&quot;30%&quot;</span><br><span class="line">  center&gt;</span><br><span class="line">  &lt;div id=&quot;qrCode&quot; style=&quot;padding-left: 110px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure><p>点击微信登录</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231410965-1676824759.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231410965-1676824759.png" alt="img"></a></p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;weixin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;weixin&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;wxDialog=true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>弹框后在生成二维码</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231620083-16857908.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527231620083-16857908.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">wxCreate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> obj = <span class="keyword">new</span> <span class="title class_">WxLogin</span>(&#123;</span><br><span class="line">    <span class="attr">self_redirect</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;qrCode&quot;</span>,</span><br><span class="line">    <span class="attr">appid</span>: <span class="string">&quot;wx92b6693b8c01fc87&quot;</span>,</span><br><span class="line">    <span class="attr">scope</span>: <span class="string">&quot;snsapi_login&quot;</span>,</span><br><span class="line">    <span class="attr">redirect_uri</span>: <span class="string">&quot;http://www.sphskla.cn/service_user/user/wx/callBack&quot;</span>,</span><br><span class="line">    <span class="attr">state</span>: <span class="string">&quot;fm&quot;</span>,</span><br><span class="line">    <span class="attr">style</span>: <span class="string">&quot;black&quot;</span>,</span><br><span class="line">    <span class="attr">href</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">wxOpen</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 生成登录二维码</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">wxCreate</span>();</span><br><span class="line">  <span class="comment">// 验证是否已经扫码</span></span><br><span class="line">  loginApi.<span class="title function_">checkLogin</span>().<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">success</span>) &#123;</span><br><span class="line">      <span class="comment">// 携带token跳转到首页</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123;<span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">query</span>: &#123;<span class="attr">token</span>: response.<span class="property">data</span>.<span class="property">token</span>&#125;&#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&quot;登录失败, 请重试&quot;</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">wxOpen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>登录成功跳转到首页后的处理修改 <code>default.vue</code> 如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527232258961-1587439215.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210527232258961-1587439215.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取token</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">token</span> = <span class="variable language_">this</span>.<span class="property">$route</span>.<span class="property">query</span>.<span class="property">token</span>;</span><br><span class="line">  <span class="comment">// 判断路径是否有token值</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 存储token与user</span></span><br><span class="line">    cookie.<span class="title function_">set</span>(<span class="string">&#x27;login_token&#x27;</span>, <span class="variable language_">this</span>.<span class="property">token</span>, &#123;<span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span>&#125;);</span><br><span class="line">    cookie.<span class="title function_">set</span>(<span class="string">&#x27;portal_user&#x27;</span>, <span class="string">&#x27;&#x27;</span>, &#123;<span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    loginApi.<span class="title function_">getLoginInfo</span>().<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loginInfo</span> = response.<span class="property">data</span>.<span class="property">userInfo</span>;</span><br><span class="line">      cookie.<span class="title function_">set</span>(<span class="string">&#x27;portal_user&#x27;</span>, <span class="variable language_">this</span>.<span class="property">loginInfo</span>, &#123;<span class="attr">domain</span>: <span class="string">&#x27;localhost&#x27;</span>&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">showInfo</span>();</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="后端开发"><a href="#后端开发" class="headerlink" title="后端开发"></a>后端开发</h4><p>在 service_user 工程当中添加配置</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210528212131682-1413163493.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210528212131682-1413163493.png" alt="img"></a></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wx:</span></span><br><span class="line">  <span class="attr">open:</span></span><br><span class="line">    <span class="comment"># 微信开放平台 openid</span></span><br><span class="line">    <span class="attr">app_id:</span> <span class="string">wx92b6693b8c01fc87</span></span><br><span class="line">    <span class="comment"># 微信开放平台 appsecret</span></span><br><span class="line">    <span class="attr">app_secret:</span> <span class="string">d734ba63f66b7dsadscdcb958eea</span></span><br><span class="line">    <span class="comment"># 重定向url</span></span><br><span class="line">    <span class="attr">redirect_url:</span> <span class="string">http://www.sphskla.cn/wechat/callBack</span></span><br></pre></td></tr></table></figure><p>创建常量类 WxConstantUtil.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210528212652367-1967757810.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210528212652367-1967757810.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 微信相关常量工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/28 028 21:24</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxConstantUtil</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wx.open.app_id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wx.open.app_secret&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String appSecret;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;wx.open.redirect_url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String redirectUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String WX_OPEN_APP_ID;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String WX_OPEN_APP_SECRET;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String WX_OPEN_REDIRECT_URL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterPropertiesSet</span><span class="params">()</span> &#123;</span><br><span class="line">        WX_OPEN_APP_ID = appId;</span><br><span class="line">        WX_OPEN_APP_SECRET = appSecret;</span><br><span class="line">        WX_OPEN_REDIRECT_URL = redirectUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加 HTTP 请求的工具类</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082212601-1466113653.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082212601-1466113653.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 发送 HTTP 请求工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/28 028 21:39</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpClientUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送get 网络请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">(String uri)</span> &#123;</span><br><span class="line">        <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpGet</span> <span class="variable">get</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(uri);</span><br><span class="line">        <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            httpClient = HttpClients.createDefault();</span><br><span class="line">            response = httpClient.execute(get);</span><br><span class="line">            <span class="type">int</span> <span class="variable">statusCode</span> <span class="operator">=</span> response.getStatusLine().getStatusCode();</span><br><span class="line">            <span class="keyword">if</span> (statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                <span class="keyword">return</span> EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> != response) &#123;</span><br><span class="line">                    response.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">null</span> != httpClient) &#123;</span><br><span class="line">                    httpClient.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 UserService.java 添加新的用户业务方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082513155-1694226520.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082513155-1694226520.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt; 根据openId获取用户 &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> openId</span></span><br><span class="line"><span class="comment"> *            微信openId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 通过openId获取的用户</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">User <span class="title function_">getByOpenId</span><span class="params">(String openId)</span>;</span><br></pre></td></tr></table></figure><p>修改 UserServiceImpl.java 实现该方法</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082642988-558625650.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529082642988-558625650.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">getByOpenId</span><span class="params">(String openId)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;openid&quot;</span>, openId);</span><br><span class="line">    <span class="keyword">return</span> baseMapper.selectOne(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要在本地上调试微信扫描登录需要配置一下，因为微信回调的地址是在公网，我们需要配置一下 HOST 文件以及 nginx 的反向代理如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529090235598-1809198739.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529090235598-1809198739.png" alt="img"></a></p><p>修改 HOST 有专门修改 HOST 文件的工具我这里没有列举出来</p><p>修改 <code>C:\Windows\System32\drivers\etc\host</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091100545-848048920.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091100545-848048920.png" alt="img"></a></p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1www.sphskla.cn</span><br></pre></td></tr></table></figure><p>修改 nginx.conf</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091316970-592108341.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091316970-592108341.png" alt="img"></a></p><p>text</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ /wx &#123;</span><br><span class="line">proxy_pass http://localhost:8007;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启 nginx 然后在自行测试微信登录即可，重启命令如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091446379-1432669436.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529091446379-1432669436.png" alt="img"></a></p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx.exe -s stop</span><br></pre></td></tr></table></figure><p>在 Controller 当中创建 WxController</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 微信请求控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/5/29 029 8:27</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_user/user/wx&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserService userService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录当前是否已经登录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isLogin;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录当前是否扫码登录失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> isLoginFail;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前登录用户token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String jwtToken;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;微信登录后端回调业务&lt;/b&gt;</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     *            code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> state</span></span><br><span class="line"><span class="comment">     *            站点状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/callBack&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callback</span><span class="params">(String code, String state)</span> &#123;</span><br><span class="line">        <span class="comment">// 从redis中将state获取出来，和当前传入的state作比较</span></span><br><span class="line">        <span class="comment">// 如果一致则放行，如果不一致则抛出异常：非法访问</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 需修改为自己的app环境</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">getToken</span> <span class="operator">=</span> <span class="string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token?&quot;</span> + <span class="string">&quot;appid=%s&quot;</span> + <span class="string">&quot;&amp;secret=%s&quot;</span></span><br><span class="line">                + <span class="string">&quot;&amp;code=%s&quot;</span> + <span class="string">&quot;&amp;grant_type=authorization_code&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 拼接请求地址</span></span><br><span class="line">            getToken = String.format(getToken, WxConstantUtil.WX_OPEN_APP_ID, WxConstantUtil.WX_OPEN_APP_SECRET, code);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 回调获得code，通过用户授权的code去获取微信令牌</span></span><br><span class="line">            Map&lt;String, Object&gt; map = JSON.parseObject(HttpClientUtil.get(getToken));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取到了关键的令牌和openid后，</span></span><br><span class="line">            <span class="comment">// 就可以正式开始查询微信用户的信息，完成我们要做的微信绑定</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">accessToken</span> <span class="operator">=</span> (String)map.get(<span class="string">&quot;access_token&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">openId</span> <span class="operator">=</span> (String)map.get(<span class="string">&quot;openid&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 查询数据库当中有没有该用户</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getByOpenId(openId);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果没有用户</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == user) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">userInfo</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span> + <span class="string">&quot;https://api.weixin.qq.com/sns/userinfo?&quot;</span> + <span class="string">&quot;access_token=%s&quot;</span> + <span class="string">&quot;&amp;openid=%s&quot;</span>;</span><br><span class="line">                userInfo = String.format(userInfo, accessToken, openId);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取微信用户信息</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">wxUserInfo</span> <span class="operator">=</span> HttpClientUtil.get(userInfo);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 解析用户json信息</span></span><br><span class="line">                Map&lt;String, Object&gt; info = JSON.parseObject(wxUserInfo);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取昵称与头像</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">nickname</span> <span class="operator">=</span> (String)info.get(<span class="string">&quot;nickname&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">headImgUrl</span> <span class="operator">=</span> (String)info.get(<span class="string">&quot;headimgurl&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 向数据库中插入一条记录</span></span><br><span class="line">                user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">                user.setNickname(nickname);</span><br><span class="line">                user.setOpenid(openId);</span><br><span class="line">                user.setAvatar(headImgUrl);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 保存用户信息</span></span><br><span class="line">                userService.save(user);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 使用jwt根据user对象生成token字符串</span></span><br><span class="line">            jwtToken = JwtUtils.getJwtToken(user.getId(), user.getNickname());</span><br><span class="line">            <span class="built_in">this</span>.isLogin = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="built_in">this</span>.isLoginFail = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;b&gt;校验是否已经登录&lt;/b&gt;</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 校验结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/checkLogin&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">checkLogin</span><span class="params">()</span> &#123;</span><br><span class="line">        ResponseResult result;</span><br><span class="line">        <span class="type">int</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果登录状态已经,登录,返回用户token</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isLogin) &#123;</span><br><span class="line">                result = ResponseResult.ok().data(<span class="string">&quot;token&quot;</span>, <span class="built_in">this</span>.jwtToken);</span><br><span class="line">                <span class="comment">// 状态复位</span></span><br><span class="line">                isLogin = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">// 退出</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 扫描登录失败 返回错误信息</span></span><br><span class="line">            <span class="keyword">if</span> (isLoginFail) &#123;</span><br><span class="line">                result = ResponseResult.error();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 每500毫秒查询一下状态</span></span><br><span class="line">                Thread.sleep(<span class="number">500</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 超时处理</span></span><br><span class="line">            <span class="keyword">if</span> (flag &gt; <span class="number">500</span>) &#123;</span><br><span class="line">                result = ResponseResult.error();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            flag++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改前端的 <code>default.vue</code> 导入 loginApi 如下图</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> loginApi <span class="keyword">from</span> <span class="string">&quot;@/api/login&quot;</span>;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529102017282-750649762.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529102017282-750649762.png" alt="img"></a></p><h2 id="54-作品展示与播放-作者列表与详情"><a href="#54-作品展示与播放-作者列表与详情" class="headerlink" title="54-作品展示与播放-作者列表与详情"></a>54-作品展示与播放-作者列表与详情</h2><h3 id="接口准备"><a href="#接口准备" class="headerlink" title="接口准备"></a>接口准备</h3><h4 id="创建-author-js"><a href="#创建-author-js" class="headerlink" title="创建 author.js"></a>创建 author.js</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529111729002-1846210249.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210529111729002-1846210249.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_name = <span class="string">&#x27;/service_video/author&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">authorWebList</span>(<span class="params">page, limit</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/pageList/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 获取作者的信息  个人信息与作品信息</span></span><br><span class="line">  <span class="title function_">getAuthorById</span>(<span class="params">authorId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api_name&#125;</span>/getAuthorById/<span class="subst">$&#123;authorId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端服务"><a href="#后端服务" class="headerlink" title="后端服务"></a>后端服务</h4><p>修改 AuthorController.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530091423720-1315393335.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530091423720-1315393335.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt; 根据作者ID查询作者信息以及作者的作品 &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;getAuthorById/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;author&quot;</span>, authorService.getById(id)).data(<span class="string">&quot;contentList&quot;</span>,</span><br><span class="line">        contentService.selectByAuthorId(id));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService.java</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;b&gt; 根据作者id查询这个作者的作品列表 &lt;/b&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> authorId</span></span><br><span class="line"><span class="comment"> *            作者ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 作品</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Content&gt; <span class="title function_">selectByAuthorId</span><span class="params">(String authorId)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl.java</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Content&gt; <span class="title function_">selectByAuthorId</span><span class="params">(String authorId)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;Content&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;Content&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;author_id&quot;</span>, authorId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按照最后更新时间倒序排列</span></span><br><span class="line">    queryWrapper.orderByDesc(<span class="string">&quot;gmt_modified&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> baseMapper.selectList(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="列表展示"><a href="#列表展示" class="headerlink" title="列表展示"></a>列表展示</h3><p>在 pages 下创建 author 文件夹，在 author 文件夹下面创建两个 vue 组件页面如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530091717776-1765369842.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530091717776-1765369842.png" alt="img"></a></p><p>两个页面的内容都是之前写过的，不在一一说明直接上代码了，里面就用到了一个新的内容就是异步加载如下图所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530191840326-447728567.png"><img src="https://img2020.cnblogs.com/blog/2105804/202105/2105804-20210530191840326-447728567.png" alt="img"></a></p><p>_id.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">      &lt;h2 class=&quot;fl tac&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;c-333&quot;&gt;作者介绍&lt;/span&gt;</span><br><span class="line">      &lt;/h2&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;div class=&quot;t-infor-wrap&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      作者基本信息</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;section class=&quot;fl t-infor-box c-desc-content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;mt20 ml20&quot;&gt;</span><br><span class="line">          &lt;section class=&quot;t-infor-pic&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;author.avatar&quot;&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">          &lt;h3 class=&quot;hLh30&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;fsize24 c-333&quot;&gt;</span><br><span class="line">              &#123;&#123; author.name &#125;&#125;&amp;nbsp; &#123;&#123; author.level === 1 ? &#x27;普通作者&#x27; : &#x27;特邀作者&#x27; &#125;&#125;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/h3&gt;</span><br><span class="line">          &lt;section class=&quot;mt10&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;t-tag-bg&quot;&gt;&#123;&#123; author.intro &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">          &lt;section class=&quot;t-infor-txt&quot;&gt;</span><br><span class="line">            &lt;p class=&quot;mt20&quot;&gt;&#123;&#123; author.career &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">          &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">      &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;section class=&quot;mt30&quot;&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;header class=&quot;comm-title all-teacher-title c-course-content&quot;&gt;</span><br><span class="line">          &lt;h2 class=&quot;fl tac&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;c-333&quot;&gt;作品信息&lt;/span&gt;</span><br><span class="line">          &lt;/h2&gt;</span><br><span class="line">          &lt;section class=&quot;c-tab-title&quot;&gt;</span><br><span class="line">            &lt;a href=&quot;javascript: void(0)&quot;&gt;&amp;nbsp;&lt;/a&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">        &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">        没有数据</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;section class=&quot;no-data-wrap&quot; v-if=&quot;contentList.length==0&quot;&gt;</span><br><span class="line">          &lt;em class=&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">          &lt;span class=&quot;c-666 fsize14 ml10 vam&quot;&gt;该作品还未发布作品&lt;/span&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">        &lt;article class=&quot;comm-video-list&quot;&gt;</span><br><span class="line">          &lt;ul class=&quot;of&quot; id=&quot;bna&quot;&gt;</span><br><span class="line">            &lt;li v-for=&quot;content in contentList&quot; :key=&quot;content.id&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                &lt;section class=&quot;video-img&quot;&gt;</span><br><span class="line">                  &lt;img :src=&quot;content.cover&quot; class=&quot;img-responsive&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;cc-mask&quot;&gt;</span><br><span class="line">                    &lt;a :href=&quot;&#x27;/video/&#x27;+content.id&quot; class=&quot;comm-btn c-btn-1&quot;&gt;播放&lt;/a&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">                &lt;h3 class=&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                  &lt;a :href=&quot;&#x27;/video/&#x27;+content.id&quot; class=&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123; content.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/h3&gt;</span><br><span class="line">                &lt;section class=&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;fr jgTag bg-orange&quot; v-if=&quot;Number(content.price) === 0&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                  &lt;span class=&quot;fr jgTag bg-orange&quot; v-else&gt;</span><br><span class="line">                        &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt; ￥&#123;&#123; content.price &#125;&#125;&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                  &lt;span class=&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.buyCount &#125;&#125; 人学习&lt;/i&gt;</span><br><span class="line">                                                |</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; content.viewCount &#125;&#125; 人浏览&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                &lt;/section&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">          &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/article&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import author from &quot;@/api/author&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  /*</span><br><span class="line">  接收参数：params内容为路由参数</span><br><span class="line">  * */</span><br><span class="line">  asyncData(&#123;params, error&#125;) &#123;</span><br><span class="line">    return author.getAuthorById(params.id).then(response =&gt; &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        // 作者信息</span><br><span class="line">        author: response.data.author,</span><br><span class="line">        // 作品列表</span><br><span class="line">        contentList: response.data.contentList</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>index.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;videoList&quot; class=&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;container&quot; style=&quot;min-height: 600px;&quot;&gt;</span><br><span class="line">      &lt;section class=&quot;c-sort-box unBr&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;!--</span><br><span class="line">          列表展示</span><br><span class="line">          --&gt;</span><br><span class="line">          &lt;article class=&quot;i-author-list&quot; style=&quot;padding-top: 50px;&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;yd-open-course-card open-course-card&quot; v-for=&quot;author in list&quot; :key=&quot;author.id&quot;&gt;</span><br><span class="line">              &lt;a :href=&quot;&#x27;/author/&#x27;+author.id&quot; style=&quot;color: #7F828B;text-decoration:none;&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;yd-open-course-card_avatar&quot;&gt;</span><br><span class="line">                  &lt;img :src=&quot;author.avatar&quot; :alt=&quot;author.name&quot;&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;yd-open-course-card_content_teacher&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;yd-open-course-card_content_teacher_tag&quot;&gt;&#123;&#123; author.name &#125;&#125;&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div&gt;&#123;&#123; author.intro &#125;&#125;&lt;/div&gt;</span><br><span class="line">                &lt;span&gt;-------------------------&lt;/span&gt;</span><br><span class="line">                &lt;div&gt;&#123;&#123; author.career &#125;&#125;&lt;/div&gt;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/article&gt;</span><br><span class="line">          &lt;!--</span><br><span class="line">          没有数据</span><br><span class="line">          --&gt;</span><br><span class="line">          &lt;section class=&quot;no-data-wrap&quot; v-if=&quot;total==0&quot;&gt;</span><br><span class="line">            &lt;em class=&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">            &lt;span class=&quot;c-666 fsize14 ml10 vam&quot;&gt;没有相关数据...&lt;/span&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">        分页</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;el-pagination</span><br><span class="line">          style=&quot;padding: 30px 0; text-align: center&quot;</span><br><span class="line">          background</span><br><span class="line">          :current-page=&quot;page&quot;</span><br><span class="line">          :page-size=&quot;limit&quot;</span><br><span class="line">          layout=&quot;total, prev, pager, next, jumper &quot;</span><br><span class="line">          :total=&quot;total&quot;</span><br><span class="line">          @current-change=&quot;getData&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import author from &quot;@/api/author&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  asyncData(&#123;params, error&#125;) &#123;</span><br><span class="line">    return author.authorWebList(1, 3).then(response =&gt; &#123;</span><br><span class="line">      if (response.success === true) &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          // 作者信息</span><br><span class="line">          list: response.data.rows,</span><br><span class="line">          // 作品列表</span><br><span class="line">          total: response.data.total</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    // 定义变量与初始值</span><br><span class="line">    return &#123;</span><br><span class="line">      // 数据列表</span><br><span class="line">      list: null,</span><br><span class="line">      // 总记录数</span><br><span class="line">      total: 0,</span><br><span class="line">      // 页码</span><br><span class="line">      page: 1,</span><br><span class="line">      // 每页记录数</span><br><span class="line">      limit: 3</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 分页切换  page:当前页</span><br><span class="line">    getData(page = 1) &#123;</span><br><span class="line">      // 调用api层获取数据库中的数据</span><br><span class="line">      this.page = page;</span><br><span class="line">      author.authorWebList(this.page, this.limit).then(response =&gt; &#123;</span><br><span class="line">        if (response.success === true) &#123;</span><br><span class="line">          this.list = response.data.rows;</span><br><span class="line">          this.total = response.data.total;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">::v-deep .el-pagination.is-background .el-pager li:not(.disabled).active &#123;</span><br><span class="line">  background-color: orangered;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.open-course-card &#123;</span><br><span class="line">  width: 375px;</span><br><span class="line">  margin-top: 5px;</span><br><span class="line">  background: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.yd-open-course-card_avatar &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  width: 80px;</span><br><span class="line">  height: 102px;</span><br><span class="line">  margin-right: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.yd-open-course-card_avatar img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.yd-open-course-card &#123;</span><br><span class="line">  font-family: PingFang SC;</span><br><span class="line">  padding: 12px;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  border: 1px solid rgba(153, 153, 153, 0.15);</span><br><span class="line">  border-radius: 8px;</span><br><span class="line">  height: 143px;</span><br><span class="line">  min-width: 300px;</span><br><span class="line">  max-width: 385px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  float: left;</span><br><span class="line">  margin-right: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.yd-open-course-card_content_teacher_tag &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  height: 17px;</span><br><span class="line">  font-weight: 600;</span><br><span class="line">  font-size: 12px;</span><br><span class="line">  line-height: 17px;</span><br><span class="line">  color: #f4ad0b;</span><br><span class="line">  background: rgba(244, 173, 11, 0.06);</span><br><span class="line">  border: 0.5px solid rgba(244, 173, 11, 0.4);</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  padding: 2px 4px;</span><br><span class="line">  margin-bottom: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="修改前端"><a href="#修改前端" class="headerlink" title="修改前端"></a>修改前端</h3><p>创建 content.js</p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">getPageList</span>(<span class="params">page, limit, searchObj</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/content/getContentPageQuery/<span class="subst">$&#123;page&#125;</span>/<span class="subst">$&#123;limit&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: searchObj</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 查询所有分类的方法</span></span><br><span class="line">  <span class="title function_">getAllCategory</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/service_video/category/getTreeCategory&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据作品id获取作品详情信息</span></span><br><span class="line">  <span class="title function_">geContentDetailById</span>(<span class="params">contentId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_video/content/getContentDeatail/<span class="subst">$&#123;contentId&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 pages 目录下的 video 文件夹下创建一个 _id.vue 组件如下图并且修改 index.vue 的内容, 修改内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605081650423-1942154246.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605081650423-1942154246.png" alt="img"></a></p><p>index.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;aCoursesList&quot; class=&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;header class=&quot;comm-title&quot;&gt;</span><br><span class="line">      &lt;/header&gt;</span><br><span class="line">      &lt;section class=&quot;c-sort-box&quot;&gt;</span><br><span class="line">        &lt;section class=&quot;c-s-dl&quot;&gt;</span><br><span class="line">          &lt;dl&gt;</span><br><span class="line">            &lt;dt&gt;</span><br><span class="line">              &lt;span class=&quot;c-999 fsize14&quot;&gt;作品分类&lt;/span&gt;</span><br><span class="line">            &lt;/dt&gt;</span><br><span class="line">            &lt;dd class=&quot;c-s-dl-li&quot;&gt;</span><br><span class="line">              &lt;ul class=&quot;clearfix&quot;&gt;</span><br><span class="line">                &lt;li v-for=&quot;(item,index) in oneCategoryList&quot; :key=&quot;index&quot; :class=&quot;&#123;active:oneIndex==index&#125;&quot;&gt;</span><br><span class="line">                  &lt;a :title=&quot;item.title&quot; href=&quot;#&quot; @click=&quot;searchOne(item.id,index)&quot;&gt;&#123;&#123; item.title &#125;&#125; &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/dd&gt;</span><br><span class="line">          &lt;/dl&gt;</span><br><span class="line">          &lt;dl&gt;</span><br><span class="line">            &lt;dt&gt;</span><br><span class="line">              &lt;span class=&quot;c-999 fsize14&quot;&gt;&lt;/span&gt;</span><br><span class="line">            &lt;/dt&gt;</span><br><span class="line">            &lt;dd class=&quot;c-s-dl-li&quot;&gt;</span><br><span class="line">              &lt;ul class=&quot;clearfix&quot;&gt;</span><br><span class="line">                &lt;li v-for=&quot;(item,index) in twoCategoryList&quot; :key=&quot;index&quot; :class=&quot;&#123;active:twoIndex==index&#125;&quot;&gt;</span><br><span class="line">                  &lt;a :title=&quot;item.title&quot; href=&quot;#&quot; @click=&quot;searchTwo(item.id,index)&quot;&gt;&#123;&#123; item.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/dd&gt;</span><br><span class="line">          &lt;/dl&gt;</span><br><span class="line">          &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/section&gt;</span><br><span class="line">        &lt;div class=&quot;js-wrap&quot;&gt;</span><br><span class="line">          &lt;section class=&quot;fr&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;c-ccc&quot;&gt;</span><br><span class="line">              &lt;i class=&quot;c-master f-fM&quot;&gt;1&lt;/i&gt;/</span><br><span class="line">              &lt;i class=&quot;c-666 f-fM&quot;&gt;1&lt;/i&gt;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">          &lt;section class=&quot;fl&quot;&gt;</span><br><span class="line">            &lt;ol class=&quot;js-tap clearfix&quot;&gt;</span><br><span class="line">              &lt;li :class=&quot;&#123;&#x27;current bg-orangered&#x27;:buyCountSort!=&#x27;&#x27;&#125;&quot;&gt;</span><br><span class="line">                &lt;a title=&quot;销量&quot; href=&quot;javascript:void(0);&quot; @click=&quot;searchBuyCount()&quot;&gt;畅销</span><br><span class="line">                  &lt;span :class=&quot;&#123;hide:buyCountSort==&#x27;&#x27;&#125;&quot;&gt;↓&lt;/span&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li :class=&quot;&#123;&#x27;current bg-orangered&#x27;:gmtCreateSort!=&#x27;&#x27;&#125;&quot;&gt;</span><br><span class="line">                &lt;a title=&quot;最新&quot; href=&quot;javascript:void(0);&quot; @click=&quot;searchGmtCreate()&quot;&gt;最新</span><br><span class="line">                  &lt;span :class=&quot;&#123;hide:gmtCreateSort==&#x27;&#x27;&#125;&quot;&gt;↓&lt;/span&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">              &lt;li :class=&quot;&#123;&#x27;current bg-orangered&#x27;:priceSort!=&#x27;&#x27;&#125;&quot;&gt;</span><br><span class="line">                &lt;a title=&quot;价格&quot; href=&quot;javascript:void(0);&quot; @click=&quot;searchPrice()&quot;&gt;价格&amp;nbsp;</span><br><span class="line">                  &lt;span :class=&quot;&#123;hide:priceSort==&#x27;&#x27;&#125;&quot;&gt;↓&lt;/span&gt;</span><br><span class="line">                &lt;/a&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ol&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;mt40&quot;&gt;</span><br><span class="line">          &lt;!--</span><br><span class="line">          无数据提示 开始</span><br><span class="line">          --&gt;</span><br><span class="line">          &lt;section class=&quot;no-data-wrap&quot; v-if=&quot;data.length == 0&quot;&gt;</span><br><span class="line">            &lt;em class=&quot;icon30 no-data-ico&quot;&gt;&amp;nbsp;&lt;/em&gt;</span><br><span class="line">            &lt;span class=&quot;c-666 fsize14 ml10 vam&quot;&gt;没有相关数据...&lt;/span&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line"></span><br><span class="line">          &lt;article class=&quot;comm-video-list&quot; style=&quot;min-height: 450px;&quot;&gt;</span><br><span class="line">            &lt;ul class=&quot;of&quot; id=&quot;bna&quot;&gt;</span><br><span class="line">              &lt;li v-for=&quot;item in data&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;cc-l-wrap&quot;&gt;</span><br><span class="line">                  &lt;section class=&quot;video-img&quot;&gt;</span><br><span class="line">                    &lt;img :src=&quot;item.cover&quot; class=&quot;img-responsive&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;cc-mask&quot;&gt;</span><br><span class="line">                      &lt;a :href=&quot;&#x27;/video/&#x27;+item.id&quot; class=&quot;comm-btn c-btn-1&quot;&gt;播放&lt;/a&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/section&gt;</span><br><span class="line">                  &lt;h3 class=&quot;hLh30 txtOf mt10&quot;&gt;</span><br><span class="line">                    &lt;a :href=&quot;&#x27;/video/&#x27;+item.id&quot; class=&quot;course-title fsize18 c-333&quot;&gt;&#123;&#123; item.title &#125;&#125;&lt;/a&gt;</span><br><span class="line">                  &lt;/h3&gt;</span><br><span class="line">                  &lt;section class=&quot;mt10 hLh20 of&quot;&gt;</span><br><span class="line">                    &lt;span class=&quot;fr jgTag bg-orangered&quot; v-if=&quot;Number(item.price) === 0&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt;免费&lt;/i&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                    &lt;span class=&quot;fr jgTag bg-orangered&quot; v-else&gt;</span><br><span class="line">                        &lt;i class=&quot;c-fff fsize12 f-fA&quot;&gt; ￥&#123;&#123; item.price &#125;&#125;&lt;/i&gt;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                    &lt;span class=&quot;fl jgAttr c-ccc f-fA&quot;&gt;</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; item.buyCount &#125;&#125; 人学习&lt;/i&gt;</span><br><span class="line">                                                |</span><br><span class="line">                        &lt;i class=&quot;c-999 f-fA&quot;&gt;&#123;&#123; item.viewCount &#125;&#125; 人浏览&lt;/i&gt;</span><br><span class="line">                    &lt;/span&gt;</span><br><span class="line">                  &lt;/section&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">            &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">          &lt;/article&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">        分页</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;el-pagination</span><br><span class="line">          style=&quot;padding: 30px 0; text-align: center&quot;</span><br><span class="line">          background</span><br><span class="line">          :current-page=&quot;page&quot;</span><br><span class="line">          :page-size=&quot;limit&quot;</span><br><span class="line">          layout=&quot;total, prev, pager, next, jumper &quot;</span><br><span class="line">          :total=&quot;total&quot;</span><br><span class="line">          @current-change=&quot;gotoPage&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    课程列表 结束</span><br><span class="line">    --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import content from &#x27;@/api/content&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    // 定义变量与初始值</span><br><span class="line">    return &#123;</span><br><span class="line">      // 数据列表</span><br><span class="line">      list: null,</span><br><span class="line"></span><br><span class="line">      // 总记录数</span><br><span class="line">      total: 0,</span><br><span class="line"></span><br><span class="line">      // 页码</span><br><span class="line">      page: 1,</span><br><span class="line"></span><br><span class="line">      // 每页记录数</span><br><span class="line">      limit: 4,</span><br><span class="line">      data: [],</span><br><span class="line"></span><br><span class="line">      // 查询表单对象</span><br><span class="line">      searchObj: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">      // 一级分类列表</span><br><span class="line">      oneCategoryList: [],</span><br><span class="line"></span><br><span class="line">      // 二级分类列表</span><br><span class="line">      twoCategoryList: [],</span><br><span class="line"></span><br><span class="line">      // 记录一级选中状态角标</span><br><span class="line">      oneIndex: -1,</span><br><span class="line"></span><br><span class="line">      // 记录二级选中状态角标</span><br><span class="line">      twoIndex: -1,</span><br><span class="line"></span><br><span class="line">      // 畅销排序</span><br><span class="line">      buyCountSort: &quot;&quot;,</span><br><span class="line"></span><br><span class="line">      // 日期排序</span><br><span class="line">      gmtCreateSort: &quot;&quot;,</span><br><span class="line"></span><br><span class="line">      // 价格排序</span><br><span class="line">      priceSort: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 加载数据(异步)</span><br><span class="line">  async asyncData(&#123;params, error&#125;) &#123;</span><br><span class="line">    let [request1Data, request2Data] = await Promise.all([</span><br><span class="line">      content.getPageList(1, 4, &#123;&#125;),</span><br><span class="line">      content.getAllCategory()</span><br><span class="line">    ]);</span><br><span class="line">    return &#123;</span><br><span class="line">      data: request1Data.data.rows,</span><br><span class="line">      total: request1Data.data.total,</span><br><span class="line">      oneCategoryList: request2Data.data.list,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    // 分页查询</span><br><span class="line">    gotoPage(page) &#123;</span><br><span class="line">      this.page = page;</span><br><span class="line">      content.getPageList(page, this.limit, this.searchObj).then(response =&gt; &#123;</span><br><span class="line">        this.data = response.data.rows;</span><br><span class="line">        this.total = response.data.total;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 点击某个一级分类，查询对应二级分类</span><br><span class="line">    searchOne(categoryParentId, index) &#123;</span><br><span class="line">      // 把传递index值赋值给oneIndex,为了active样式生效</span><br><span class="line">      this.oneIndex = index;</span><br><span class="line"></span><br><span class="line">      this.twoIndex = -1;</span><br><span class="line">      this.searchObj.categoryId = &quot;&quot;;</span><br><span class="line">      this.twoCategoryList = [];</span><br><span class="line"></span><br><span class="line">      // 把一级分类点击id值，赋值给searchObj</span><br><span class="line">      this.searchObj.categoryParentId = categoryParentId;</span><br><span class="line"></span><br><span class="line">      // 点击某个一级分类进行条件查询;</span><br><span class="line">      this.gotoPage(1);</span><br><span class="line"></span><br><span class="line">      // 拿着点击一级分类id 和 所有一级分类id进行比较，</span><br><span class="line">      // 如果id相同，从一级分类里面获取对应的二级分类</span><br><span class="line">      for (let i = 0; i &lt; this.oneCategoryList.length; i++) &#123;</span><br><span class="line">        // 获取每个一级分类</span><br><span class="line">        let oneCategory = this.oneCategoryList[i];</span><br><span class="line">        // 比较id是否相同</span><br><span class="line">        if (categoryParentId === oneCategory.id) &#123;</span><br><span class="line">          // 从一级分类里面获取对应的二级分类</span><br><span class="line">          this.twoCategoryList = oneCategory.children;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 点击某个二级分类实现查询</span><br><span class="line">    searchTwo(categoryId, index) &#123;</span><br><span class="line">      // 把index赋值,为了样式生效</span><br><span class="line">      this.twoIndex = index;</span><br><span class="line"></span><br><span class="line">      // 把二级分类点击id值，赋值给searchObj</span><br><span class="line">      this.searchObj.categoryId = categoryId;</span><br><span class="line"></span><br><span class="line">      //点击某个二级分类进行条件查询</span><br><span class="line">      this.gotoPage(1);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 根据销量排序</span><br><span class="line">    searchBuyCount() &#123;</span><br><span class="line">      // 设置对应变量值，为了样式生效</span><br><span class="line">      this.buyCountSort = &quot;1&quot;;</span><br><span class="line">      this.gmtCreateSort = &quot;&quot;;</span><br><span class="line">      this.priceSort = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">      // 把值赋值到searchObj</span><br><span class="line">      this.searchObj.buyCountSort = this.buyCountSort;</span><br><span class="line">      this.searchObj.gmtCreateSort = this.gmtCreateSort;</span><br><span class="line">      this.searchObj.priceSort = this.priceSort;</span><br><span class="line"></span><br><span class="line">      // 调用方法查询</span><br><span class="line">      this.gotoPage(1);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 最新排序</span><br><span class="line">    searchGmtCreate() &#123;</span><br><span class="line">      // 设置对应变量值，为了样式生效</span><br><span class="line">      this.buyCountSort = &quot;&quot;;</span><br><span class="line">      this.gmtCreateSort = &quot;1&quot;;</span><br><span class="line">      this.priceSort = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">      // 把值赋值到searchObj</span><br><span class="line">      this.searchObj.buyCountSort = this.buyCountSort;</span><br><span class="line">      this.searchObj.gmtCreateSort = this.gmtCreateSort;</span><br><span class="line">      this.searchObj.priceSort = this.priceSort;</span><br><span class="line"></span><br><span class="line">      // 调用方法查询</span><br><span class="line">      this.gotoPage(1);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 价格排序</span><br><span class="line">    searchPrice() &#123;</span><br><span class="line">      // 设置对应变量值，为了样式生效</span><br><span class="line">      this.buyCountSort = &quot;&quot;;</span><br><span class="line">      this.gmtCreateSort = &quot;&quot;;</span><br><span class="line">      this.priceSort = &quot;1&quot;;</span><br><span class="line"></span><br><span class="line">      // 把值赋值到searchObj</span><br><span class="line">      this.searchObj.buyCountSort = this.buyCountSort;</span><br><span class="line">      this.searchObj.gmtCreateSort = this.gmtCreateSort;</span><br><span class="line">      this.searchObj.priceSort = this.priceSort;</span><br><span class="line"></span><br><span class="line">      // 调用方法查询</span><br><span class="line">      this.gotoPage(1);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">/*</span><br><span class="line">如果需要修改 element-ui的样式前面需要加上如下前缀 ::v-deep</span><br><span class="line">*/</span><br><span class="line">::v-deep .el-pagination.is-background .el-pager li:not(.disabled).active &#123;</span><br><span class="line">  background-color: orangered;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.active &#123;</span><br><span class="line">  background: orangered;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.active a &#123;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.active a:hover &#123;</span><br><span class="line">  color: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.hide &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.show &#123;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>前面的章节当中已经讲解过了所以这里就直接上代码了, 如上是 index.vue 的内容 _id.vue 组件的内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;videoList&quot; class=&quot;bg-fa of&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;section class=&quot;path-wrap txtOf hLh30&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; title class=&quot;c-999 fsize14&quot;&gt;首页&lt;/a&gt;</span><br><span class="line">        \</span><br><span class="line">        &lt;a href=&quot;/course&quot; title class=&quot;c-999 fsize14&quot;&gt;作品列表&lt;/a&gt;</span><br><span class="line">        \</span><br><span class="line">        &lt;span class=&quot;c-333 fsize14&quot;&gt;&#123;&#123; content.oneCategoryName &#125;&#125;&lt;/span&gt;</span><br><span class="line">        \</span><br><span class="line">        &lt;span class=&quot;c-333 fsize14&quot;&gt;&#123;&#123; content.twoCategoryName &#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/section&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;div class=&quot;content-box&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;fl&quot;&gt;</span><br><span class="line">            &lt;img width=&quot;450&quot; height=&quot;250&quot; :src=&quot;content.cover&quot;/&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;fl u-coursetitle&quot;&gt;</span><br><span class="line">            &lt;h2&gt;</span><br><span class="line">              &lt;span class=&quot;u-coursetitle_title&quot;&gt;&#123;&#123; content.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;/h2&gt;</span><br><span class="line">            &lt;div style=&quot;margin-top: 10px; &quot;&gt;</span><br><span class="line">              &lt;div class=&quot;fl&quot;&gt;&#123;&#123; content.buyCount &#125;&#125;人学过&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;fl hot&quot;&gt;</span><br><span class="line">                &lt;el-rate</span><br><span class="line">                  v-model=&quot;value&quot;</span><br><span class="line">                  disabled</span><br><span class="line">                  show-score</span><br><span class="line">                  text-color=&quot;#ff9900&quot;</span><br><span class="line">                  score-template=&quot;&#123;value&#125;&quot;&gt;</span><br><span class="line">                &lt;/el-rate&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div v-if=&quot;Number(content.price) != 0&quot; style=&quot;font-size: 28px; margin-top: 30px;&quot;&gt;</span><br><span class="line">              ¥ &#123;&#123; content.price &#125;&#125;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;join&quot;&gt;</span><br><span class="line">              &lt;a @click=&quot;createOrders&quot; class=&quot;learnbtn&quot;</span><br><span class="line">                 v-if=&quot;Number(content.price) != 0 &amp;&amp; isBuy == false&quot;&gt;&lt;span&gt;立即购买&lt;/span&gt;&lt;/a&gt;</span><br><span class="line">              &lt;a href=&quot;#&quot; class=&quot;j-do-trailer&quot;</span><br><span class="line">                 v-if=&quot;Number(content.price) === 0 || isBuy== true&quot;&gt;&lt;span&gt;立即学习&lt;/span&gt;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;mt20 c-infor-box&quot;&gt;</span><br><span class="line">        &lt;article class=&quot;fl col-7&quot;&gt;</span><br><span class="line">          &lt;section class=&quot;mr30&quot;&gt;</span><br><span class="line">            &lt;el-tabs v-model=&quot;activeName&quot; @tab-click=&quot;handleClick&quot;&gt;</span><br><span class="line">              &lt;el-tab-pane style=&quot;padding-left: 20px&quot; label=&quot;视频介绍&quot; name=&quot;first&quot;&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                  &lt;h6 class=&quot;c-i-content c-infor-title&quot;&gt;</span><br><span class="line">                    &lt;span&gt;课程介绍&lt;/span&gt;</span><br><span class="line">                  &lt;/h6&gt;</span><br><span class="line">                  &lt;div class=&quot;course-txt-body-wrap&quot;&gt;</span><br><span class="line">                    &lt;section class=&quot;course-txt-body&quot; style=&quot;padding: 20px;&quot;&gt;</span><br><span class="line">                      &lt;div v-html=&quot;content.description&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;/section&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/el-tab-pane&gt;</span><br><span class="line">              &lt;el-tab-pane label=&quot;视频目录&quot; name=&quot;second&quot;&gt;</span><br><span class="line">                &lt;div&gt;</span><br><span class="line">                  &lt;div class=&quot;f-cb&quot;&gt;</span><br><span class="line">                    &lt;h2 class=&quot;u-ctit f-thide f-fl&quot;&gt;目录&lt;/h2&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div class=&quot;m-chapterList f-pr&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;chapter&quot; v-for=&quot;(chapter,index) in chapterList&quot; :key=&quot;chapter.id&quot;&gt;</span><br><span class="line">                      &lt;div class=&quot;chapterhead&quot;&gt;</span><br><span class="line">                        &lt;span class=&quot;f-fl f-thide chaptertitle&quot;&gt;章节&#123;&#123; index + 1 &#125;&#125;:&lt;/span&gt;</span><br><span class="line">                        &lt;span class=&quot;f-fl f-thide chaptername&quot;&gt;&#123;&#123; chapter.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;/div&gt;</span><br><span class="line">                      &lt;div&gt;</span><br><span class="line">                        &lt;div class=&quot;section&quot; v-for=&quot;(video,i) in chapter.children&quot; :key=&quot;video.id&quot;&gt;</span><br><span class="line">                          &lt;!--</span><br><span class="line">                          &lt;a  :href=&quot;&#x27;/player/&#x27;+video.videoSourceId+&#x27;_&#x27;+contentId&quot; &gt;</span><br><span class="line">                          --&gt;</span><br><span class="line">                          &lt;a @click=&quot;playClick(video.videoSourceId+&#x27;_&#x27;+contentId,video.isFree,$event)&quot;&gt;</span><br><span class="line">                            &lt;span class=&quot;f-fl f-thide ks&quot;&gt;小节&#123;&#123; i + 1 &#125;&#125;&lt;/span&gt;&lt;span class=&quot;f-fl type-title&quot;&gt;视频&lt;/span&gt;</span><br><span class="line">                            &lt;span class=&quot;f-fl f-thide ksname&quot;&gt;&#123;&#123; video.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">                            &lt;a class=&quot;f-fr ksjbtn j-hovershow&quot; style=&quot;display: none;&quot;&gt;</span><br><span class="line">                              &lt;span class=&quot;f-fr&quot; v-if=&quot;video.isFree === true&quot;&gt;可试看&lt;/span&gt;</span><br><span class="line">                              &lt;div class=&quot;f-fr ksjicon-look&quot;&gt;&lt;/div&gt;</span><br><span class="line">                            &lt;/a&gt;</span><br><span class="line">                            &lt;span class=&quot;f-fr ksinfo j-hoverhide&quot; style=&quot;display: block;&quot;&gt;</span><br><span class="line">                                &lt;span class=&quot;f-fr f-thide kstime&quot;&gt;&#123;&#123; video.duration &#125;&#125;&lt;/span&gt;</span><br><span class="line">                                &lt;span class=&quot;f-fr ksinfoicon ksinfoicon-2&quot; title=&quot;视频&quot;&gt;&lt;/span&gt;</span><br><span class="line">                                &lt;span class=&quot;f-fr canPreview&quot; v-if=&quot;video.isFree === true&quot;&gt;可试看&lt;/span&gt;</span><br><span class="line">                              &lt;/span&gt;</span><br><span class="line">                          &lt;/a&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                      &lt;/div&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/el-tab-pane&gt;</span><br><span class="line">            &lt;/el-tabs&gt;</span><br><span class="line">          &lt;/section&gt;</span><br><span class="line">        &lt;/article&gt;</span><br><span class="line">        &lt;aside class=&quot;fl col-3&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;i-box&quot;&gt;</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">              &lt;section class=&quot;c-infor-tabTitle c-tab-title&quot;&gt;</span><br><span class="line">                &lt;a title href=&quot;javascript:void(0)&quot;&gt;作者&lt;/a&gt;</span><br><span class="line">              &lt;/section&gt;</span><br><span class="line">              &lt;section class=&quot;stud-act-list&quot;&gt;</span><br><span class="line">                &lt;ul style=&quot;height: auto;&quot;&gt;</span><br><span class="line">                  &lt;li&gt;</span><br><span class="line">                    &lt;div class=&quot;u-face&quot;&gt;</span><br><span class="line">                      &lt;a :href=&quot;&#x27;/author/&#x27;+content.authorId&quot;&gt;</span><br><span class="line">                        &lt;img :src=&quot;content.avatar&quot; width=&quot;50&quot; height=&quot;50&quot; alt&gt;</span><br><span class="line">                      &lt;/a&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;section class=&quot;hLh30 txtOf&quot;&gt;</span><br><span class="line">                      &lt;a class=&quot;c-333 fsize16 fl&quot; href=&quot;#&quot;&gt;&#123;&#123; content.authorName &#125;&#125;&lt;/a&gt;</span><br><span class="line">                    &lt;/section&gt;</span><br><span class="line">                    &lt;section class=&quot;hLh20 txtOf&quot;&gt;</span><br><span class="line">                      &lt;span class=&quot;c-999&quot;&gt;&#123;&#123; content.intro &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/section&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">              &lt;/section&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/aside&gt;</span><br><span class="line">        &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import content from &quot;@/api/content&quot;;</span><br><span class="line">import order from &quot;@/api/order&quot;;</span><br><span class="line">import cookie from &#x27;js-cookie&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  async asyncData(app) &#123;</span><br><span class="line">    //在nuxt中如果没有做任何处理, 是不能直接获取到cookie node.js</span><br><span class="line">    let content_id = app.params.id;</span><br><span class="line">    return content.geContentDetailById(content_id, app).then(response =&gt; &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        contentId: content_id,</span><br><span class="line">        content: response.data.content,</span><br><span class="line">        chapterList: response.data.chapterVoList,</span><br><span class="line">        isBuy: response.data.isBuyContent</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      content: &#x27;&#x27;,</span><br><span class="line">      chapterList: &#x27;&#x27;,</span><br><span class="line">      contentId: &#x27;&#x27;,</span><br><span class="line">      activeName: &#x27;second&#x27;,</span><br><span class="line">      value: 4.5,</span><br><span class="line">      isBuy: false</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    playClick(videoId, isFree, e) &#123;</span><br><span class="line">      if (isFree) &#123;</span><br><span class="line">        // nuxt 中 使用到了jquery</span><br><span class="line">        $(e.currentTarget).attr(&#x27;href&#x27;, &#x27;/player/&#x27; + videoId);</span><br><span class="line">        $(e.currentTarget).trigger(&#x27;click&#x27;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        // 有没有登录</span><br><span class="line">        if (this.isLogin()) &#123;</span><br><span class="line">          if (this.isBuy) &#123;</span><br><span class="line">            $(e.currentTarget).attr(&#x27;href&#x27;, &#x27;/player/&#x27; + videoId);</span><br><span class="line">            $(e.currentTarget).trigger(&#x27;click&#x27;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.$message.warning(&quot;购买后才能观看&quot;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.$message.warning(&quot;请先登录...&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleClick(tab, event) &#123;</span><br><span class="line">      this.activeName = tab.paneName;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 生成订单</span><br><span class="line">    createOrders() &#123;</span><br><span class="line">      if (this.isLogin()) &#123;</span><br><span class="line">        order.createOrders(this.contentId)</span><br><span class="line">          .then(response =&gt; &#123;</span><br><span class="line">            // 获取返回订单号</span><br><span class="line">            // 生成订单之后，跳转订单显示页面</span><br><span class="line">            this.$router.push(&#123;path: &#x27;/order/&#x27; + response.data.orderId&#125;);</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.$message.warning(&quot;请先登录...&quot;);</span><br><span class="line">        return;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    isLogin() &#123;</span><br><span class="line">      let user = cookie.get(&#x27;portal_user&#x27;, &#123;domain: &#x27;localhost&#x27;&#125;);</span><br><span class="line">      if (user) &#123;</span><br><span class="line">        return true;</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        false;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">&gt;&gt;&gt; .el-tabs__nav-scroll &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  height: 40px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; .el-tabs__nav:first-child &#123;</span><br><span class="line">  margin-left: 15px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; .el-tab-pane &#123;</span><br><span class="line">  background: white;</span><br><span class="line">  border: 1px solid #f0f0f0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; .el-tab-pane:first-child &#123;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; .el-rate__icon &#123;</span><br><span class="line">  margin-right: -2px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="55-作品展示与播放-作品详情页"><a href="#55-作品展示与播放-作品详情页" class="headerlink" title="55-作品展示与播放-作品详情页"></a>55-作品展示与播放-作品详情页</h2><h4 id="后端-8"><a href="#后端-8" class="headerlink" title="后端"></a>后端</h4><h5 id="创建-VO"><a href="#创建-VO" class="headerlink" title="创建 VO"></a>创建 VO</h5><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175752293-1229354206.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175752293-1229354206.png" alt="img"></a></p><p>ContentWebVO.java</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/5 005 8:49</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContentWebVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作品标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 销售价格</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 合辑视频图</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer contentNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 封面图片路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String cover;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 销售数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long buyCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 浏览数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long viewCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作品简介</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String authorId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者姓名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String authorName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者简介</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String intro;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作者头像</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String avatar;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 作品一级分类ID </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String oneCategoryId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一级类别名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String oneCategoryName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二级分类ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String twoCategoryId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二级分类名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String twoCategoryName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="接口准备-1"><a href="#接口准备-1" class="headerlink" title="接口准备"></a>接口准备</h5><p>修改 ContentController.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175905509-2080562173.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175905509-2080562173.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据作品id获取作品详情信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据作品id获取作品详情信息&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getContentDeatail/&#123;contentId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> String contentId, HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="comment">// 查询作品信息和作者信息</span></span><br><span class="line">    <span class="type">ContentWebVO</span> <span class="variable">contentWebVo</span> <span class="operator">=</span> contentService.selectContentDetailById(contentId);</span><br><span class="line">    <span class="comment">// 查询当前作品的章节信息</span></span><br><span class="line">    List&lt;ChapterVO&gt; chapterVoList = chapterService.getChapterContentVideo(contentId);</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;content&quot;</span>, contentWebVo).data(<span class="string">&quot;chapterVoList&quot;</span>, chapterVoList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentService.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175951667-1370064017.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605175951667-1370064017.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取作品信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment"> *            作品Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 作品信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ContentWebVO <span class="title function_">selectContentDetailById</span><span class="params">(String contentId)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新作品浏览数</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> *            作品ID</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updatePageViewCount</span><span class="params">(String id)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentServiceImpl.java</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ContentWebVO <span class="title function_">selectContentDetailById</span><span class="params">(String contentId)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.updatePageViewCount(contentId);</span><br><span class="line">    <span class="keyword">return</span> baseMapper.getContentDetailById(contentId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新播放信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updatePageViewCount</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">Content</span> <span class="variable">content</span> <span class="operator">=</span> baseMapper.selectById(id);</span><br><span class="line">    content.setViewCount(content.getViewCount() + <span class="number">1</span>);</span><br><span class="line">    baseMapper.updateById(content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 ContentMapper.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182257444-395642040.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182257444-395642040.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取作品信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment"> *            作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 作品信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ContentWebVO <span class="title function_">getContentDetailById</span><span class="params">(String contentId)</span>;</span><br></pre></td></tr></table></figure><p>修改 ContentMapper.xml</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182342373-1454095575.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182342373-1454095575.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getContentDetailById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;top.it6666.common_utils.entity.ContentWebVO&quot;</span>&gt;</span></span><br><span class="line">    SELECT c.id,</span><br><span class="line">           c.title,</span><br><span class="line">           c.cover,</span><br><span class="line">           CONVERT(c.price, DECIMAL(8, 2)) AS price,</span><br><span class="line">           c.content_num                   AS contentNum,</span><br><span class="line">           c.cover,</span><br><span class="line">           c.buy_count                     AS buyCount,</span><br><span class="line">           c.view_count                    AS viewCount,</span><br><span class="line">           cd.description,</span><br><span class="line">           t.id                            AS authorId,</span><br><span class="line">           t.name                          AS authorName,</span><br><span class="line">           t.intro,</span><br><span class="line">           t.avatar,</span><br><span class="line">           s1.id                           AS oneCategoryId,</span><br><span class="line">           s1.title                        AS oneCategoryName,</span><br><span class="line">           s2.id                           AS twoCategoryId,</span><br><span class="line">           s2.title                        AS twoCategoryName</span><br><span class="line">    FROM video_content c</span><br><span class="line">                 LEFT JOIN video_content_description cd ON c.id = cd.id</span><br><span class="line">                 LEFT JOIN video_author t ON c.author_id = t.id</span><br><span class="line">                 LEFT JOIN video_category s1 ON c.category_parent_id = s1.id</span><br><span class="line">                 LEFT JOIN video_category s2 ON c.category_id = s2.id</span><br><span class="line">    WHERE c.id = #&#123;contentId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在紧接着修改 ChapterService.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180300381-628271375.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180300381-628271375.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询当前作品的章节信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment"> *            作品ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 章节信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;ChapterVO&gt; <span class="title function_">getChapterContentVideo</span><span class="params">(String contentId)</span>;</span><br></pre></td></tr></table></figure><p>修改 ChapterServiceImpl.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180341362-1015320856.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180341362-1015320856.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;ChapterVO&gt; <span class="title function_">getChapterContentVideo</span><span class="params">(String contentId)</span> &#123;</span><br><span class="line">    <span class="comment">// 1.根据作品的id查询所有的作品章节</span></span><br><span class="line">    QueryWrapper&lt;Chapter&gt; chapterQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    chapterQueryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, contentId);</span><br><span class="line"></span><br><span class="line">    List&lt;Chapter&gt; chapterList = baseMapper.selectList(chapterQueryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.根据作品的id查询所有的作品小节</span></span><br><span class="line">    QueryWrapper&lt;ContentVideo&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;content_id&quot;</span>, contentId);</span><br><span class="line">    List&lt;ContentVideo&gt; contentVideoList = contentVideoService.list(queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.封装数据</span></span><br><span class="line">    List&lt;ChapterVO&gt; resList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遍历所有的章节信息</span></span><br><span class="line">    chapterList.forEach(chapter -&gt; &#123;</span><br><span class="line">        <span class="comment">// 把章节信息转成ChapterVO</span></span><br><span class="line">        <span class="type">ChapterVO</span> <span class="variable">chapterVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChapterVO</span>();</span><br><span class="line">        BeanUtils.copyProperties(chapter, chapterVO);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// chapterVO封装小节数据</span></span><br><span class="line">        List&lt;ContentVideoVO&gt; children = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        contentVideoList.forEach(contentVideo -&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (contentVideo.getChapterId().equals(chapter.getId())) &#123;</span><br><span class="line">                <span class="comment">// 是当前章节的小节</span></span><br><span class="line">                <span class="type">ContentVideoVO</span> <span class="variable">contentVideoVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentVideoVO</span>();</span><br><span class="line">                BeanUtils.copyProperties(contentVideo, contentVideoVO);</span><br><span class="line">                children.add(contentVideoVO);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        chapterVO.setChildren(children);</span><br><span class="line">        resList.add(chapterVO);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> resList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上后端的内容已经写完了接下来看看前端, 如下图中的链接跳转在上一节的文章当中已经完成了所以在这里只是为了理逻辑, 列表页点击跳转到作品详情页, 是如下的位置进行跳转的</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180642934-1487141581.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605180642934-1487141581.png" alt="img"></a></p><p>前端的内容其实我们在上一节当中已经写完了这里是只来说一下 video 文件夹下的 _id.vue 里面的结构只要分为那几块</p><p>分类信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605181357553-1459712993.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605181357553-1459712993.png" alt="img"></a></p><p>作品信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605181929022-1679971653.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605181929022-1679971653.png" alt="img"></a></p><p>作者信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182006668-758885150.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182006668-758885150.png" alt="img"></a></p><p>目录信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182050478-1214561569.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182050478-1214561569.png" alt="img"></a></p><h2 id="56-作品展示与播放-播放器页面"><a href="#56-作品展示与播放-播放器页面" class="headerlink" title="56-作品展示与播放-播放器页面"></a>56-作品展示与播放-播放器页面</h2><h4 id="后端-9"><a href="#后端-9" class="headerlink" title="后端"></a>后端</h4><p>在返回页面当中, 要有 video_source_id, 修改 ContentVideoVO.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182543093-197183625.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182543093-197183625.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 视频sourcedId</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> String videoSourceId;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 期间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> Float duration;</span><br></pre></td></tr></table></figure><p>新增根据视频 id 获取视频凭证 api 如下图修改 service_vod 微服务</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182653619-2137136062.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182653619-2137136062.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据视频id获取视频凭证</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据视频id获取视频凭证&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;getPlayAuth/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getPlayAuth</span><span class="params">(<span class="meta">@PathVariable</span> String id)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 创建初始化对象</span></span><br><span class="line">        <span class="type">DefaultAcsClient</span> <span class="variable">client</span> <span class="operator">=</span></span><br><span class="line">            ALiYunVodSdkUtils.initVodClient(VodConstant.ACCESS_KEY_ID, VodConstant.ACCESS_KEY_SECRET);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建获取凭证request和response对象</span></span><br><span class="line">        <span class="type">GetVideoPlayAuthRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetVideoPlayAuthRequest</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向request设置视频id</span></span><br><span class="line">        request.setVideoId(id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用方法得到凭证</span></span><br><span class="line">        <span class="type">GetVideoPlayAuthResponse</span> <span class="variable">response</span> <span class="operator">=</span> client.getAcsResponse(request);</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;playAuth&quot;</span>, response.getPlayAuth());</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;获取凭证失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改前端-1"><a href="#修改前端-1" class="headerlink" title="修改前端"></a>修改前端</h4><p>创建 vod.js</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182939868-244018837.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605182939868-244018837.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 请求播放凭证</span></span><br><span class="line">  <span class="title function_">getPlayAuth</span>(<span class="params">vid</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/service_vod/vod/getPlayAuth/<span class="subst">$&#123;vid&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 layout 当中创建 video 布局页面</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183033672-516228720.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183033672-516228720.png" alt="img"></a></p><p>创建 <code>video.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;video_body&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;nuxt/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>在 pages 当中创建 player 文件夹在当中创建 <code>_vid.vue</code> 页面内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605184015410-663144811.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605184015410-663144811.png" alt="img"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    阿里云视频播放器样式</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot;</span><br><span class="line">          href=&quot;https://g.alicdn.com/de/prismplayer/2.8.1/skins/default/aliplayer-min.css&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">    阿里云视频播放器脚本</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;script charset=&quot;utf-8&quot; type=&quot;text/javascript&quot;</span><br><span class="line">            src=&quot;https://g.alicdn.com/de/prismplayer/2.8.1/aliplayer-min.js&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">    播放器页面布局</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class=&quot;video_content&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      左侧播放器</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;div class=&quot;back_button&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--</span><br><span class="line">        视频上方返回链接</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;a :href=&quot;&#x27;/video/&#x27;+contentId&quot;&gt;</span><br><span class="line">          &lt;i class=&quot;el-icon-back&quot; style=&quot;font-size: 25px; color: white; position: absolute; left: 12px; top: 28px;&quot;/&gt;|</span><br><span class="line">          &lt;span&gt;&#123;&#123; content.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/a&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      播放器信息</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;div id=&quot;J_prismPlayer&quot; class=&quot;prism-player&quot;/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--</span><br><span class="line">    右侧目录</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;div class=&quot;catalogue&quot;&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      顶部作品信息</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;div class=&quot;videoPlay_right_top&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;content.cover&quot;&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;p class=&quot;dan&quot;&gt;&#123;&#123; content.title &#125;&#125;&lt;/p&gt;</span><br><span class="line">          &lt;span style=&quot;color:white&quot;&gt;购买人数：&lt;/span&gt;</span><br><span class="line">            &lt;i class=&quot;pinfen_num&quot;&gt;&#123;&#123; content.buyCount &#125;&#125;&lt;/i&gt;</span><br><span class="line">         &lt;/span&gt;</span><br><span class="line">        &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;m-chapterList&quot;&gt;</span><br><span class="line">        &lt;div v-for=&quot;(chapter,index) in chapterList&quot; :key=&quot;chapter.id&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;chapter&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl ch&quot;&gt;章节&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl f-thide chaptericon&quot;&gt;&lt;span&gt;&#123;&#123; index + 1 &#125;&#125;&lt;/span&gt;&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl f-thide chaptername&quot;&gt;&#123;&#123; chapter.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;section&quot;</span><br><span class="line">               :class=&quot;video.videoSourceId == vid?&#x27;video_active&#x27;:&#x27;&#x27;&quot;</span><br><span class="line">               v-for=&quot;video in chapter.children&quot; :key=&quot;video.id&quot;</span><br><span class="line">               @click=&quot;videoClick(video.videoSourceId,video.isFree)&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl f-thide ks&quot; style=&quot;color: rgb(153, 153, 153);&quot;&gt;&amp;nbsp;&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl ksw&quot; style=&quot;background: rgb(245, 247, 250);&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;u-clicon ksicon ksicon-20&quot; title=&quot;进行中&quot;&gt;&lt;/span&gt;&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;f-fl ksname&quot; style=&quot;color: rgb(153, 153, 153);&quot;&gt;&#123;&#123; video.title &#125;&#125;&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;f-fr ksinfo&quot;&gt;&lt;span class=&quot;f-fr ksinfoicon ksinfoicon-2&quot; title=&quot;视频&quot;&gt;&lt;/span&gt;</span><br><span class="line">                &lt;span class=&quot;f-fr kstime&quot;&gt;&#123;&#123; video.duration &#125;&#125;&lt;/span&gt;&lt;span class=&quot;f-fr flag flag-10&quot;&gt;&lt;/span&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import vod from &#x27;@/api/vod&#x27;</span><br><span class="line">import content from &quot;@/api/content&quot;;</span><br><span class="line">import &quot;~/assets/css/video.css&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  // 应用video布局</span><br><span class="line">  layout: &#x27;video&#x27;,</span><br><span class="line">  async asyncData(&#123;params, error&#125;) &#123;</span><br><span class="line"></span><br><span class="line">    // 传入了两个参数,使用_分隔 拆分参数</span><br><span class="line">    let arr = params.vid.split(&quot;_&quot;);</span><br><span class="line">    let vid = arr[0];</span><br><span class="line">    let contentId = arr[1];</span><br><span class="line">    let [request1Data, request2Data] = await Promise.all([</span><br><span class="line">      vod.getPlayAuth(vid),</span><br><span class="line">      content.geContentDetailById(contentId)</span><br><span class="line">    ]);</span><br><span class="line">    return &#123;</span><br><span class="line">      vid: vid,</span><br><span class="line">      playAuth: request1Data.data.playAuth,</span><br><span class="line">      content: request2Data.data.content,</span><br><span class="line">      chapterList: request2Data.data.chapterVoList</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      vid: &#x27;&#x27;,</span><br><span class="line">      contentId: &#x27;&#x27;,</span><br><span class="line">      aliPlayer: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    videoClick(vid) &#123;</span><br><span class="line">      this.vid = vid;</span><br><span class="line">      vod.getPlayAuth(vid).then(response =&gt; &#123;</span><br><span class="line">        this.playAuth = response.data.playAuth;</span><br><span class="line">        this.aliPlayer.replayByVidAndPlayAuth(vid, this.playAuth);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    // 页面渲染之后  created</span><br><span class="line">    this.aliPlayer = new Aliplayer(&#123;</span><br><span class="line">      id: &#x27;J_prismPlayer&#x27;,</span><br><span class="line">      // 视频id</span><br><span class="line">      vid: this.vid,</span><br><span class="line"></span><br><span class="line">      // 播放凭证</span><br><span class="line">      playauth: this.playAuth,</span><br><span class="line"></span><br><span class="line">      // 如果播放加密视频，则需设置encryptType=1，非加密视频无需设置此项</span><br><span class="line">      encryptType: &#x27;1&#x27;,</span><br><span class="line">      width: &#x27;1500px&#x27;,</span><br><span class="line">      height: &#x27;815px&#x27;,</span><br><span class="line"></span><br><span class="line">      // 以下可选设置 清晰度排序</span><br><span class="line">      qualitySort: &#x27;asc&#x27;,</span><br><span class="line"></span><br><span class="line">      // 返回音频还是视频</span><br><span class="line">      mediaType: &#x27;video&#x27;,</span><br><span class="line"></span><br><span class="line">      // 自动播放</span><br><span class="line">      autoplay: false,</span><br><span class="line"></span><br><span class="line">      // 直播</span><br><span class="line">      isLive: false,</span><br><span class="line"></span><br><span class="line">      // 循环播放</span><br><span class="line">      rePlay: false,</span><br><span class="line">      preload: true,</span><br><span class="line"></span><br><span class="line">      // 控制条的显示方式：鼠标悬停</span><br><span class="line">      controlBarVisibility: &#x27;hover&#x27;,</span><br><span class="line"></span><br><span class="line">      // 播放器类型：html5</span><br><span class="line">      useH5Prism: true,</span><br><span class="line">    &#125;, function (player) &#123;</span><br><span class="line">      console.log(&#x27;播放器创建成功&#x27;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h5 id="安装-jquery"><a href="#安装-jquery" class="headerlink" title="安装 jquery"></a>安装 jquery</h5><p>在当前项目中的命令行窗口中输入如下指令进行安装</p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install jquery</span><br></pre></td></tr></table></figure><p>安装好了还需要配置一下配置方式如下所示</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183633201-2042668358.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183633201-2042668358.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183708522-2010452126.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183708522-2010452126.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [</span><br><span class="line">  <span class="keyword">new</span> webpack.<span class="title class_">ProvidePlugin</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;$&#x27;</span> : <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>跳转到播放器页面, 如上安装 jquery 主要是为了在跳转的时候添加一些逻辑不单单只是跳转, 还可能是有一些登录 ,支付的校验等等所以就没有使用跳转标签来跳转了</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183801235-554242704.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183801235-554242704.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183931940-2104284185.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605183931940-2104284185.png" alt="img"></a></p><h2 id="57-支付操作-准备工作"><a href="#57-支付操作-准备工作" class="headerlink" title="57-支付操作-准备工作"></a>57-支付操作-准备工作</h2><h3 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h3><h4 id="订单表"><a href="#订单表" class="headerlink" title="订单表"></a>订单表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `pay_order` (</span><br><span class="line">`id` CHAR ( 19 ) NOT NULL DEFAULT &#x27;主键&#x27;,</span><br><span class="line">`order_no` VARCHAR ( 20 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;订单号&#x27;,</span><br><span class="line">`content_id` VARCHAR ( 19 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;作品id&#x27;,</span><br><span class="line">`content_title` VARCHAR ( 100 ) DEFAULT NULL COMMENT &#x27;作品名称&#x27;,</span><br><span class="line">`content_cover` VARCHAR ( 255 ) DEFAULT NULL COMMENT &#x27;作品封面&#x27;,</span><br><span class="line">`author_name` VARCHAR ( 20 ) DEFAULT NULL COMMENT &#x27;作者名称&#x27;,</span><br><span class="line">`user_id` VARCHAR ( 19 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;用户id&#x27;,</span><br><span class="line">`nickname` VARCHAR ( 50 ) DEFAULT NULL COMMENT &#x27;用户昵称&#x27;,</span><br><span class="line">`mobile` VARCHAR ( 11 ) DEFAULT NULL COMMENT &#x27;用户手机&#x27;,</span><br><span class="line">`total_fee` DECIMAL ( 10, 2 ) DEFAULT &#x27;0.01&#x27; COMMENT &#x27;订单金额（分）&#x27;,</span><br><span class="line">`pay_type` TINYINT ( 3 ) DEFAULT NULL COMMENT &#x27;支付类型（1：微信 2：支付宝）&#x27;,</span><br><span class="line">`status` TINYINT ( 3 ) DEFAULT NULL COMMENT &#x27;订单状态（0：未支付 1：已支付）&#x27;,</span><br><span class="line">`is_deleted` TINYINT ( 1 ) UNSIGNED NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">PRIMARY KEY ( `id` ),</span><br><span class="line">UNIQUE KEY `ux_order_no` ( `order_no` ),</span><br><span class="line">KEY `idx_content_id` ( `content_id` ),</span><br><span class="line">KEY `idx_user_id` ( `user_id` ) </span><br><span class="line">) ENGINE = INNODB DEFAULT CHARSET = utf8mb4 COMMENT = &#x27;订单&#x27;;</span><br></pre></td></tr></table></figure><h4 id="支付日志表"><a href="#支付日志表" class="headerlink" title="支付日志表"></a>支付日志表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `pay_log` (</span><br><span class="line">`id` CHAR ( 19 ) NOT NULL DEFAULT &#x27;主键&#x27;,</span><br><span class="line">`order_no` VARCHAR ( 20 ) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;订单号&#x27;,</span><br><span class="line">`pay_time` datetime DEFAULT NULL COMMENT &#x27;支付完成时间&#x27;,</span><br><span class="line">`total_fee` DECIMAL ( 10, 2 ) DEFAULT &#x27;0.01&#x27; COMMENT &#x27;支付金额（分）&#x27;,</span><br><span class="line">`transaction_id` VARCHAR ( 30 ) DEFAULT NULL COMMENT &#x27;交易流水号&#x27;,</span><br><span class="line">`trade_state` CHAR ( 20 ) DEFAULT NULL COMMENT &#x27;交易状态&#x27;,</span><br><span class="line">`pay_type` TINYINT ( 3 ) NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;支付类型（1：微信 2：支付宝）&#x27;,</span><br><span class="line">`attr` text COMMENT &#x27;其他属性&#x27;,</span><br><span class="line">`is_deleted` TINYINT ( 1 ) UNSIGNED NOT NULL DEFAULT &#x27;0&#x27; COMMENT &#x27;逻辑删除 1（true）已删除， 0（false）未删除&#x27;,</span><br><span class="line">PRIMARY KEY ( `id` ),</span><br><span class="line">UNIQUE KEY `uk_order_no` ( `order_no` ) </span><br><span class="line">) ENGINE = INNODB DEFAULT CHARSET = utf8mb4 COMMENT = &#x27;支付日志表&#x27;;</span><br></pre></td></tr></table></figure><h3 id="创建支付微服务生成相关代码"><a href="#创建支付微服务生成相关代码" class="headerlink" title="创建支付微服务生成相关代码"></a>创建支付微服务生成相关代码</h3><p>创建 <code>service_pay</code> 支付微服务</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605200845600-1198966703.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605200845600-1198966703.png" alt="img"></a></p><p>代码生成器</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerator</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">autoGenerator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置输出路径</span></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Develop\\IdeaPro\\video_parent\\service\\service_pay\\src\\main\\java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;BNTang&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成后是否打开资源管理器</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新生成时文件是否覆盖</span></span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// mp生成service层代码，默认接口名称第一个字母有 I</span></span><br><span class="line">        gc.setControllerName(<span class="string">&quot;%sController&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);</span><br><span class="line">        gc.setServiceImplName(<span class="string">&quot;%sServiceImpl&quot;</span>);</span><br><span class="line">        gc.setMapperName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line">        gc.setXmlName(<span class="string">&quot;%sMapper&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 主键策略</span></span><br><span class="line">        gc.setIdType(IdType.ID_WORKER_STR);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义生成的实体类中日期类型</span></span><br><span class="line">        gc.setDateType(DateType.ONLY_DATE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启Swagger2模式</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>);</span><br><span class="line">        autoGenerator.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        autoGenerator.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模块名</span></span><br><span class="line">        pc.setModuleName(<span class="string">&quot;service_pay&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;top.it6666&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        autoGenerator.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setInclude(<span class="string">&quot;pay_log&quot;</span>, <span class="string">&quot;pay_order&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据库表映射到实体的命名策略 驼峰命名</span></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成实体时去掉表前缀</span></span><br><span class="line">        strategy.setTablePrefix(<span class="string">&quot;_&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// restful api风格控制器</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// url中驼峰转连字符</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        autoGenerator.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        autoGenerator.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 service_pay 微服务当中的 pom.xml 添加 pom 依赖</p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sun.xml.bind<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jaxb-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.activation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    alipay</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alipay.sdk<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>alipay-sdk-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11.8.ALL<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    fastjson</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>紧接着添加启动类</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605201730785-1096740105.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605201730785-1096740105.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;top.it6666&quot;&#125;)</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;top.it6666.service_pay.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PayApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 application.yml</p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8008</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%clr(%5p) %clr(-)&#123;faint&#125; %clr(%-80.80logger&#123;79&#125;)&#123;cyan&#125; %clr(:) %m%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-pay</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/video_db?serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">connection-test-query:</span> <span class="string">SELECT</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">500000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">540000</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">12</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">pool-name:</span> <span class="string">HikariPool</span></span><br><span class="line">  <span class="attr">jackson:</span></span><br><span class="line">    <span class="attr">date-format:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br><span class="line">    <span class="attr">time-zone:</span> <span class="string">GMT+8</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8088</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">top/it6666/service_pay/mapper/xml/*.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>修改 gateway 添加我们刚创建的支付模块的服务转发规则如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605203327201-1278875932.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210605203327201-1278875932.png" alt="img"></a></p><p>yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">id:</span> <span class="string">service-pay</span></span><br><span class="line">  <span class="attr">uri:</span> <span class="string">lb://service-pay</span></span><br><span class="line">  <span class="attr">predicates:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Path=/service_pay/**</span></span><br></pre></td></tr></table></figure><h2 id="58-支付操作-订单接口"><a href="#58-支付操作-订单接口" class="headerlink" title="58-支付操作-订单接口"></a>58-支付操作-订单接口</h2><h3 id="远程数据准备"><a href="#远程数据准备" class="headerlink" title="远程数据准备"></a>远程数据准备</h3><p>在 service_video 工程 ContentController 当中创建根据 <code>作品id</code> 获取作品信息的请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606085547675-1152391343.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606085547675-1152391343.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据作品id查询作品信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据作品id查询作品信息&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/getContentInfoOrder/&#123;contentId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ContentWebVO <span class="title function_">getContentInfoOrder</span><span class="params">(<span class="meta">@PathVariable</span> String contentId)</span> &#123;</span><br><span class="line">    <span class="comment">// 查询作品信息和作者信息</span></span><br><span class="line">    <span class="keyword">return</span> contentService.selectContentDetailById(contentId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 service_user 工程 UserController 当中创建根据 <code>用户id</code> 获取用户信息的请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606085807822-1364867252.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606085807822-1364867252.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户id获取用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据用户id获取用户信息&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/getUserInfoOrderById/&#123;userId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">getUserInfoOrderById</span><span class="params">(<span class="meta">@PathVariable</span> String userId)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> userService.getById(userId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 service_pay 工程当中创建 <code>FeignClient</code> 远程调用接口</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606090147163-1303422883.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606090147163-1303422883.png" alt="img"></a></p><p>创建 ContentClient.java 接口</p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 作品内容远程调用Feign客户端</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 8:59</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;service-video&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ContentClient</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据作品id查询课程信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment">     *            作品Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 课程信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/service_video/content/getContentInfoOrder/&#123;contentId&#125;&quot;)</span></span><br><span class="line">    ContentWebVO <span class="title function_">getContentInfoOrder</span><span class="params">(<span class="meta">@PathVariable(&quot;contentId&quot;)</span> String contentId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在创建第二个 Feign 调用客户端的时候发现需要使用到 service_user 微服务当中的一个 User.java 实体类, 将 User.java 实体类抽取到 common_utils 工程当中去如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606090741390-1483227570.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606090741390-1483227570.png" alt="img"></a></p><p>移动 mybatis-plus 的依赖原本是在 common_base 当中移动到父工程当中也就是 common 的 pom.xml 当中如下图</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606091421884-1131007307.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606091421884-1131007307.png" alt="img"></a></p><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如上的步骤完成了之后我们就可以创建 UserClient.java 接口了内容如下放置的位置和上图中的那个 Feign 位置是一样的</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606091631798-1354200043.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606091631798-1354200043.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 门户系统用户Feign调用客户端</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 9:02</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;service-user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserClient</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户id获取用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     *            用户Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/service_user/user/getUserInfoOrderById/&#123;userId&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">getUserInfoOrderById</span><span class="params">(<span class="meta">@PathVariable(&quot;userId&quot;)</span> String userId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加工具类"><a href="#添加工具类" class="headerlink" title="添加工具类"></a>添加工具类</h3><p>在 common_utils 工程当中添加 UUIDUtil.java 工具类内容如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606092408425-722969396.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606092408425-722969396.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> UUID工具类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 9:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UUIDUtil</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成指定位数的随机字符串 (纯数字)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRandomNumber</span><span class="params">(Integer number)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RandomStringUtils.randomNumeric(number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成随机[a-z]字符串，包含大小写</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRandomString</span><span class="params">(Integer number)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RandomStringUtils.randomAlphabetic(number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成从ASCII 32到126组成的随机字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRandomAscii</span><span class="params">(Integer number)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> RandomStringUtils.randomAscii(number);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成没有 &quot;-&quot; 的uuid随机字符串 (包含字母和数字)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getUuid</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// replace(&quot;-&quot;,&quot;&quot;) : 把 &quot;-&quot; 该为空字符串 &quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 PayOrderController 当中创建根据 <code>作品id</code> 和 <code>用户id</code> 创建订单请求</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606093021264-12039116.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606093021264-12039116.png" alt="img"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 订单 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-06-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_pay/pay-order&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;订单组&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayOrderController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PayOrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据作品id和用户id创建订单，返回订单id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;根据作品id和用户id创建订单，返回订单id&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;createOrder/&#123;contentId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">save</span><span class="params">(<span class="meta">@PathVariable</span> String contentId, HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;orderId&quot;</span>,</span><br><span class="line">            orderService.saveOrder(contentId, JwtUtil.getUserIdByJwtToken(request)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 PayOrderService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 订单 服务类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-06-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PayOrderService</span> <span class="keyword">extends</span> <span class="title class_">IService</span>&lt;PayOrder&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据作品id和用户id创建订单，返回订单id</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment">     *            作品ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">     *            用户Id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 订单号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">saveOrder</span><span class="params">(String contentId, String userId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 PayOrderServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 订单 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-06-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayOrderServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;PayOrderMapper, PayOrder&gt; <span class="keyword">implements</span> <span class="title class_">PayOrderService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserClient userClient;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ContentClient contentClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">saveOrder</span><span class="params">(String contentId, String userId)</span> &#123;</span><br><span class="line">        <span class="comment">// 通过远程调用根据用户id获取用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">userInfo</span> <span class="operator">=</span> userClient.getUserInfoOrderById(userId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过远程调用根据作品id获取作品信息</span></span><br><span class="line">        <span class="type">ContentWebVO</span> <span class="variable">contentInfo</span> <span class="operator">=</span> contentClient.getContentInfoOrder(contentId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建Order对象，向order对象里面设置需要的数据</span></span><br><span class="line">        <span class="type">PayOrder</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayOrder</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订单号</span></span><br><span class="line">        order.setOrderNo(UUIDUtil.getRandomNumber(<span class="number">16</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 课程id</span></span><br><span class="line">        order.setContentId(contentId);</span><br><span class="line">        order.setContentTitle(contentInfo.getTitle());</span><br><span class="line">        order.setContentCover(contentInfo.getCover());</span><br><span class="line">        order.setAuthorName(contentInfo.getAuthorName());</span><br><span class="line">        order.setTotalFee(contentInfo.getPrice());</span><br><span class="line">        order.setUserId(userId);</span><br><span class="line">        order.setMobile(userInfo.getMobile());</span><br><span class="line">        order.setNickname(userInfo.getNickname());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订单状态（0：未支付 1：已支付）</span></span><br><span class="line">        order.setStatus(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 支付类型 ，支付宝2</span></span><br><span class="line">        order.setPayType(<span class="number">2</span>);</span><br><span class="line">        baseMapper.insert(order);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回订单号</span></span><br><span class="line">        <span class="keyword">return</span> order.getOrderNo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 PayOrderController 当中创建根据 <code>订单id</code> 查询订单信息请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据订单id查询订单信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据订单id查询订单信息&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getOrderInfo/&#123;orderNo&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getOrderInfo</span><span class="params">(<span class="meta">@PathVariable</span> String orderNo)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;item&quot;</span>, orderService.getOrderByOrderNo(orderNo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 PayOrderService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据订单id查询订单信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> orderNo</span></span><br><span class="line"><span class="comment"> *            订单Id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 订单信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">PayOrder <span class="title function_">getOrderByOrderNo</span><span class="params">(String orderNo)</span>;</span><br></pre></td></tr></table></figure><p>修改 PayOrderServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PayOrder <span class="title function_">getOrderByOrderNo</span><span class="params">(String orderNo)</span> &#123;</span><br><span class="line">    QueryWrapper&lt;PayOrder&gt; queryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    queryWrapper.eq(<span class="string">&quot;order_no&quot;</span>, orderNo);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.getOne(queryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 PayOrderController 当中创建根据 <code>用户id</code> 和 <code>作品id</code> 查询该用户是否已经购买该作品请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据 `用户id` 和 `作品id` 查询该用户是否已经购买该作品请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据 `用户id` 和 `作品id` 查询该用户是否已经购买该作品请求&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/isBuyContent/&#123;userid&#125;/&#123;contentId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBuyContent</span><span class="params">(<span class="meta">@PathVariable</span> String userid, <span class="meta">@PathVariable</span> String contentId)</span> &#123;</span><br><span class="line">    <span class="comment">// 订单状态 是1表示支付成功</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> orderService</span><br><span class="line">        .count(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;PayOrder&gt;().eq(<span class="string">&quot;user_id&quot;</span>, userid).eq(<span class="string">&quot;content_id&quot;</span>, contentId).eq(<span class="string">&quot;status&quot;</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> count &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="59-支付操作-前端处理"><a href="#59-支付操作-前端处理" class="headerlink" title="59-支付操作-前端处理"></a>59-支付操作-前端处理</h2><h3 id="添加查询该课程有没有支付"><a href="#添加查询该课程有没有支付" class="headerlink" title="添加查询该课程有没有支付"></a>添加查询该课程有没有支付</h3><p>服务器获取作品信息请求 api 修改，首先把对应的 Feign 客户端写完在来修改对应的控制器层，因为这个业务就直接写在 Controller 当中了，没有创建对应的接口方法和在对应的实现类当中完成了，创建 OrderClient.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095536743-929141427.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095536743-929141427.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 订单微服务 Feign 客户端调用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 9:53</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;service-pay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderClient</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 `用户id` 和 `作品id` 查询该用户是否已经购买该作品请求</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userid</span></span><br><span class="line"><span class="comment">     *            用户id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentId</span></span><br><span class="line"><span class="comment">     *            作品id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否购买过该作品</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/service_pay/pay-order/isBuyContent/&#123;userid&#125;/&#123;contentId&#125;&quot;)</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isBuyContent</span><span class="params">(<span class="meta">@PathVariable</span> String userid, <span class="meta">@PathVariable</span> String contentId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上完成了之后就可以修改控制器层了修改 ContentController.java</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095900364-1455312747.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095900364-1455312747.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> OrderClient orderClient;</span><br></pre></td></tr></table></figure><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095946789-1795313837.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606095946789-1795313837.png" alt="img"></a></p><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据作品id获取作品详情信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ApiOperation(value = &quot;根据作品id获取作品详情信息&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/getContentDeatail/&#123;contentId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseResult <span class="title function_">getById</span><span class="params">(<span class="meta">@PathVariable</span> String contentId, HttpServletRequest request)</span> &#123;</span><br><span class="line">    <span class="comment">// 查询作品信息和作者信息</span></span><br><span class="line">    <span class="type">ContentWebVO</span> <span class="variable">contentWebVo</span> <span class="operator">=</span> contentService.selectContentDetailById(contentId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询当前作品的章节信息</span></span><br><span class="line">    List&lt;ChapterVO&gt; chapterVoList = chapterService.getChapterContentVideo(contentId);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">uid</span> <span class="operator">=</span> JwtUtil.getUserIdByJwtToken(request);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isBuy</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (!StringUtils.isEmpty(uid)) &#123;</span><br><span class="line">        <span class="comment">// 查询是否已经付费过了</span></span><br><span class="line">        isBuy = orderClient.isBuyContent(uid, contentId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;content&quot;</span>, contentWebVo).data(<span class="string">&quot;chapterVoList&quot;</span>, chapterVoList)</span><br><span class="line">        .data(<span class="string">&quot;isBuyContent&quot;</span>, isBuy);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前端处理"><a href="#前端处理" class="headerlink" title="前端处理"></a>前端处理</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100144846-925112515.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100144846-925112515.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100216042-609046201.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100216042-609046201.png" alt="img"></a></p><h3 id="安装-cookie-universal-nuxt"><a href="#安装-cookie-universal-nuxt" class="headerlink" title="安装 cookie-universal-nuxt"></a>安装 cookie-universal-nuxt</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100348418-1903258685.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100348418-1903258685.png" alt="img"></a></p><p>sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install cookie-universal-nuxt</span><br></pre></td></tr></table></figure><p>配置 cookie-universal-nuxt 修改 <code>nuxt.config.js</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100513369-1637580868.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606100513369-1637580868.png" alt="img"></a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">modules</span>: [</span><br><span class="line">  <span class="string">&#x27;cookie-universal-nuxt&#x27;</span>, [<span class="string">&#x27;cookie-universal-nuxt&#x27;</span>, &#123;<span class="attr">parseJSON</span>: <span class="literal">true</span>&#125;],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h4 id="详情页请求"><a href="#详情页请求" class="headerlink" title="详情页请求"></a>详情页请求</h4><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606143306496-1573950269.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606143306496-1573950269.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145138115-569052278.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145138115-569052278.png" alt="img"></a></p><h3 id="处理播放状态"><a href="#处理播放状态" class="headerlink" title="处理播放状态"></a>处理播放状态</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145324040-541837289.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145324040-541837289.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145405724-659978273.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145405724-659978273.png" alt="img"></a></p><p>如上的代码呢，前面的文章当中已经加入进去了所以不在贴出来了，创建 <code>order.js</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145614421-1762136672.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145614421-1762136672.png" alt="img"></a></p><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 生成订单</span></span><br><span class="line">  <span class="title function_">createOrders</span>(<span class="params">contentId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/service_pay/pay-order/createOrder/&#x27;</span> + contentId,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据 `订单id` 查询订单信息</span></span><br><span class="line">  <span class="title function_">getOrdersInfo</span>(<span class="params">orderId</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/service_pay/pay-order/getOrderInfo/&#x27;</span> + orderId,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 支付接口</span></span><br><span class="line">  <span class="title function_">aliPay</span>(<span class="params">orderNo</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/service_pay/pay-log/aliPay/&#x27;</span> + orderNo,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建订单点击"><a href="#创建订单点击" class="headerlink" title="创建订单点击"></a>创建订单点击</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145719576-113472665.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145719576-113472665.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145759413-1547240022.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606145759413-1547240022.png" alt="img"></a></p><h3 id="创建订单页面"><a href="#创建订单页面" class="headerlink" title="创建订单页面"></a>创建订单页面</h3><p>在 pages 下创建 order 文件夹在该文件夹中创建 _oid.vue 内容如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;order&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;um-order-ux-order-v2-ct-top&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;um-order-ux-order-v2-ct-top-title&quot;&gt;</span><br><span class="line">        &lt;h1&gt;确认订单信息&lt;/h1&gt;</span><br><span class="line">        &lt;h4&gt;请在2小时内完成支付，否则订单会被自动取消&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;um-order-ux-order-account f-cb&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-account_avatar f-fl&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;loginInfo.avatar&quot;&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-account_info f-fl&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;um-order-ux-order-account_info_nickName&quot;&gt;购买帐号：&#123;&#123; loginInfo.nickname &#125;&#125;&lt;/div&gt;</span><br><span class="line">          &lt;!--Regular if16--&gt;</span><br><span class="line">          &lt;div class=&quot;um-order-ux-order-account_info_tips&quot;&gt;注意：购买后不支持退款、转让，请确认开课时间或有效期后再提交订单&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;um-order-ux-order-v2-pay-method&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-v2-pay-method_head&quot;&gt;支付方式&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-v2-pay-method_body&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;order-v2-pay_current f-cb&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;order-v2-pay_current_icon current_icon_alipay f-fl&quot;&gt;&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;order-v2-pay_current_type f-fl&quot;&gt;支付宝&lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;um-order-ux-order-school-list&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-school-list_title&quot;&gt;购买课程&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-school-list_list&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;um-order-ux-order-school&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;um-order-ux-order-school_courselist&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;um-order-ux-order-course&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;um-order-ux-order-course_card f-cb&quot;&gt;</span><br><span class="line">                  &lt;div class=&quot;um-order-ux-order-course_card_img f-fl&quot;&gt;</span><br><span class="line">                    &lt;a class=&quot;&quot;&gt;</span><br><span class="line">                      &lt;img width=&quot;150px&quot; height=&quot;80px&quot; :src=&quot;order.contentCover&quot;&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div class=&quot;um-order-ux-order-course_card_body f-fl&quot;&gt;</span><br><span class="line">                    &lt;a class=&quot;title&quot;&gt;</span><br><span class="line">                      &lt;span&gt;&#123;&#123; order.contentTitle &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;div class=&quot;time&quot;&gt;永久可看&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;promotion&quot;&gt;&lt;/div&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  &lt;div class=&quot;um-order-ux-order-course_card_price f-fr&quot;&gt;￥&#123;&#123; order.totalFee &#125;&#125;&lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;um-order-ux-order-v2-ct-bottom um-order-ux-order-v2-ct-bottom_fixed&quot; style=&quot;left: 471.5px;&quot;&gt;</span><br><span class="line">      &lt;!--Regular if47--&gt;</span><br><span class="line">      &lt;div class=&quot;um-order-ux-order-v2-go-pay f-cb f-pr&quot;&gt;</span><br><span class="line">        &lt;form action=&quot;/pay/orderRedirectPage.htm&quot; name=&quot;payForm&quot;&gt;</span><br><span class="line">          &lt;input type=&quot;hidden&quot; name=&quot;orderUrl&quot;&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-v2-go-pay_protocol f-pa&quot;&gt;</span><br><span class="line">          提交订单则表示您同意</span><br><span class="line">          &lt;span class=&quot;um-order-ux-order-v2-go-pay_protocol_btn&quot;&gt;《BNTang 用户服务协议》&lt;/span&gt;、</span><br><span class="line">          &lt;span class=&quot;um-order-ux-order-v2-go-pay_protocol_btn&quot;&gt;《BNTang 售后政策》&lt;/span&gt;等</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;um-order-ux-order-v2-go-pay_content f-fr&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;um-order-ux-order-v2-go-pay_content_price&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;v2-go-pay_content_price_title&quot;&gt;实付:&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;v2-go-pay_content_price_account&quot;&gt;</span><br><span class="line">                &lt;span class=&quot;v2-go-pay_content_price_account_icon&quot;&gt;￥&lt;/span&gt;&#123;&#123; order.totalFee &#125;&#125;</span><br><span class="line">            &lt;/span&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;a class=&quot;um-order-ux-order-v2-go-pay_content_btn&quot; @click=&quot;payClick&quot;&gt;立即支付&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#x27;assets/css/order.css&#x27;</span><br><span class="line">import cookie from &quot;js-cookie&quot;;</span><br><span class="line">import order from &quot;@/api/order&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  layout: &#x27;default&#x27;,</span><br><span class="line">  asyncData(&#123;params, error&#125;) &#123;</span><br><span class="line">    return order.getOrdersInfo(params.oid).then(response =&gt; &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        order: response.data.item</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.showInfo();</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      loginInfo: &#123;</span><br><span class="line">        avatar: &#x27;&#x27;,</span><br><span class="line">        nickname: &#x27;&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    showInfo() &#123;</span><br><span class="line">      let jsonStr = cookie.get(&quot;portal_user&quot;);</span><br><span class="line">      if (jsonStr) &#123;</span><br><span class="line">        this.loginInfo = JSON.parse(jsonStr);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    payClick() &#123;</span><br><span class="line">      order.aliPay(this.order.orderNo).then(response =&gt; &#123;</span><br><span class="line">        // 支付的时候, 支付宝会给我们返回支付页面</span><br><span class="line">        $(&#x27;body&#x27;).html(response.data.form);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="订单页加载数据"><a href="#订单页加载数据" class="headerlink" title="订单页加载数据"></a>订单页加载数据</h3><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606150215832-448727924.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606150215832-448727924.png" alt="img"></a></p><h2 id="60-支付操作-支付与支付日志接口"><a href="#60-支付操作-支付与支付日志接口" class="headerlink" title="60-支付操作-支付与支付日志接口"></a>60-支付操作-支付与支付日志接口</h2><h3 id="Java-中支付宝准备工作"><a href="#Java-中支付宝准备工作" class="headerlink" title="Java 中支付宝准备工作"></a>Java 中支付宝准备工作</h3><p>支付宝加密处理与回调方式</p><h4 id="加密处理"><a href="#加密处理" class="headerlink" title="加密处理"></a>加密处理</h4><ul><li>网站以 POST 请求的方式提交参数给支付宝接口，在支付宝端进行支付处理</li><li>POST 请求方式一定程度下保证了安全性，即在 url 上看不到参数，但可以在浏览器开发者工具中可以看到参数，为防止篡改，则可以采用一些加密协议，如：HTTPS、加签名、加密手段 (MD5 加盐、base64、DES、sha1) 等</li><li>在加密中又可以分为对称加密 (base64、des 等) 与非对称加密 (RSA 公钥与私钥的互换)</li><li>在支付宝中主要使用加签名和 RSA 非对称加密</li></ul><h4 id="回调"><a href="#回调" class="headerlink" title="回调"></a>回调</h4><p>在支付宝接口中，把支付的结果通知给网站 (成功 &#x2F; 失败) 以便更新订单的状态信息, 两种回调方式</p><h4 id="同步回调"><a href="#同步回调" class="headerlink" title="同步回调"></a>同步回调</h4><ul><li>当 A 网站以 POST 请求方式将参数提交给支付宝接口，支付宝会同步返回通知给 A 网站</li><li>同步通知实际上是：本地浏览器的重定向操作，告知 A 网站支付成功还是失败，跳转到指定结果页面 &#x2F; 不做订单处理</li><li>因为有可能用户刚支付完, 不等待, 就关闭掉页面, 此方法可能调用不到</li></ul><h4 id="异步回调"><a href="#异步回调" class="headerlink" title="异步回调"></a>异步回调</h4><ul><li>为了安全性考虑，一般需要进行订单状态的更改时，使用异步通知</li><li>此回调是支付宝服务器发送过来的请求</li><li>支付宝服务器使用 httpclient 技术调用网站的接口进行通知，网站解析报文，判断到底是支付成功还是支付失败</li><li>异步通知包含补偿机制，即：支付宝把结果异步通知给 A 网站，若 A 网站未及时响应给支付宝，则支付宝会进行补偿重发</li><li>要返回 success 后, 支付宝才不会继续发送</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>同步回调: 整个支付流程完毕，使用同步方式将参数重定向给商户平台，一般场景用于展示结果</li><li>异步回调: 第三方支付接口发一个后台通知给商户平台，一般场景用户修改订单信息</li></ul><h3 id="支付宝开发环境"><a href="#支付宝开发环境" class="headerlink" title="支付宝开发环境"></a>支付宝开发环境</h3><h4 id="使用支付宝沙箱"><a href="#使用支付宝沙箱" class="headerlink" title="使用支付宝沙箱"></a>使用支付宝沙箱</h4><p><a href="https://open.alipay.com/platform/home.htm">https://open.alipay.com/platform/home.htm</a></p><p>初次访问需要进行认证，选择自研开发者，自行入驻</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606151657258-823790811.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606151657258-823790811.png" alt="img"></a></p><p>找到开发服务中的沙箱，进入到沙箱环境中，配置相应的信息</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152001530-1263380232.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152001530-1263380232.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152019588-2142711972.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152019588-2142711972.png" alt="img"></a></p><p>下载支付宝官方的签名验签工具，下载地址：<a href="https://docs.open.alipay.com/291/105971">https://docs.open.alipay.com/291/105971</a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152225762-943662152.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152225762-943662152.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152925828-1954884465.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606152925828-1954884465.png" alt="img"></a></p><p>安装完成后, 进入到该应用当中生成密钥，密钥长度选择 <code>RSA2</code>，密钥格式选择 <code>PKCS8</code> (Java 适用) 保存应用私钥, 代码当中需要填写应用 <code>应用私钥</code></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606154827580-1219145899.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606154827580-1219145899.png" alt="img"></a></p><p>复制应用公钥上传到沙盒环境中, 使用应用公钥换取支付宝公钥</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165053684-1385693373.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165053684-1385693373.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165029062-588335346.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165029062-588335346.png" alt="img"></a></p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165114348-1152412556.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606165114348-1152412556.png" alt="img"></a></p><h4 id="加密方式"><a href="#加密方式" class="headerlink" title="加密方式"></a>加密方式</h4><p>在支付领域，数据安全肯定是首要的任务，加密种类可分为：单向加密、对称加密、非对称加密</p><p>最安全的肯定是 <code>RSA</code>：公钥与私钥的互换，效率不如 <code>单向加密</code> 和 <code>对称加密高</code>，但安全性很好，要想破解，必须知道公钥和私钥两把密钥，属于非对称加密</p><h5 id="单向加密"><a href="#单向加密" class="headerlink" title="单向加密"></a>单向加密</h5><p>如 MD5、SHA 等不可逆【不能解密，只能加密】主要用来验证数据传输的过程中，是否被篡改过</p><h6 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h6><ul><li>一方通过密钥将信息加密后，把密文传给另一方，另一方通过这个相同的密钥将密文解密，转换成可以理解的明文</li><li>明文 ←→ 密钥 ←→ 密文【可以加密，又可以解密】</li><li>常用对称加密方案 DES、AES、Base64</li></ul><h6 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h6><ul><li>在支付领域一般都使用 RSA 非对称加密</li></ul><p>在通信双方，如果使用非对称加密，一般遵从这样的原则：</p><ul><li>公钥加密，私钥解密。同时，一般一个密钥加密，另一个密钥就可以解密</li><li>因为公钥是公开的，如果用来解密，那么就很容易被人解密消息。因此，私钥也可以认为是个人身份的证明</li></ul><h4 id="配置文件准备"><a href="#配置文件准备" class="headerlink" title="配置文件准备"></a>配置文件准备</h4><p>修改 service_pay 工程当中的 application.yml</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606180749357-1426374722.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606180749357-1426374722.png" alt="img"></a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pay:</span></span><br><span class="line">  <span class="attr">alibaba:</span></span><br><span class="line">    <span class="comment"># appid</span></span><br><span class="line">    <span class="attr">APPID:</span> <span class="number">2021000116684996</span></span><br><span class="line">    <span class="comment"># 私有秘钥</span></span><br><span class="line">    <span class="attr">privateKey:</span> <span class="string">MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDK5cQ70nCqc5tmqHmBetBaDqj0VKo3s5cJMlCKWVE5ijeQdD7QBUEWoH+IFPSLqIK675njKsC+5WZOgOsqru4Ofh4s3pw7Pi598K0qEIjMxtRSm9P0q4c/CcvDpqApHcqO5NaLY1q7TWxm0RG3Hd7wf9ZNIxezvVbWOrSJiGmS76gDMPQKisyc7wZnxPHzBmFEp1oWY0e4MKlii2BBMmJrIx4vm8g1ufUksD4ymlp8kgP8vArEvdVNo1F2HVXTJ5g1YKWnp5dQqEO3rkAOsChMr7R4YLpXg+q9topCFXJiXh0RR3NnNGKfnGkNOt0WoF2uELz4zgtt0hbwzRCk1vsrAgMBAAECggEAcPbL8qKPp9cFxno2bCh8qCdRWfdpbenHRY+F2AEyf968YOjXr+m8+2QQnStNnBQN9RZBj4DWH3KJK1wLkpAial89Xa3zPei46dV+E9Vw1NI+lF+9+pMlkataj2vN8BZuGHDAIosGkRHiMLxmKJWw8iW6oufO4nugRVYZ/hi87tkR4IYm7mz1HGKbK0osuhCoeXfzT5wLhC7o/1EbQEMj+m+/iHhMhszuqu7rl6jKdwsXSNdeEK7d7IL0btLJ1SUTku8u4WMstTn5zd1F3d2TRcsJBJJv8fiBoWzbnzMsYsAV7sv1KkaZ0awMvRQm3ngzaWnR4wfXUjcPOsBkfjRwgQKBgQDlgeZ+SVvR7sEz9bSLEXdS2hOcmTqegawgkuqpps1eIGiejxuv7HQ2M+0OKWN1kHkhhZD/xsMJEhW2zVB+AMrPRG31fz7oASX4NkVr+2OXIvzn7md5O9DybMZQ4dzL7HFn++QoU3xQT2WBsx9SLUBJIW9RIAtM1dSjilzjHZ0zSQKBgQDiUYaTseOvy9ELp6D801IVXHxp3HgBDT8fshb1AgSr2eKPZbxJAv1qIcd2tg7cKt2Rq27MEnzpkFtAKyKLxMl/+YQoxePJdqOyq4MR9mzVKpu9G0PRGhF23xCv1WzS/BhtIp7t+RaBnQM4j7Qgh9TQOu1znU8ar3aCQulrcoIG0wKBgDaYbiJAhS0tZJxdqLMkVoRJCD1KXh1yr2WYTWZKHbR0dS6y0F1LHGIAfDXQNq6yzX3h7hpKR/8SZEP2F13CBnzDxHyP5oD+NPAUyPLk/E3prsvldIvsZMomgg6fjAyelGOuEhpdscbQ/E6cM6kyxoYfBAICY23FuC2nLm2Aj/KxAoGAFT6h62tffDkdvoJV0mXj5q1v4GAZw7+ClW8aSJWP6rHhWqSqMBBfyX6yQqqEapZ7hhkZpX52y1YJutRRwd0PLTw287zfzSGd7D+9ZgpD3R7Kz82naBGSYh4+asMWHBgeEuCVGrGvMyuSCdUzi3o0t/dQIvI5Yr/l2AR/9N4i5pECgYADoJF6TQbk6w/GxQt9bl7NXv6UjiPslEpeBJOQz6+njXvf/ByDgGM//dpUK5VTUo7dyzBnSefVvr63PdhNjwS4FBcjTXTWSuyhvXG84XMM7he2R4OlbkDdYLe3byDUT5Go1K9h3juXahiejexiwcTKOhZnk/5aFr/Cvtdm69cKMw==</span></span><br><span class="line">    <span class="comment"># 支付宝公有密钥</span></span><br><span class="line">    <span class="attr">publvicKey:</span> <span class="string">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgvMKvBii086mbtIhCAa8fMYGchJMrosUP6gCUKEFYz27BHGyGY5Rbmakl+l6mk2UilOuqNNqdy/evOLD05j46ro0QXo8q0IG7/0KW7ndd344JhlfUJP5OaT1bI6gwy2lalXMK605/DsjyK9mWWj5Wfxuyjz26mjFTd6OWXUMD0MF/F77sMb3o0kF0MeJP7rQYivYunaPvP985PO4zwYlnwGC9FX7jIpGRS3wrYG20Jcq0nLlzyTaqSNvP2Fk0z6jsFvo7loSAtrIa9ux+/zcXsrQquUidEoRxeb5X2tCDkfFgrQVM6YmAxj80Q2VksiOvk4sZhkdoc0273wnKlgfDQIDAQAB</span></span><br><span class="line">    <span class="comment"># 支付宝服务地址</span></span><br><span class="line">    <span class="attr">serverUrl:</span> <span class="string">https://openapi.alipaydev.com/gateway.do</span></span><br><span class="line">    <span class="comment"># 回调地址, 注意这里服务器回调一定要公网ip</span></span><br><span class="line">    <span class="attr">returnUrl:</span> <span class="string">http://it6666.viphk.ngrok.org/callback/returnUrl</span></span><br><span class="line">    <span class="attr">notyfyUrl:</span> <span class="string">http://it6666.viphk.ngrok.org/callback/notifyUrl</span></span><br></pre></td></tr></table></figure><p>APPID</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191120045-1281196203.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191120045-1281196203.png" alt="img"></a></p><p>privateKey</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191246749-1486394025.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191246749-1486394025.png" alt="img"></a></p><p>publvicKey</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191341658-71722528.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191341658-71722528.png" alt="img"></a></p><p>serverUrl</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191353854-701182748.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606191353854-701182748.png" alt="img"></a></p><p>创建 common 包在该包中创建 config 包和 properties 包，在每个包中创建对应的类分别如下</p><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606181816837-550660427.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606181816837-550660427.png" alt="img"></a></p><p>创建 AliPayProperties.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 18:14</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;pay.alibaba&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliPayProperties</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String privateKey;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 公钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String publvicKey;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支付宝服务地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String serverUrl;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回调地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String returnUrl;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异步回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String notyfyUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 AliPayApiConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 阿里支付Api配置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 18:08</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliPayApiConfig</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AliPayProperties aliPayProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">JSON</span> <span class="operator">=</span> <span class="string">&quot;json&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">RSA2</span> <span class="operator">=</span> <span class="string">&quot;RSA2&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取阿里支付客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> AlipayClient <span class="title function_">getAliPayClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultAlipayClient</span>(aliPayProperties.getServerUrl(), aliPayProperties.getAppId(),</span><br><span class="line">            aliPayProperties.getPrivateKey(), JSON, CHARSET, aliPayProperties.getPublvicKey(), RSA2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p><a href="http://www.ngrok.cc/">http://www.ngrok.cc</a></p><h4 id="什么是内网穿透"><a href="#什么是内网穿透" class="headerlink" title="什么是内网穿透"></a>什么是内网穿透</h4><ul><li>通常个人电脑无论是连接 WIFI 上网还是用网线上网，都是属于局域网里边的，外网无法直接访问到你的电脑</li><li>内网穿透可以让你的局域网中的电脑实现外网访问功能, 针对上面这句话中出现的内网和外网</li></ul><h3 id="支付接口业务"><a href="#支付接口业务" class="headerlink" title="支付接口业务"></a>支付接口业务</h3><h4 id="支付接口"><a href="#支付接口" class="headerlink" title="支付接口"></a>支付接口</h4><p>PayLogController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 支付日志表 前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-06-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/service_pay/pay-log&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayLogController</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PayLogService payService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单支付</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orderNo</span></span><br><span class="line"><span class="comment">     *            订单号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 支付页面</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/aliPay/&#123;orderNo&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseResult <span class="title function_">aliPay</span><span class="params">(<span class="meta">@PathVariable</span> String orderNo)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseResult.ok().data(<span class="string">&quot;form&quot;</span>, payService.aliPay(orderNo));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PayLogService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 支付日志表 服务实现类</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2021-06-05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayLogServiceImpl</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;PayLogMapper, PayLog&gt; <span class="keyword">implements</span> <span class="title class_">PayLogService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交易多长时间后关闭</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">EXPIRE</span> <span class="operator">=</span> <span class="string">&quot;30m&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AliPayProperties aliPayProperties;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AliPayApiConfig aliPayApiConfig;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PayOrderService payOrderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">aliPay</span><span class="params">(String orderNo)</span> &#123;</span><br><span class="line">        <span class="comment">// 1 根据订单号查询订单信息</span></span><br><span class="line">        QueryWrapper&lt;PayOrder&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;order_no&quot;</span>, orderNo);</span><br><span class="line">        <span class="type">PayOrder</span> <span class="variable">order</span> <span class="operator">=</span> payOrderService.getOne(wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 支付内容参数</span></span><br><span class="line">        <span class="type">AlipayTradePagePayModel</span> <span class="variable">model</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePagePayModel</span>();</span><br><span class="line">        model.setOutTradeNo(order.getOrderNo());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 销售产品码 电脑网站支付固定为 FAST_INSTANT_TRADE_PAY</span></span><br><span class="line">        model.setProductCode(<span class="string">&quot;FAST_INSTANT_TRADE_PAY&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 商品金额</span></span><br><span class="line">        model.setTotalAmount(order.getTotalFee().toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 商品标题</span></span><br><span class="line">        model.setSubject(order.getContentTitle());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        model.setBody(<span class="string">&quot;支付宝支付，共&quot;</span> + order.getTotalFee() + <span class="string">&quot;元&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置订单最晚付款时间 过期交易将关闭</span></span><br><span class="line">        model.setTimeoutExpress(EXPIRE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建请求</span></span><br><span class="line">        <span class="type">AlipayTradePagePayRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlipayTradePagePayRequest</span>();</span><br><span class="line">        request.setReturnUrl(aliPayProperties.getReturnUrl());</span><br><span class="line">        request.setNotifyUrl(aliPayProperties.getNotyfyUrl());</span><br><span class="line">        request.setBizModel(model);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发起请求</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">form</span> <span class="operator">=</span> aliPayApiConfig.getAliPayClient().pageExecute(request).getBody();</span><br><span class="line">            <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ServletUtils.getResponse();</span><br><span class="line">            response.setContentType(<span class="string">&quot;text/html;charset=&quot;</span> + CHARSET);</span><br><span class="line">            <span class="keyword">return</span> form;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AlipayApiException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BnTangException</span>(<span class="number">20001</span>, <span class="string">&quot;支付宝电脑网站支付失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="回调接口"><a href="#回调接口" class="headerlink" title="回调接口"></a>回调接口</h4><p>创建 AliPayCallBackUrl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> BNTang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@project</span> video_parent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 支付宝回调控制器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> Created in 2021/6/6 006 18:27</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/callback&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;支付&quot;)</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliPayCallBackUrl</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CHARSET</span> <span class="operator">=</span> <span class="string">&quot;UTF-8&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 支付日志</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PayLogService payLogService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> PayOrderService payOrderService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AliPayProperties aliPayProperties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只有付款成功才会跳转到这里且只跳转一次 浏览器调用 重定向形式,不做跟订单相关的事 页面跳转</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ApiOperation(value = &quot;只有付款成功才会跳转到这里且只跳转一次 浏览器调用 重定向形式&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/returnUrl&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">returnUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ServletUtils.getResponse();</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ServletUtils.getRequest();</span><br><span class="line"></span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=&quot;</span> + CHARSET);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取支付宝GET过来反馈信息</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">signVerified</span> <span class="operator">=</span> checkSignature(request);</span><br><span class="line">            <span class="keyword">if</span> (signVerified) &#123;</span><br><span class="line">                <span class="comment">// 跳转到作品详情页 哪一个作品?</span></span><br><span class="line">                <span class="comment">// 商户订单号</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">outTradeNo</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>(request.getParameter(<span class="string">&quot;out_trade_no&quot;</span>).getBytes(StandardCharsets.ISO_8859_1), CHARSET);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取订单</span></span><br><span class="line">                <span class="type">PayOrder</span> <span class="variable">payOrder</span> <span class="operator">=</span> payOrderService.getOrderByOrderNo(outTradeNo);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 获取作品id</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://localhost:3000/video/&quot;</span> + payOrder.getContentId();</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;redirect:&quot;</span> + url;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AlipayApiException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 服务器通知 : 1. ip地址一定是公网的，私有地址支付宝无法通知到客户端 2. 请求方式是POST请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/notifyUrl&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">notifyUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 支付宝调用 return success 如果没有返回 还会继续调用</span></span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> ServletUtils.getResponse();</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> ServletUtils.getRequest();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> response.getWriter();</span><br><span class="line"></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">signVerified</span> <span class="operator">=</span> <span class="built_in">this</span>.checkSignature(request);</span><br><span class="line">            <span class="keyword">if</span> (signVerified) &#123;</span><br><span class="line">                <span class="comment">// 以下信息是支付定在请求当中写入信息</span></span><br><span class="line">                <span class="comment">// 商户订单号</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">outTradeNo</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>(request.getParameter(<span class="string">&quot;out_trade_no&quot;</span>).getBytes(StandardCharsets.ISO_8859_1), CHARSET);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 支付宝交易号</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">transactionId</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>(request.getParameter(<span class="string">&quot;trade_no&quot;</span>).getBytes(StandardCharsets.ISO_8859_1), CHARSET);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 交易状态</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">tradeStatus</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">String</span>(request.getParameter(<span class="string">&quot;trade_status&quot;</span>).getBytes(StandardCharsets.ISO_8859_1), CHARSET);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 更新订单</span></span><br><span class="line">                HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">                map.put(<span class="string">&quot;out_trade_no&quot;</span>, outTradeNo);</span><br><span class="line">                map.put(<span class="string">&quot;trade_state&quot;</span>, tradeStatus);</span><br><span class="line">                map.put(<span class="string">&quot;transaction_id&quot;</span>, transactionId);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;TRADE_FINISHED&quot;</span>.equals(tradeStatus)) &#123;</span><br><span class="line">                    <span class="comment">// 判断该笔订单是否在商户网站中已经做过处理</span></span><br><span class="line">                    <span class="comment">// 如果没有做过处理，根据订单号（out_trade_no）在商户网站的订单系统中查到该笔订单的详细，</span></span><br><span class="line">                    <span class="comment">// 并执行商户的业务程序</span></span><br><span class="line">                    <span class="comment">// 如果有做过处理，不执行商户的业务程序</span></span><br><span class="line">                    <span class="type">PayOrder</span> <span class="variable">payOrder</span> <span class="operator">=</span> payOrderService.getOrderByOrderNo(outTradeNo);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (payOrder.getStatus() != <span class="number">1</span>) &#123;</span><br><span class="line">                        payLogService.updateOrdersStatus(map);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;TRADE_SUCCESS&quot;</span>.equals(tradeStatus)) &#123;</span><br><span class="line">                    payLogService.updateOrdersStatus(map);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                out.println(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                out.println(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (AlipayApiException | IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">checkSignature</span><span class="params">(HttpServletRequest request)</span> <span class="keyword">throws</span> AlipayApiException &#123;</span><br><span class="line">        Map&lt;String, String&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Map&lt;String, String[]&gt; requestParams = request.getParameterMap();</span><br><span class="line"></span><br><span class="line">        requestParams.keySet().forEach(name -&gt; &#123;</span><br><span class="line">            String[] values = requestParams.get(name);</span><br><span class="line">            <span class="type">String</span> <span class="variable">valueStr</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; values.length; i++) &#123;</span><br><span class="line">                valueStr = (i == values.length - <span class="number">1</span>) ? valueStr + values[i] : valueStr + values[i] + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 乱码解决，这段代码在出现乱码时使用</span></span><br><span class="line">            <span class="comment">// valueStr = new String(valueStr.getBytes(&quot;ISO-8859-1&quot;), &quot;utf-8&quot;);</span></span><br><span class="line">            params.put(name, valueStr);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> AlipaySignature.rsaCheckV1(params, aliPayProperties.getPublvicKey(), CHARSET, <span class="string">&quot;RSA2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 PayLogService.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 更新订单状态</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment"> *            订单属性Map</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">updateOrdersStatus</span><span class="params">(HashMap&lt;String, String&gt; map)</span>;</span><br></pre></td></tr></table></figure><p>修改 PayLogServiceImpl.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateOrdersStatus</span><span class="params">(HashMap&lt;String, String&gt; map)</span> &#123;</span><br><span class="line">    <span class="comment">// 从map获取订单号</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">orderNo</span> <span class="operator">=</span> map.get(<span class="string">&quot;out_trade_no&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据订单号查询订单信息</span></span><br><span class="line">    QueryWrapper&lt;PayOrder&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    wrapper.eq(<span class="string">&quot;order_no&quot;</span>, orderNo);</span><br><span class="line">    <span class="type">PayOrder</span> <span class="variable">order</span> <span class="operator">=</span> payOrderService.getOne(wrapper);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新订单表订单状态</span></span><br><span class="line">    <span class="keyword">if</span> (order.getStatus() == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1代表已经支付</span></span><br><span class="line">    order.setStatus(<span class="number">1</span>);</span><br><span class="line">    payOrderService.updateById(order);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向支付表添加支付记录</span></span><br><span class="line">    <span class="type">PayLog</span> <span class="variable">payLog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayLog</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订单号</span></span><br><span class="line">    payLog.setOrderNo(orderNo);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订单完成时间</span></span><br><span class="line">    payLog.setPayTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付类型 1微信</span></span><br><span class="line">    payLog.setPayType(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 总金额(分)</span></span><br><span class="line">    payLog.setTotalFee(order.getTotalFee());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支付状态</span></span><br><span class="line">    payLog.setTradeState(map.get(<span class="string">&quot;trade_state&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 流水号</span></span><br><span class="line">    payLog.setTransactionId(map.get(<span class="string">&quot;transaction_id&quot;</span>));</span><br><span class="line">    payLog.setAttr(JSONObject.toJSONString(map));</span><br><span class="line"></span><br><span class="line">    baseMapper.insert(payLog);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 common_utils 工程当中创建 ServletUtils.java</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @author BNTang</span><br><span class="line"> * @version 1.0</span><br><span class="line"> * @project video_parent</span><br><span class="line"> * @description servlet工具类</span><br><span class="line"> * @since Created in 2021/6/6 006 18:25</span><br><span class="line"> **/</span><br><span class="line">public class ServletUtils &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 获取RequestAttributes对象</span><br><span class="line">     */</span><br><span class="line">    public static ServletRequestAttributes getRequestAttributes() &#123;</span><br><span class="line">        RequestAttributes attributes = RequestContextHolder.getRequestAttributes();</span><br><span class="line">        return (ServletRequestAttributes)attributes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取 HttpServletRequest 对象</span><br><span class="line">     */</span><br><span class="line">    public static HttpServletRequest getRequest() &#123;</span><br><span class="line">        return getRequestAttributes().getRequest();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取response对象</span><br><span class="line">     */</span><br><span class="line">    public static HttpServletResponse getResponse() &#123;</span><br><span class="line">        return getRequestAttributes().getResponse();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取session对象</span><br><span class="line">     */</span><br><span class="line">    public static HttpSession getSession() &#123;</span><br><span class="line">        return getRequest().getSession();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 把字符串打印到客户端</span><br><span class="line">     */</span><br><span class="line">    public static String sendString(HttpServletResponse response, String string) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            response.setStatus(200);</span><br><span class="line">            response.setContentType(&quot;application/json&quot;);</span><br><span class="line">            response.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line">            response.getWriter().print(string);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="支付宝账户与密码"><a href="#支付宝账户与密码" class="headerlink" title="支付宝账户与密码"></a>支付宝账户与密码</h3><blockquote><ul><li>账户：<a href="mailto:&#99;&#120;&#115;&#105;&#x6d;&#114;&#x36;&#52;&#x39;&#55;&#64;&#x73;&#x61;&#x6e;&#100;&#x62;&#x6f;&#120;&#46;&#99;&#x6f;&#109;">&#99;&#120;&#115;&#105;&#x6d;&#114;&#x36;&#52;&#x39;&#55;&#64;&#x73;&#x61;&#x6e;&#100;&#x62;&#x6f;&#120;&#46;&#99;&#x6f;&#109;</a></li><li>密码：111111</li></ul></blockquote><p><a href="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606201003077-344199073.png"><img src="https://img2020.cnblogs.com/blog/2105804/202106/2105804-20210606201003077-344199073.png" alt="img"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前后端分离-微服务项目&quot;&gt;&lt;a href=&quot;#前后端分离-微服务项目&quot; class=&quot;headerlink&quot; title=&quot;前后端分离-微服务项目&quot;&gt;&lt;/a&gt;前后端分离-微服务项目&lt;/h1&gt;&lt;h2 id=&quot;01-项目搭建与创作者接口-数据库创建&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>uniAPP开发 全教程</title>
    <link href="http://example.com/2022/09/01/uniAPP%E5%BC%80%E5%8F%91-%E5%85%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://example.com/2022/09/01/uniAPP%E5%BC%80%E5%8F%91-%E5%85%A8%E6%95%99%E7%A8%8B/</id>
    <published>2022-09-01T02:00:09.000Z</published>
    <updated>2022-09-01T02:00:23.878Z</updated>
    
    <content type="html"><![CDATA[<h1 id="uniAPP开发-全教程"><a href="#uniAPP开发-全教程" class="headerlink" title="uniAPP开发 全教程"></a>uniAPP开发 全教程</h1><h2 id="一、-项目创建、tabbar配置、运行"><a href="#一、-项目创建、tabbar配置、运行" class="headerlink" title="一、(项目创建、tabbar配置、运行)"></a>一、(项目创建、tabbar配置、运行)</h2><h4 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h4><blockquote><p>uni-app 是一个使用 Vue.js开发所有前端应用的<a href="https://so.csdn.net/so/search?q=%E6%A1%86%E6%9E%B6&spm=1001.2101.3001.7020">框架</a>，开发者编写一套代码，可发布到iOS、Android、H5、以及各种小程序（微信&#x2F;支付宝&#x2F;百度&#x2F;头条&#x2F;QQ&#x2F;钉钉&#x2F;淘宝）、快应用等多个平台。</p></blockquote><h3 id="官网："><a href="#官网：" class="headerlink" title="官网："></a>官网：</h3><p><a href="https://uniapp.dcloud.io/">https://uniapp.dcloud.io/</a></p><h3 id="创建第一个-uni-app项目"><a href="#创建第一个-uni-app项目" class="headerlink" title="创建第一个 uni-app项目"></a>创建第一个 uni-app项目</h3><p>1、开发者需先下载安装 HBuilderX<br>下载地址: <a href="https://www.dcloud.io/hbuilderx.html">https://www.dcloud.io/hbuilderx.html</a></p><p>2、在HBuilderX 点击工具栏里的文件 - &gt;新建 - &gt;项目：</p><p><img src="https://img-blog.csdnimg.cn/2020100711205888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>选择uni-app，输入工程名，如：test，点击创建，即可成功创建uni-app</p><p><img src="https://img-blog.csdnimg.cn/20201007112257637.png#pic_center" alt="在这里插入图片描述"></p><p>项目目录</p><p><img src="https://img-blog.csdnimg.cn/20201007112445357.png#pic_center" alt="在这里插入图片描述"></p><p>创建页面</p><p><img src="https://img-blog.csdnimg.cn/20201007153714131.jpg#pic_center" alt="在这里插入图片描述"></p><p>导入静态资源包（图片）</p><p><img src="https://img-blog.csdnimg.cn/20201007154425304.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>页面tabbar配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;pages&quot;: [ //pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;path&quot;: &quot;pages/index/index&quot;,</span><br><span class="line">            &quot;style&quot;: &#123;</span><br><span class="line">                &quot;navigationBarTitleText&quot;: &quot;首页&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;path&quot;: &quot;pages/news/news&quot;,</span><br><span class="line">            &quot;style&quot;: &#123;</span><br><span class="line">                &quot;navigationBarTitleText&quot;: &quot;动态&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;path&quot;: &quot;pages/msg/msg&quot;,</span><br><span class="line">            &quot;style&quot;: &#123;</span><br><span class="line">                &quot;navigationBarTitleText&quot;: &quot;消息&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ,&#123;</span><br><span class="line">            &quot;path&quot; : &quot;pages/my/my&quot;,</span><br><span class="line">            &quot;style&quot; : &#123;</span><br><span class="line">&quot;navigationBarTitleText&quot;: &quot;我的&quot;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    ],</span><br><span class="line">    &quot;globalStyle&quot;: &#123;</span><br><span class="line">        &quot;navigationBarTextStyle&quot;: &quot;black&quot;,</span><br><span class="line">        &quot;navigationBarTitleText&quot;: &quot;uni-app&quot;,</span><br><span class="line">        &quot;navigationBarBackgroundColor&quot;: &quot;#F8F8F8&quot;,</span><br><span class="line">        &quot;backgroundColor&quot;: &quot;#F8F8F8&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">  &quot;tabBar&quot;:&#123;</span><br><span class="line">  &quot;color&quot;:&quot;#333333&quot;,</span><br><span class="line">  &quot;selectedColor&quot;:&quot;#FC5C82&quot;,</span><br><span class="line">  &quot;backgroundColor&quot;:&quot;#FFFFFF&quot;,</span><br><span class="line">  &quot;borderStyle&quot;:&quot;black&quot;,</span><br><span class="line">  &quot;list&quot;:[&#123;</span><br><span class="line">  &quot;pagePath&quot;:&quot;pages/index/index&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;首页&quot;,</span><br><span class="line">  &quot;iconPath&quot;:&quot;static/tabbar/index.png&quot;,</span><br><span class="line">  &quot;selectedIconPath&quot;:&quot;static/tabbar/indexed.png&quot;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">  &quot;pagePath&quot;:&quot;pages/news/news&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;动态&quot;,</span><br><span class="line">  &quot;iconPath&quot;:&quot;static/tabbar/news.png&quot;,</span><br><span class="line">  &quot;selectedIconPath&quot;:&quot;static/tabbar/newsed.png&quot;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">  &quot;pagePath&quot;:&quot;pages/msg/msg&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;消息&quot;,</span><br><span class="line">  &quot;iconPath&quot;:&quot;static/tabbar/paper.png&quot;,</span><br><span class="line">  &quot;selectedIconPath&quot;:&quot;static/tabbar/papered.png&quot;</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">  &quot;pagePath&quot;:&quot;pages/my/my&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;我的&quot;,</span><br><span class="line">  &quot;iconPath&quot;:&quot;static/tabbar/home.png&quot;,</span><br><span class="line">  &quot;selectedIconPath&quot;:&quot;static/tabbar/homeed.png&quot;</span><br><span class="line">  &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p><img src="https://img-blog.csdnimg.cn/20201007112748211.png#pic_center" alt="在这里插入图片描述"></p><h4 id="运行效果图"><a href="#运行效果图" class="headerlink" title="运行效果图"></a>运行效果图</h4><p><img src="https://img-blog.csdnimg.cn/20201007153828713.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="二、-微信开发者工具运行项目，icon字体使用，组件"><a href="#二、-微信开发者工具运行项目，icon字体使用，组件" class="headerlink" title="二、(微信开发者工具运行项目，icon字体使用，组件)"></a>二、(微信开发者工具运行项目，icon字体使用，组件)</h2><blockquote><p>上一篇文章已经运行起了一个uni-app项目的小demo，但是运行在Chrome浏览器的H5页面，那在微信开发者工具中如何实时模拟查看该项目呢？</p></blockquote><h3 id="1-在微信开发者工具中运行"><a href="#1-在微信开发者工具中运行" class="headerlink" title="1.在微信开发者工具中运行"></a>1.在微信开发者工具中运行</h3><p>配置小程序IDE相关路径<br>说明：只有配置了才能在微信小程序运开发者工具中运行成功</p><ol><li><img src="https://img-blog.csdnimg.cn/20201007134752488.png#pic_center" alt="打开运行设置"></li></ol><p><img src="https://img-blog.csdnimg.cn/20201007142618910.png#pic_center" alt="添加小程序开发者工具路径"></p><h3 id="2-开启小程序IDE服务端口的设置—-gt-安全设置—-gt-安全-（开启）"><a href="#2-开启小程序IDE服务端口的设置—-gt-安全设置—-gt-安全-（开启）" class="headerlink" title="2. 开启小程序IDE服务端口的设置—&gt;安全设置—&gt;安全 （开启）"></a>2. 开启小程序IDE服务端口的设置—&gt;安全设置—&gt;安全 （开启）</h3><p><img src="https://img-blog.csdnimg.cn/20201007143112110.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="3-修改-manifest-json配置文件，添加自己的小程序AppId"><a href="#3-修改-manifest-json配置文件，添加自己的小程序AppId" class="headerlink" title="3. 修改 manifest.json配置文件，添加自己的小程序AppId:"></a>3. 修改 manifest.json配置文件，添加自己的小程序AppId:</h3><p><img src="https://img-blog.csdnimg.cn/20201007143623322.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="4-进入test项目，点击工具栏的运行-gt-运行到小程序模拟器-gt-微信开发者工具，生成对应的微信小程序项目，即可在微信开发者工具里面体验了。"><a href="#4-进入test项目，点击工具栏的运行-gt-运行到小程序模拟器-gt-微信开发者工具，生成对应的微信小程序项目，即可在微信开发者工具里面体验了。" class="headerlink" title="4. 进入test项目，点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 微信开发者工具，生成对应的微信小程序项目，即可在微信开发者工具里面体验了。"></a>4. 进入test项目，点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 微信开发者工具，生成对应的微信小程序项目，即可在微信开发者工具里面体验了。</h3><p><img src="https://img-blog.csdnimg.cn/20201007143740462.png#pic_center" alt="在这里插入图片描述"></p><h3 id="5-运行效果"><a href="#5-运行效果" class="headerlink" title="5. 运行效果"></a>5. 运行效果</h3><p><img src="https://img-blog.csdnimg.cn/2020100715473033.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="6-组件"><a href="#6-组件" class="headerlink" title="6. 组件"></a>6. 组件</h3><blockquote><p>1）基础组件，与微信小程序相同;<br>2）自定义组件，根据需要通过基础组件进行组合；<br>3）uni-ui，是DCloud提供的基于vue组件的、flex布局的、无dom的跨全端扩展ui框架；<br>4）插件市场，提供了更多扩展组件、模板，包括前端组件和原生扩展组件，具体见<a href="https://ext.dcloud.net.cn/">插件市场</a>;</p></blockquote><h3 id="7-基础组件"><a href="#7-基础组件" class="headerlink" title="7.基础组件"></a>7.基础组件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;view&gt;</span><br><span class="line">  &lt;icon type=&quot;success&quot; size=&quot;26&quot;/&gt;</span><br><span class="line">  &lt;button type=&quot;primary&quot;&gt;页面主操作 Normal&lt;/button&gt;</span><br><span class="line">  &lt;progress percent=&quot;20&quot; show-info stroke-width=&quot;3&quot; /&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020100715585418.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="8-字体库的引入"><a href="#8-字体库的引入" class="headerlink" title="8. 字体库的引入"></a>8. 字体库的引入</h3><p>1、拷贝common目录到项目中，icon.css在common中，并修改引入的字体路径<br>2、拷贝static目录到项目中，字体文件在static目录中。</p><p><img src="https://img-blog.csdnimg.cn/20201008142324732.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>在mainjs中引入iconfont.css</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 引入全局css</span><br><span class="line">import &#x27;./static/2002icon/iconfont.css&#x27;</span><br></pre></td></tr></table></figure><p>在组件中页面中使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;text class=&quot;iconfont icon-jinru&quot;&gt;&lt;/text&gt;</span><br></pre></td></tr></table></figure><h3 id="9-自定义组件"><a href="#9-自定义组件" class="headerlink" title="9. 自定义组件"></a>9. 自定义组件</h3><p>根目录下创建components目录，创建list.vue组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;view class=&quot;container&quot;&gt;</span><br><span class="line">   &lt;view v-for=&quot;(item, index) in list&quot; :key=&quot;index&quot; class=&#x27;list&#x27;&gt;</span><br><span class="line">     &lt;view class=&#x27;title-icon&#x27;&gt;</span><br><span class="line">          &lt;image :src=&#x27;item.imgSrc&#x27;&gt;&lt;/image&gt;</span><br><span class="line">     &lt;/view&gt;</span><br><span class="line">     &lt;view  class=&#x27;right bottom&#x27;&gt;</span><br><span class="line">     &lt;text&gt;&#123;&#123;item.title&#125;&#125;&lt;/text&gt;</span><br><span class="line">        &lt;text class=&quot;iconfont icon-jinru&quot;&gt;&lt;/text&gt;</span><br><span class="line">     &lt;/view&gt;</span><br><span class="line">   &lt;/view&gt;</span><br><span class="line">   &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">   export default &#123;</span><br><span class="line">   name: &quot;list&quot;,</span><br><span class="line">   data()&#123;</span><br><span class="line">   return&#123;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   //属性</span><br><span class="line">   props: &#123;</span><br><span class="line">       list: &#123;</span><br><span class="line">           type: Array,</span><br><span class="line">           value: &quot;&quot;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   created() &#123;</span><br><span class="line">       console.log(999, this.list)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">   .list &#123;</span><br><span class="line"> display: flex;</span><br><span class="line"> height: 112rpx;</span><br><span class="line"> line-height: 112rpx;</span><br><span class="line">&#125;</span><br><span class="line">.list .title-icon &#123;</span><br><span class="line"> width: 48rpx;</span><br><span class="line"> flex-grow: 0;</span><br><span class="line"> margin-right: 24rpx;</span><br><span class="line"> position: relative;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">.list .title-icon image &#123;</span><br><span class="line"> width: 48rpx;</span><br><span class="line"> height: 48rpx;</span><br><span class="line"> position: absolute;</span><br><span class="line"> top: 50%;</span><br><span class="line"> transform: translateY(-50%);</span><br><span class="line">&#125;</span><br><span class="line">.list .right &#123;</span><br><span class="line"> display: flex;</span><br><span class="line"> flex-grow: 1;</span><br><span class="line"> justify-content: space-between;</span><br><span class="line"> position: relative;</span><br><span class="line"> line-height: 112rpx;</span><br><span class="line">&#125;</span><br><span class="line">.list .bottom::after &#123;</span><br><span class="line"> content: &#x27;&#x27;;</span><br><span class="line"> height: 1px;</span><br><span class="line"> width: 100%;</span><br><span class="line"> display: block;</span><br><span class="line"> position: absolute;</span><br><span class="line"> bottom: 0;</span><br><span class="line"> left: 0;</span><br><span class="line"> background-color: #E8ECED;</span><br><span class="line"> transform: scaleY(0.5);</span><br><span class="line">&#125;</span><br><span class="line">.list .right text &#123;</span><br><span class="line"> font-size: 34rpx;</span><br><span class="line"> color: rgba(53,53,54,1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>父组件我的页面my.vue，引入自定义组件list.vue，并传参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;person-ctn&quot;&gt;</span><br><span class="line">        &lt;list v-bind:list=&quot;list&quot;&gt;&lt;/list&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import list from &quot;../../components/list.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">        list,</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            list: [</span><br><span class="line">              &#123; title: &#x27;我的推荐&#x27;, imgSrc:require(&quot;../../static/tabbar/paper.png&quot;), path: &#x27;/pages/myRecommend/myRecommend&#x27; &#125;,</span><br><span class="line">              &#123; title: &#x27;推广同盟&#x27;, imgSrc:require(&quot;../../static/tabbar/news.png&quot;), path: &#x27;/pages/promote/promote&#x27; &#125;,</span><br><span class="line">              &#123; title: &#x27;资金明细&#x27;, imgSrc:require(&quot;../../static/tabbar/home.png&quot;), path: &#x27;/pages/capital/capital&#x27; &#125;,</span><br><span class="line">              &#123; title: &#x27;设置&#x27;, imgSrc:require(&quot;../../static/tabbar/index.png&quot;), path: &#x27;/pages/setting/setting&#x27; &#125;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">    .person-ctn &#123;</span><br><span class="line">        padding: 0 32rpx;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>最终效果：<br><img src="https://img-blog.csdnimg.cn/20201008143107856.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="10、uni-ui的使用"><a href="#10、uni-ui的使用" class="headerlink" title="10、uni-ui的使用"></a>10、uni-ui的使用</h3><blockquote><p>1）uni-ui 是全端兼容的基于flex布局的ui库；<br>2）可以使用 npm 的安装使用方式，也可下载相关组件直接使用；<br>3）uni-ui<br>不支持使用 Vue.use() 的方式安装<br>4）uni-ui 依赖 scss，若是 HBuilderX 中创建的 uni-app<br>项目，需要在 HBuilderX 中安装 scss 插件；如果是使用 cli 创建的 uni-app 项目，需要在项目下npm安装node-sass 和 sass-loader</p></blockquote><h5 id="1-初始化项目"><a href="#1-初始化项目" class="headerlink" title="1. 初始化项目"></a>1. 初始化项目</h5><p>在 HBuilderX 中新建 uni-app 项目，进入项目目录，执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h5 id="2-安装-uni-ui"><a href="#2-安装-uni-ui" class="headerlink" title="2. 安装 uni-ui"></a>2. 安装 uni-ui</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @dcloudio/uni-ui</span><br></pre></td></tr></table></figure><h5 id="3-使用-uni-ui"><a href="#3-使用-uni-ui" class="headerlink" title="3. 使用 uni-ui"></a>3. 使用 uni-ui</h5><p>index.vue引入组件，在template中使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;homework-ctn&quot;&gt;</span><br><span class="line">        &lt;uni-card :title=&#x27;title&#x27; :isFull=&quot;isFull&quot; :note=&quot;note&quot; :thumbnail=&quot;thumbnail&quot; :extra=&quot;extra&quot;&gt;</span><br><span class="line">helloword</span><br><span class="line">&lt;/uni-card&gt;</span><br><span class="line"></span><br><span class="line">&lt;uni-pagination</span><br><span class="line">            show-icon=false</span><br><span class="line">            total=100 </span><br><span class="line">            pageSize=10</span><br><span class="line">            current=2</span><br><span class="line">            prev-text=&quot;上一页&quot;</span><br><span class="line">            next-text=&quot;下一页&quot;</span><br><span class="line">        &gt;&lt;/uni-pagination&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;uniCard, uniPagination&#125; from &#x27;@dcloudio/uni-ui&#x27;</span><br><span class="line">// 也可使用此方式引入组件</span><br><span class="line"> import uniBadge from &#x27;@dcloudio/uni-ui/lib/uni-badge/uni-badge.vue&#x27; </span><br><span class="line">export default &#123;</span><br><span class="line">components: &#123;</span><br><span class="line">uniCard,</span><br><span class="line">uniPagination</span><br><span class="line">&#125;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">title: &#x27;聊天&#x27;,</span><br><span class="line">extra: &#x27;快快学习uniapp&#x27;,</span><br><span class="line">note: &#x27;1910a班&#x27;,</span><br><span class="line">thumbnail: require(&#x27;../../static/tabbar/index.png&#x27;),</span><br><span class="line">isFull: true</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.content &#123;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">align-items: center;</span><br><span class="line">justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.logo &#123;</span><br><span class="line">height: 200rpx;</span><br><span class="line">width: 200rpx;</span><br><span class="line">margin-top: 200rpx;</span><br><span class="line">margin-left: auto;</span><br><span class="line">margin-right: auto;</span><br><span class="line">margin-bottom: 50rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.text-area &#123;</span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.title &#123;</span><br><span class="line">font-size: 36rpx;</span><br><span class="line">color: #8f8f94;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>按需引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import uniCard from &quot;../../uni-ui/uni-card/uni-card.vue&quot;</span><br><span class="line">import uniPagination from &quot;@/uni-ui/uni-pagination/uni-pagination.vue&quot;</span><br></pre></td></tr></table></figure><h5 id="4-运行报错后引入Hbuilderx没有安装编译sass插件"><a href="#4-运行报错后引入Hbuilderx没有安装编译sass插件" class="headerlink" title="4.运行报错后引入Hbuilderx没有安装编译sass插件"></a>4.运行报错后引入Hbuilderx没有安装编译sass插件</h5><p>点击 工具 —&gt; 插件安装</p><p><img src="https://img-blog.csdnimg.cn/20201008153918524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>安装新插件—-&gt;前往插件市场安装<br><img src="https://img-blog.csdnimg.cn/20201008154026584.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201008154214786.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>最终效果：<br><img src="https://img-blog.csdnimg.cn/20201008154253189.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="三、（全局模块util-js、全局变量、vuex）"><a href="#三、（全局模块util-js、全局变量、vuex）" class="headerlink" title="三、（全局模块util.js、全局变量、vuex）"></a>三、（全局模块util.js、全局变量、vuex）</h2><h3 id="1-公用模块"><a href="#1-公用模块" class="headerlink" title="1. 公用模块"></a>1. 公用模块</h3><h4 id="1-1-定义一个专用的模块，用来组织和管理这些全局的变量，在需要的页面引入。"><a href="#1-1-定义一个专用的模块，用来组织和管理这些全局的变量，在需要的页面引入。" class="headerlink" title="1.1 定义一个专用的模块，用来组织和管理这些全局的变量，在需要的页面引入。"></a><strong>1.1 定义一个专用的模块，用来组织和管理这些全局的变量，在需要的页面引入。</strong></h4><p>在 uni-app 项目<a href="https://so.csdn.net/so/search?q=%E6%A0%B9%E7%9B%AE%E5%BD%95&spm=1001.2101.3001.7020">根目录</a>下创建 common 目录，然后在 common 目录下新建 util.js 用于定义公用的方法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">const baseUrl = &#x27;https://ceshi2.dishait.cn/api/v1&#x27;;  </span><br><span class="line">const nowTime = Date.now || function () &#123;  </span><br><span class="line">    return new Date().getTime();  </span><br><span class="line">&#125;;  </span><br><span class="line">export default &#123;  </span><br><span class="line">    baseUrl,  </span><br><span class="line">    nowTime,  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h4 id="1-2-接下来在-pages-x2F-index-x2F-index-vue-中引用该模块"><a href="#1-2-接下来在-pages-x2F-index-x2F-index-vue-中引用该模块" class="headerlink" title="1.2 接下来在 pages&#x2F;index&#x2F;index.vue 中引用该模块"></a><strong>1.2 接下来在 pages&#x2F;index&#x2F;index.vue 中引用该模块</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    import helper from &#x27;../../common/util.js&#x27;;  </span><br><span class="line"> </span><br><span class="line">    export default &#123;  </span><br><span class="line">        data() &#123;  </span><br><span class="line">            return &#123;&#125;;  </span><br><span class="line">        &#125;,  </span><br><span class="line">        onLoad()&#123;  </span><br><span class="line">            console.log(&#x27;nowTime:&#x27; + utils.nowTime());  </span><br><span class="line">        &#125;,  </span><br><span class="line">        methods: &#123;&#125;,  </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>小结</strong>：</p><blockquote><p>优点：这种方式维护起来比较方便；</p><p>缺点：需要每次都引入；</p></blockquote><h3 id="2-挂载-Vue-prototype"><a href="#2-挂载-Vue-prototype" class="headerlink" title="2. 挂载 Vue.prototype"></a>2. 挂载 Vue.prototype</h3><blockquote><p>将一些使用频率较高的常量或者方法，直接扩展到 Vue.prototype 上，每个 Vue 对象都会“继承”下来。</p></blockquote><h4 id="2-1-在-main-js-中挂载属性-x2F-方法"><a href="#2-1-在-main-js-中挂载属性-x2F-方法" class="headerlink" title="2.1 在 main.js 中挂载属性&#x2F;方法"></a><strong>2.1 在 main.js 中挂载属性&#x2F;方法</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.websiteUrl = &#x27;https://ceshi2.dishait.cn/api/v1&#x27;;  </span><br><span class="line">Vue.prototype.nowTime = Date.nowTime || function () &#123;  </span><br><span class="line">    return new Date().getTime();  </span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure><h4 id="2-2-在-pages-x2F-index-x2F-index-vue-中调用"><a href="#2-2-在-pages-x2F-index-x2F-index-vue-中调用" class="headerlink" title="2.2 在 pages&#x2F;index&#x2F;index.vue 中调用"></a><strong>2.2 在 pages&#x2F;index&#x2F;index.vue 中调用</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    export default &#123;  </span><br><span class="line">        data() &#123;  </span><br><span class="line">            return &#123;&#125;;  </span><br><span class="line">        &#125;,  </span><br><span class="line">        onLoad()&#123;  </span><br><span class="line">            console.log(&#x27;now:&#x27; + this.nowTime());  </span><br><span class="line">        &#125;,  </span><br><span class="line">        methods: &#123;&#125;，  </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这种方式，只需要在 main.js 中定义好即可在每个页面中直接调用。</p><p><strong>注意：</strong></p><blockquote><p>1、每个页面中不要在出现重复的属性或方法名。<br>2、建议在 Vue.prototype 上挂载的属性或方法，可以加一个统一的前缀。比如 $baseUrl，在阅读代码时也容易与当前页面的内容区分开。</p></blockquote><h3 id="3-Vuex"><a href="#3-Vuex" class="headerlink" title="3. Vuex"></a>3. Vuex</h3><blockquote><p>Vuex 是一个专为 Vue.js<br>应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p></blockquote><p>首先安装<code>vuex</code><br><code>cnpm install vuex -S</code></p><h4 id="3-1-在-uni-app-项目根目录下新建-store-目录，在-store-目录下创建-index-js-定义状态值"><a href="#3-1-在-uni-app-项目根目录下新建-store-目录，在-store-目录下创建-index-js-定义状态值" class="headerlink" title="3.1 在 uni-app 项目根目录下新建 store 目录，在 store 目录下创建 index.js 定义状态值"></a><strong>3.1 在 uni-app 项目根目录下新建 store 目录，在 store 目录下创建 index.js 定义状态值</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line">import Vuex from &#x27;vuex&#x27;</span><br><span class="line">Vue.use(Vuex)</span><br><span class="line">const store = new Vuex.Store(&#123;  </span><br><span class="line">    state: &#123;  </span><br><span class="line">        login: false,  </span><br><span class="line">        token: &#x27;&#x27;,  </span><br><span class="line">        avatarUrl: &#x27;&#x27;,  </span><br><span class="line">        userName: &#x27;&#x27;  </span><br><span class="line">    &#125;,  </span><br><span class="line">    mutations: &#123;  </span><br><span class="line">        login(state, provider) &#123;  </span><br><span class="line">            console.log(state)  </span><br><span class="line">            console.log(provider)  </span><br><span class="line">            state.login = true;  </span><br><span class="line">            state.token = provider.token;  </span><br><span class="line">            state.userName = provider.userName;  </span><br><span class="line">            state.avatarUrl = provider.avatarUrl;  </span><br><span class="line">        &#125;,  </span><br><span class="line">        logout(state) &#123;  </span><br><span class="line">            state.login = false;  </span><br><span class="line">            state.token = &#x27;&#x27;;  </span><br><span class="line">            state.userName = &#x27;&#x27;;  </span><br><span class="line">            state.avatarUrl = &#x27;&#x27;;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;)  </span><br><span class="line">module.exports=store</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-在-main-js-挂载-Vuex"><a href="#3-2-在-main-js-挂载-Vuex" class="headerlink" title="3.2 在 main.js 挂载 Vuex"></a><strong>3.2 在 main.js 挂载 Vuex</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import store from &#x27;./store&#x27;  </span><br><span class="line">Vue.prototype.$store = store  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-3-在-pages-x2F-index-x2F-index-vue-使用"><a href="#3-3-在-pages-x2F-index-x2F-index-vue-使用" class="headerlink" title="3.3 在 pages&#x2F;index&#x2F;index.vue 使用"></a><strong>3.3 在 pages&#x2F;index&#x2F;index.vue 使用</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;  </span><br><span class="line">    import &#123;  </span><br><span class="line">        mapState,  </span><br><span class="line">        mapMutations  </span><br><span class="line">    &#125; from &#x27;vuex&#x27;;  </span><br><span class="line"> </span><br><span class="line">    export default &#123;  </span><br><span class="line">        computed: &#123;  </span><br><span class="line">            ...mapState([&#x27;token&#x27;, &#x27;userId&#x27;, &#x27;userName&#x27;])  </span><br><span class="line">        &#125;,  </span><br><span class="line">        methods: &#123;  </span><br><span class="line">            ...mapMutations([&#x27;logout&#x27;])  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&lt;/script&gt;  </span><br></pre></td></tr></table></figure><h2 id="四、-uni-requet-、网络模块封装"><a href="#四、-uni-requet-、网络模块封装" class="headerlink" title="四、(uni.requet()、网络模块封装)"></a>四、(uni.requet()、网络模块封装)</h2><h3 id="1-uni-app网络请求"><a href="#1-uni-app网络请求" class="headerlink" title="1. uni-app网络请求"></a>1. uni-app网络请求</h3><p>uni-app题拱了uni.requet()方法，发起网络请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">uni.request(&#123;</span><br><span class="line">    url: &#x27;https://ceshi2.dishait.cn/api/v1/list&#x27;, //仅为示例，并非真实接口地址。</span><br><span class="line">    data: &#123;</span><br><span class="line">        text: &#x27;uni.request&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    header: &#123;</span><br><span class="line">        &#x27;custom-header&#x27;: &#x27;hello&#x27; //自定义请求头信息</span><br><span class="line">    &#125;,</span><br><span class="line">    success: (res) =&gt; &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line">        this.text = &#x27;request success&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><blockquote><p>在各个小程序平台运行时，网络相关的 <a href="https://so.csdn.net/so/search?q=API&spm=1001.2101.3001.7020">API</a> 在使用前需要配置域名白名单。</p></blockquote><p>data 数据说明</p><p>最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String。转换规则如下：</p><ul><li>对于 GET 方法，会将数据转换为 query string。例如{ name: ‘name’, age: 18 } 转换后的结果是name&#x3D;name&amp;age&#x3D;18。</li><li>对于 POST 方法且 header[‘content-type’] 为application&#x2F;json的数据，会进行 JSON 序列化，是默认值。</li><li>对于 POST 方法且header[‘content-type’]为 application&#x2F;x-www-form-urlencoded 的数据，会将数据转换为 query string。</li></ul><h3 id="2-uni-request-未封装VUE组件中的使用"><a href="#2-uni-request-未封装VUE组件中的使用" class="headerlink" title="2. uni.request()未封装VUE组件中的使用"></a>2. uni.request()未封装VUE组件中的使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">getList:function()&#123;</span><br><span class="line">    var _self=this;</span><br><span class="line">    var token = uni.getStorageSync(_self.sessionKey);</span><br><span class="line">    uni.request(&#123;</span><br><span class="line">        url: &#x27;https://ceshi2.dishait.cn/api/v1&#x27;,</span><br><span class="line">        method: &#x27;GET&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            token : token,</span><br><span class="line">            timestamp : timestamp</span><br><span class="line">                   &#125;,</span><br><span class="line">        success: res =&gt; &#123;</span><br><span class="line">            if (res.data.code == &quot;401&quot;) &#123;//登录失效</span><br><span class="line">                //弹框提示</span><br><span class="line">                uni.showToast(&#123;</span><br><span class="line">                    title: res.data.msg,</span><br><span class="line">                    mask: false,</span><br><span class="line">                    duration: 1500</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; else if (res.data.code == &quot;0&quot;) &#123;</span><br><span class="line">                var data = res.data.data;</span><br><span class="line">                _self.onlineNum = data.onlineNum;</span><br><span class="line">                _self.machineNum = data.machineNum;</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                console.log(&quot;未处理的结果码&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">                    </span><br><span class="line">        &#125;,</span><br><span class="line">        fail: (e) =&gt; &#123;</span><br><span class="line">            console.log(&quot;getMachineNum fail:&quot; + JSON.stringify(e));</span><br><span class="line">        &#125;,</span><br><span class="line">        complete: () =&gt; &#123;&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>返回结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;code&quot;: &quot;0&quot;,</span><br><span class="line">    &quot;msg&quot;: &quot;success&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">      &quot;machineNum&quot;: 124,</span><br><span class="line">      &quot;onlineNum&quot;: 1,</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;header&quot;: &#123;</span><br><span class="line">    &quot;Server&quot;: &quot;nginx/1.14.0&quot;,</span><br><span class="line">    &quot;Date&quot;: &quot;Thu, 11 Apr 2019 03:08:20 GMT&quot;,</span><br><span class="line">    &quot;Content-Type&quot;: &quot;application/json;charset=utf-8;&quot;,</span><br><span class="line">    &quot;Transfer-Encoding&quot;: &quot;chunked&quot;,</span><br><span class="line">    &quot;Connection&quot;: &quot;keep-alive&quot;,</span><br><span class="line">    &quot;X-Powered-By&quot;: &quot;PHP/7.1.16&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;statusCode&quot;: 200,</span><br><span class="line">  &quot;cookies&quot;: [],</span><br><span class="line">  &quot;errMsg&quot;: &quot;request:ok&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-uniapp封装网络请求"><a href="#3-uniapp封装网络请求" class="headerlink" title="3.uniapp封装网络请求"></a>3.uniapp封装网络请求</h3><p><strong>1. 我们先通过Promise进行一次简单封装,新建request.js文件：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//options参数我们后面会说</span><br><span class="line">function service(options = &#123;&#125;) &#123;</span><br><span class="line">return new Promise((resolved, rejected) =&gt; &#123;</span><br><span class="line">uni.request(&#123;</span><br><span class="line">   url: options.url, //仅为示例，并非真实接口地址。</span><br><span class="line">   data: options.data,</span><br><span class="line">   header: &#123;</span><br><span class="line">       &#x27;content-type&#x27;: &#x27;application/x-www-form-urlencoded&#x27;,</span><br><span class="line">       &#x27;token&#x27;: `$&#123;token&#125;` //权限token </span><br><span class="line">   &#125;,</span><br><span class="line">   success: (res) =&gt; &#123;</span><br><span class="line">      rejected(res.data);</span><br><span class="line">   &#125;.fail = (err) =&gt; &#123;</span><br><span class="line">   rejected(err)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">export default service;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>2. 在common目录下新建config.js</strong><br>放置我们的多环境变量，方便后期切换环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">// api请求前缀</span><br><span class="line">// webUrl : 开发环境前缀,</span><br><span class="line">webUrl:&#x27;https://ceshi2.dishait.cn/api/v1&#x27;,</span><br><span class="line">//testUrl : 测试环境前缀</span><br><span class="line">testUrl:&#x27;https://ceshi3.dishait.cn/api/v1&#x27;,</span><br><span class="line">//proUrl : 生产环境前缀</span><br><span class="line">proUrl:&#x27;https://ceshi.dishait.cn/api/v1&#x27;,</span><br><span class="line">// websocket地址</span><br><span class="line">websocketUrl:&quot;wss://ceshi2.dishait.cn/wss&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在目录如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">┌─common</span><br><span class="line">│ ├─config.js //请求</span><br><span class="line">│ ├─request.js //请求</span><br><span class="line">┌─pages</span><br><span class="line">│ ├─index</span><br><span class="line">│ │ └─index.vue //页面文件</span><br><span class="line">├─static</span><br><span class="line">├─store</span><br><span class="line">│ ├─index.js //vuex</span><br><span class="line">├─main.js</span><br><span class="line">├─App.vue</span><br><span class="line">├─manifest.json</span><br><span class="line">└─pages.json</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>3. 接下来我们对requst.js进行一次优化。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把配置项单独处理</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> $C <span class="keyword">from</span> <span class="string">&#x27;@/common/config.js&#x27;</span>; <span class="comment">// 引入baseUrl</span></span><br><span class="line"><span class="keyword">import</span> $store <span class="keyword">from</span> <span class="string">&#x27;@/store/index.js&#x27;</span>;<span class="comment">//vuex</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">//定义默认请求参数</span></span><br><span class="line"><span class="attr">common</span>:&#123;</span><br><span class="line"><span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line"><span class="attr">header</span>:&#123;</span><br><span class="line"><span class="string">&quot;content-type&quot;</span>:<span class="string">&quot;application/json&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">data</span>:&#123;&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">request</span>(<span class="params">options = &#123;&#125;</span>)&#123;</span><br><span class="line">options.<span class="property">url</span> = $C.<span class="property">webUrl</span> + options.<span class="property">url</span></span><br><span class="line">options.<span class="property">method</span> = options.<span class="property">method</span> || <span class="variable language_">this</span>.<span class="property">common</span>.<span class="property">method</span></span><br><span class="line">options.<span class="property">header</span> = options.<span class="property">header</span> || <span class="variable language_">this</span>.<span class="property">common</span>.<span class="property">header</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证权限token</span></span><br><span class="line"><span class="keyword">if</span>(options.<span class="property">token</span>)&#123;</span><br><span class="line">options.<span class="property">header</span>.<span class="property">token</span> = $store.<span class="property">state</span>.<span class="property">token</span></span><br><span class="line"><span class="keyword">if</span>(!options.<span class="property">header</span>.<span class="property">token</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;非法token,请重新登录&#x27;</span>,</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res,rej</span>)=&gt;</span>&#123;</span><br><span class="line">uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">...options,</span><br><span class="line"></span><br><span class="line"><span class="attr">success</span>: <span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 返回原始数据</span></span><br><span class="line"><span class="comment">// console.log(result);</span></span><br><span class="line"><span class="keyword">if</span>(options.<span class="property">native</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">res</span>(result)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 请求服务端失败</span></span><br><span class="line"><span class="keyword">if</span> (result.<span class="property">statusCode</span> !== <span class="number">200</span> &amp;&amp; !options.<span class="property">notoast</span>) &#123;</span><br><span class="line">uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>:result.<span class="property">data</span>.<span class="property">msg</span> || <span class="string">&#x27;请求失败&#x27;</span>,</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">rej</span>(result.<span class="property">data</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 成功</span></span><br><span class="line"><span class="title function_">res</span>(result.<span class="property">data</span>.<span class="property">data</span>)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">fail</span>:<span class="function">(<span class="params">error</span>)=&gt;</span>&#123;</span><br><span class="line">uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: error.<span class="property">errMsg</span> || <span class="string">&#x27;请求失败&#x27;</span>,</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> <span class="title function_">rej</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 单独封装 get 方式请求</span></span><br><span class="line"><span class="title function_">get</span>(<span class="params">url,data = &#123;&#125;,options = &#123;&#125;</span>)&#123;</span><br><span class="line">options.<span class="property">url</span> = url</span><br><span class="line">options.<span class="property">data</span> = data</span><br><span class="line">options.<span class="property">method</span> = <span class="string">&#x27;GET&#x27;</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(options)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 单独封装 post 方式请求</span></span><br><span class="line"><span class="title function_">post</span>(<span class="params">url,data = &#123;&#125;,options = &#123;&#125;</span>)&#123;</span><br><span class="line">options.<span class="property">url</span> = url</span><br><span class="line">options.<span class="property">data</span> = data</span><br><span class="line">options.<span class="property">method</span> = <span class="string">&#x27;POST&#x27;</span></span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(options)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 单独封装 文件上传 方式请求 ,不需要则可以暂时不封装</span></span><br><span class="line"><span class="title function_">upload</span>(<span class="params">url,options = &#123;&#125;</span>)&#123;</span><br><span class="line">options.<span class="property">url</span> = $C.<span class="property">webUrl</span> + url</span><br><span class="line">options.<span class="property">header</span> = options.<span class="property">header</span> || &#123;&#125;</span><br><span class="line"><span class="comment">// 验证权限token</span></span><br><span class="line"><span class="keyword">if</span>(options.<span class="property">token</span>)&#123;</span><br><span class="line">options.<span class="property">header</span>.<span class="property">token</span> = $store.<span class="property">state</span>.<span class="property">token</span></span><br><span class="line"><span class="keyword">if</span>(!options.<span class="property">header</span>.<span class="property">token</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;非法token,请重新登录&#x27;</span>,</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">res,rej</span>)=&gt;</span>&#123;</span><br><span class="line">uni.<span class="title function_">uploadFile</span>(&#123;</span><br><span class="line">...options,</span><br><span class="line"><span class="attr">success</span>: <span class="function">(<span class="params">uploadFileRes</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(uploadFileRes.<span class="property">statusCode</span> !== <span class="number">200</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;上传图片失败&#x27;</span>,</span><br><span class="line"><span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(uploadFileRes.<span class="property">data</span>)</span><br><span class="line"><span class="title function_">res</span>(data)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">fail</span>:<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line"><span class="title function_">rej</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4. 在main.js总，导入request.js ,并挂载到Vue原型上。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 引入请求库</span><br><span class="line">import $H from &#x27;./common/request.js&#x27;;</span><br><span class="line">Vue.prototype.$H = $H</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>5.组件使用，login.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;text-center&quot; style=&quot;padding-top: 130rpx;padding-bottom: 70rpx;font-size: 55rpx;&quot;&gt;账号密码登录&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;px-2&quot;&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;view class=&quot;mb-2&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;username&quot; placeholder=&quot;昵称/手机号/邮箱&quot; class=&quot;border-bottom p-2&quot;/&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;mb-2 flex align-stretch&quot;&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;password&quot; placeholder=&quot;请输入密码&quot; class=&quot;border-bottom p-2 flex-1&quot;/&gt;</span><br><span class="line">&lt;view class=&quot;border-bottom flex align-center justify-center font text-muted&quot; style=&quot;width: 150rpx;&quot;&gt;忘记密码？&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;py-2 px-3&quot;&gt;</span><br><span class="line">&lt;button class=&quot;text-white&quot; style=&quot;border-radius: 50rpx;border: 0;&quot; type=&quot;primary&quot; :disabled=&quot;disabled&quot; :class=&quot;disabled ? &#x27;bg-main-disabled&#x27;:&#x27;bg-main&#x27;&quot; @click=&quot;submit&quot; :loading=&quot;loading&quot;&gt; 登录 &lt;/button&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;flex align-center justify-center pt-2 pb-4&quot;&gt;</span><br><span class="line">&lt;view class=&quot;text-primary font-sm&quot; @click=&quot;changeStatus&quot;&gt;</span><br><span class="line">&#123;&#123;status?&#x27;账号密码登录&#x27;:&#x27;验证码登陆&#x27;&#125;&#125;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;text class=&quot;text-muted mx-2&quot;&gt;|&lt;/text&gt;</span><br><span class="line">&lt;view class=&quot;text-primary font-sm&quot;&gt;登录遇到问题&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;flex align-center justify-center&quot;&gt;</span><br><span class="line">&lt;view style=&quot;height: 1rpx;background-color: #dddddd;width: 100rpx;&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;view class=&quot;mx-2 text-muted&quot;&gt;社交账号登录&lt;/view&gt;</span><br><span class="line">&lt;view style=&quot;height: 1rpx;background-color: #dddddd;width: 100rpx;&quot;&gt;&lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;view class=&quot;flex align-center justify-center text-muted&quot;&gt;</span><br><span class="line">注册即代表同意&lt;text class=&quot;text-primary&quot;&gt;《xxx社区协议》&lt;/text&gt;</span><br><span class="line">&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">components: &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">username:&quot;&quot;,</span><br><span class="line">password:&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">// 提交</span><br><span class="line">submit()&#123;</span><br><span class="line">let data =&#123;</span><br><span class="line">username:this.username,</span><br><span class="line">password:this.password</span><br><span class="line">&#125;</span><br><span class="line">// 提交后端</span><br><span class="line">this.$H.post(url,data).then(res=&gt;&#123;</span><br><span class="line">console.log(res);</span><br><span class="line">// 修改vuex的state,持久化存储</span><br><span class="line">this.$store.commit(&#x27;login&#x27;,res)</span><br><span class="line"></span><br><span class="line">uni.showToast(&#123;</span><br><span class="line">title: &#x27;登录成功&#x27;,</span><br><span class="line">icon: &#x27;none&#x27;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;).catch(err=&gt;&#123;</span><br><span class="line">// 登录失败</span><br><span class="line">                    console.log(&#x27;登陆失败&#x27;)</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终效果：</p><p><img src="https://img-blog.csdnimg.cn/20201012181057403.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center=300x780" alt="在这里插入图片描述"></p><h2 id="五、（页面跳转、本地数据缓存）"><a href="#五、（页面跳转、本地数据缓存）" class="headerlink" title="五、（页面跳转、本地数据缓存）"></a>五、（页面跳转、本地数据缓存）</h2><h3 id="uniapp页面跳转方式"><a href="#uniapp页面跳转方式" class="headerlink" title="uniapp页面跳转方式"></a><a href="https://so.csdn.net/so/search?q=uniapp&spm=1001.2101.3001.7020">uniapp</a>页面跳转方式</h3><p><img src="https://img-blog.csdnimg.cn/20201013140742519.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201013151417721.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="1-uni-navigateTo-object"><a href="#1-uni-navigateTo-object" class="headerlink" title="1. uni.navigateTo(object)"></a>1. <code>uni.navigateTo(object)</code></h3><blockquote><p>保留当前页面，<code>跳转到新页面</code>，使用<code>uni.navigateBack()</code>可以返回到原页面。</p></blockquote><p><strong>navigator 组件跳转：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 跳转到 /pages/info/index.vue页面，注意此页面不可以是tabBar页面</span><br><span class="line">&lt;navigator url=&quot;/pages/info/index?key=100&amp;key2=300&quot; open-type=&quot;navigate&quot;&gt;</span><br><span class="line">     &lt;view class=&quot;uni-link-item&quot;&gt;点我跳转&lt;/view&gt;</span><br><span class="line">&lt;/navigator&gt;</span><br><span class="line"></span><br><span class="line">//  /pages/info/index.vue页面接受参数</span><br><span class="line">export default &#123;</span><br><span class="line">    onLoad: function (option) &#123; //option为object类型，会序列化上个页面传递的参数</span><br><span class="line">        console.log(option.key); //打印出上个页面传递的参数。</span><br><span class="line">        console.log(option.key2); //打印出上个页面传递的参数。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 在起始页面跳转到../components/test.vue页面并传递item=&#123;name:&quot;kity&quot;,id:1&#125; 参数,注意url有长度限制，过长会导致参数传递失败，可用encodeURIComponent方式解决。</span><br><span class="line">&lt;navigator :url=&quot;&#x27;/pages/info/index?item=&#x27;+ encodeURIComponent(JSON.stringify(item))&quot; open-type=&quot;navigate&quot;&gt;    </span><br><span class="line">   点我跳转</span><br><span class="line">&lt;/navigator&gt;</span><br><span class="line">export default &#123;</span><br><span class="line"></span><br><span class="line">// 接受参数</span><br><span class="line">onLoad: function (option) &#123;</span><br><span class="line">//解码后，并转换成对象</span><br><span class="line">     const item = JSON.parse(decodeURIComponent(option.item));</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>@tap事件调用API跳转转</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//在起始页面跳转到../components/test.vue页面并传递参数</span><br><span class="line">uni.navigateTo(&#123;</span><br><span class="line">    url: &#x27;../components/test?id=1&amp;name=uniapp&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 在test.vue页面接受参数</span><br><span class="line">export default &#123;</span><br><span class="line">    onLoad: function (option) &#123; //option为object类型，会序列化上个页面传递的参数</span><br><span class="line">        console.log(option.id); //打印出上个页面传递的参数。</span><br><span class="line">        console.log(option.name); //打印出上个页面传递的参数。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-uni-redirectTo-object"><a href="#2-uni-redirectTo-object" class="headerlink" title="2. uni.redirectTo(object)"></a>2. <code>uni.redirectTo(object)</code></h3><blockquote><p><code>在当前页面打开</code>，关闭当前页面，跳转到应用内的某个页面。不可以使用<code>uni.navigateBack()</code>可以返回到原页面。</p></blockquote><h3 id="3-uni-reLaunch-object"><a href="#3-uni-reLaunch-object" class="headerlink" title="3. uni.reLaunch(object)"></a>3. <code>uni.reLaunch(object)</code></h3><blockquote><p><code>关闭所有页面</code>，打开到应用内的某个页面。不可以使用<code>uni.navigateBack()</code>可以返回到原页面。</p></blockquote><h3 id="4-uni-switchTab-object"><a href="#4-uni-switchTab-object" class="headerlink" title="4. uni.switchTab(object)"></a>4. <code>uni.switchTab(object)</code></h3><blockquote><p><code>跳转到 tabBar 页面</code>，并关闭其他所有非 tabBar 页面。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pages.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;tabBar&quot;: &#123;</span><br><span class="line">    &quot;list&quot;: [&#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages/index/index&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;首页&quot;</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      &quot;pagePath&quot;: &quot;pages/other/other&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;其他&quot;</span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">other.vue</span><br><span class="line"></span><br><span class="line">uni.switchTab(&#123;</span><br><span class="line">    url: &#x27;/pages/index/index&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5-uni-navigateBack-object"><a href="#5-uni-navigateBack-object" class="headerlink" title="5. uni.navigateBack(object)"></a>5. <code>uni.navigateBack(object)</code></h3><blockquote><p>返回上一个页面</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 注意：调用 navigateTo 跳转时，调用该方法的页面会被加入堆栈，而 redirectTo 方法则不会。见下方示例代码</span><br><span class="line"></span><br><span class="line">// 此处是A页面</span><br><span class="line">uni.navigateTo(&#123;</span><br><span class="line">    url: &#x27;B?id=1&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 此处是B页面</span><br><span class="line">uni.navigateTo(&#123;</span><br><span class="line">    url: &#x27;C?id=1&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 在C页面内 navigateBack，将返回A页面</span><br><span class="line">uni.navigateBack(&#123;</span><br><span class="line">    delta: 2</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//如上 A--&gt;B--&gt;C , C返回A</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-uni-preloadPage-object"><a href="#6-uni-preloadPage-object" class="headerlink" title="6. uni.preloadPage(object)"></a>6. <code>uni.preloadPage(object)</code></h3><blockquote><p><code>预加载页面</code>，是一种性能优化技术。被预载的页面，在打开时速度更快。</p></blockquote><p>支持性不好，慎用<br><img src="https://img-blog.csdnimg.cn/20201013144619146.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">预加载 /pages/test/test 对应的js文件，不执行页面预渲染逻辑</span><br><span class="line"></span><br><span class="line">uni.preloadPage(&#123;url: &quot;/pages/test/test&quot;&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uni.preloadPage(&#123;url: &quot;/pages/test/test&quot;&#125;); // 预加载 /pages/test/test 页面（仅触发onLoad，onReady)</span><br><span class="line">uni.navigateTo(&#123;url: &quot;/pages/test/test&quot;&#125;); // url匹配，跳转预加载页面（仅触发onShow)</span><br><span class="line">uni.navigateTo(&#123;url: &quot;/pages/test/test?a=b&quot;&#125;); // url不匹配，正常打开新页面</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>想看更多请进入官网：<a href="https://uniapp.dcloud.io/api/router?id=navigateto">https://uniapp.dcloud.io/api/router?id=navigateto</a></p><h3 id="本地数据缓存"><a href="#本地数据缓存" class="headerlink" title="本地数据缓存"></a>本地数据缓存</h3><p><img src="https://img-blog.csdnimg.cn/20201013145624419.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="1-uni-setStorage-object"><a href="#1-uni-setStorage-object" class="headerlink" title="1. uni.setStorage(object)"></a>1. <code>uni.setStorage(object)</code></h3><blockquote><p>将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uni.setStorage(&#123;</span><br><span class="line">    key: &#x27;storage_key&#x27;,</span><br><span class="line">    data: &#x27;hello&#x27;,</span><br><span class="line">    success: function () &#123;</span><br><span class="line">        console.log(&#x27;success&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-uni-setStorageSync-KEY-DATA"><a href="#2-uni-setStorageSync-KEY-DATA" class="headerlink" title="2. uni.setStorageSync(KEY,DATA)"></a>2. <code>uni.setStorageSync(KEY,DATA)</code></h3><blockquote><p>将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    uni.setStorageSync(&#x27;storage_key&#x27;, &#x27;hello&#x27;);</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    // error</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-uni-getStorageSync-KEY"><a href="#3-uni-getStorageSync-KEY" class="headerlink" title="3. uni.getStorageSync(KEY)"></a>3. <code>uni.getStorageSync(KEY)</code></h3><blockquote><p>从本地缓存中同步获取指定 key 对应的内容。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    const value = uni.getStorageSync(&#x27;storage_key&#x27;);</span><br><span class="line">    if (value) &#123;</span><br><span class="line">        console.log(value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    // error</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-uni-removeStorageSync-KEY"><a href="#4-uni-removeStorageSync-KEY" class="headerlink" title="4. uni.removeStorageSync(KEY)"></a>4. <code>uni.removeStorageSync(KEY)</code></h3><blockquote><p>从本地缓存中同步移除指定 key。</p></blockquote><h3 id="5-uni-clearStorageSync"><a href="#5-uni-clearStorageSync" class="headerlink" title="5. uni.clearStorageSync()"></a>5. uni.clearStorageSync()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    uni.removeStorageSync(&#x27;storage_key&#x27;);</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    // error</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同步清理本地数据缓存。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">    uni.clearStorageSync();</span><br><span class="line">&#125; catch (e) &#123;</span><br><span class="line">    // error</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="六、（常用事件、生命周期）"><a href="#六、（常用事件、生命周期）" class="headerlink" title="六、（常用事件、生命周期）"></a>六、（常用事件、生命周期）</h2><h3 id="uniapp的生命周期"><a href="#uniapp的生命周期" class="headerlink" title="uniapp的生命周期"></a><a href="https://so.csdn.net/so/search?q=uniapp&spm=1001.2101.3001.7020">uniapp</a>的生命周期</h3><h4 id="1-应用级生命周期"><a href="#1-应用级生命周期" class="headerlink" title="1. 应用级生命周期"></a>1. 应用级<a href="https://so.csdn.net/so/search?q=%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F&spm=1001.2101.3001.7020">生命周期</a></h4><p><img src="https://img-blog.csdnimg.cn/20201013152820663.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>App.vue内定义的<a href="https://so.csdn.net/so/search?q=%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">钩子函数</a>就是<code>应用生命周期钩子函数</code><br><img src="https://img-blog.csdnimg.cn/20201013153143447.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>首次加载页面是触发<br><img src="https://img-blog.csdnimg.cn/2020101315335267.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h4 id="2-页面级生命周期"><a href="#2-页面级生命周期" class="headerlink" title="2. 页面级生命周期"></a>2. 页面级生命周期</h4><p><img src="https://img-blog.csdnimg.cn/20201013154423392.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view ref=&quot;ref&quot; class=&quot;test-container&quot;&gt;</span><br><span class="line">        &lt;text&gt;&#123;&#123;message&#125;&#125;&lt;/text&gt;</span><br><span class="line">        &lt;button @click=&quot;addMsg&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">    import &#123;</span><br><span class="line">        mapState,</span><br><span class="line">        mapMutations</span><br><span class="line">    &#125; from &#x27;vuex&#x27;;</span><br><span class="line">    var key = 0;</span><br><span class="line">    export default &#123;</span><br><span class="line"></span><br><span class="line">        data() &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">                message: 1</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        computed: &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods: &#123;</span><br><span class="line"></span><br><span class="line">            addMsg() &#123;</span><br><span class="line">                this.message++</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        beforeCreate() &#123;</span><br><span class="line">            console.group(&#x27;beforeCreate 组件创建之前状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        onLoad() &#123;</span><br><span class="line">            console.group(&#x27;onLoad 状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        onShow() &#123;</span><br><span class="line">            console.group(&#x27;onShow 状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        onReady() &#123;</span><br><span class="line">            console.group(&#x27;onReady 状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        onUnload() &#123;</span><br><span class="line">            console.group(&#x27;onUnload 状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot; , &quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        created() &#123;</span><br><span class="line">            console.group(&#x27;created 组件创建完毕状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        beforeMount() &#123;</span><br><span class="line">            console.group(&#x27;beforeMount 组件挂载之前状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + (this.$el));</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        mounted() &#123;</span><br><span class="line">            console.group(&#x27;mounted 组件挂载完毕状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        beforeUpdate() &#123;</span><br><span class="line">            console.group(&#x27;beforeUpdate 组件更新之前状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        updated() &#123;</span><br><span class="line">            console.group(&#x27;updated 组件更新完毕状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        beforeDestroy() &#123;</span><br><span class="line">            console.group(&#x27;beforeDestroy 组件销毁之前状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message);</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        destroyed() &#123;</span><br><span class="line">            console.group(&#x27;destroyed 组件销毁完毕状态===============》&#x27;);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;el     : &quot; + this.$el);</span><br><span class="line">            console.log(this.$el);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;data   : &quot; + this.$data);</span><br><span class="line">            console.log(&quot;%c%s&quot;, &quot;color:red&quot;,&quot;message: &quot; + this.message)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">    .test-container &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100vh;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        padding: 0upx 40upx;</span><br><span class="line">        button &#123;</span><br><span class="line">            margin-top: 100upx;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首次进入页面时：<br><img src="https://img-blog.csdnimg.cn/20201013154005358.png#pic_center" alt="在这里插入图片描述"><br>点击按钮修改数据时：<br><img src="https://img-blog.csdnimg.cn/20201013154049361.png#pic_center" alt="在这里插入图片描述"></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>Page页面生命周期函数执行顺序</strong></p><blockquote><p>beforeCreate &#x3D;&gt; onLoad &#x3D;&gt; onShow &#x3D;&gt; created &#x3D;&gt; beforeMount &#x3D;&gt; onReady &#x3D;&gt; mounted</p></blockquote><p><strong>刷新数据后</strong></p><blockquote><p>beforeUpdate &#x3D;&gt; updated</p></blockquote><h2 id="七、（下拉刷新、上拉加载）"><a href="#七、（下拉刷新、上拉加载）" class="headerlink" title="七、（下拉刷新、上拉加载）"></a>七、（下拉刷新、上拉加载）</h2><h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><p>定义 onPullDownRefresh 处理函数（和onLoad等<a href="https://so.csdn.net/so/search?q=%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F&spm=1001.2101.3001.7020">生命周期</a>函数同级），监听该页面用户下拉刷新事件。</p><ul><li>需要在 pages.json 里，找到的当前页面的pages节点，并在 style 选项中开启 enablePullDownRefresh。</li></ul><p><img src="https://img-blog.csdnimg.cn/20201013174732178.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在组件中使用下拉刷新：<br><img src="https://img-blog.csdnimg.cn/20201013174930515.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h3 id="上拉加载"><a href="#上拉加载" class="headerlink" title="上拉加载"></a>上拉加载</h3><blockquote><p>onReachBottom<br>页面滚动到底部的事件（不是<a href="https://so.csdn.net/so/search?q=scroll&spm=1001.2101.3001.7020">scroll</a>-view滚到底），常用于上拉加载下一页数据。如使用scroll-view导致页面级没有滚动，则触底事件不会被触发</p></blockquote><p>源码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;view class=&quot;box&quot;&gt;</span><br><span class="line">     &lt;view v-for=&quot;(item, index) in newsList&quot; class=&quot;newslist&quot;&gt;</span><br><span class="line">  &lt;view class=&quot;item&quot;&gt;  </span><br><span class="line">  &#123;&#123;item.title&#125;&#125;  </span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">     &lt;/view&gt;</span><br><span class="line">     &lt;view class=&quot;loading&quot;&gt;&#123;&#123;loadingText&#125;&#125;&lt;/view&gt;</span><br><span class="line"> &lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var _self, page = 1, timer = null;</span><br><span class="line">export default &#123;</span><br><span class="line"> data()&#123;</span><br><span class="line"> return&#123;</span><br><span class="line"> newsList:[],</span><br><span class="line"> loadingText:&#x27;加载中...&#x27;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> &#125;,</span><br><span class="line"> //页面加载</span><br><span class="line"> onLoad()&#123;</span><br><span class="line">  _self = this;</span><br><span class="line">  //获取首页数据</span><br><span class="line">   this.getnewsList()</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"> // 下拉刷新,初始化第一页数据</span><br><span class="line"> onPullDownRefresh()&#123;</span><br><span class="line">  this.getnewsList();</span><br><span class="line"> &#125;,</span><br><span class="line"> //页面滚动到底部的事件</span><br><span class="line"> onReachBottom()&#123;</span><br><span class="line">  if(timer != null)&#123;</span><br><span class="line">   clearTimeout(timer);</span><br><span class="line">  &#125;</span><br><span class="line">  timer = setTimeout(function()&#123;</span><br><span class="line">//加载更多数据</span><br><span class="line">   _self.getmorenews();</span><br><span class="line">  &#125;, 1000);</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  getmorenews()&#123;</span><br><span class="line">   if(_self.loadingText != &#x27;&#x27; &amp;&amp; _self.loadingText != &#x27;加载更多&#x27;)&#123;</span><br><span class="line">    return false;</span><br><span class="line">   &#125;</span><br><span class="line">   _self.loadingText = &#x27;加载中...&#x27;;</span><br><span class="line">   //在当前页面显示导航条加载动画。</span><br><span class="line">   uni.showNavigationBarLoading();</span><br><span class="line">   uni.request(&#123;</span><br><span class="line">   url: &#x27;https://ceshi2.dishait.cn/api/v1/postclass/1/post/&#x27;+page,</span><br><span class="line">    method: &#x27;GET&#x27;,</span><br><span class="line">    success: function(res)&#123;</span><br><span class="line">     _self.loadingText = &#x27;&#x27;;</span><br><span class="line">     if(res.data == null)&#123;</span><br><span class="line"> //在当前页面隐藏导航条加载动画。</span><br><span class="line">      uni.hideNavigationBarLoading();</span><br><span class="line">      _self.loadingText = &#x27;已加载全部&#x27;;</span><br><span class="line">      return false;</span><br><span class="line">     &#125;</span><br><span class="line">     page++;</span><br><span class="line">     console.log(res);</span><br><span class="line">     _self.newsList = _self.newsList.concat(res.data.data.list);</span><br><span class="line">     _self.loadingText = &#x27;加载更多&#x27;;</span><br><span class="line">     uni.hideNavigationBarLoading();</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  getnewsList()&#123;</span><br><span class="line">   page = 1;</span><br><span class="line">   uni.showNavigationBarLoading();</span><br><span class="line">   uni.request(&#123;</span><br><span class="line">    url: `https://ceshi2.dishait.cn/api/v1/postclass/1/post/$&#123;page&#125;`,</span><br><span class="line">    method: &#x27;GET&#x27;,</span><br><span class="line">    success: function(res)&#123;</span><br><span class="line">console.log(res)</span><br><span class="line">     page++;</span><br><span class="line">     _self.newsList = res.data.data.list;</span><br><span class="line">     uni.hideNavigationBarLoading();</span><br><span class="line">     uni.stopPullDownRefresh();</span><br><span class="line">     _self.loadingText = &#x27;加载更多&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.box&#123;</span><br><span class="line">width: 100vw;</span><br><span class="line">height: 100vh;</span><br><span class="line">&#125;</span><br><span class="line">.item&#123;</span><br><span class="line">width: 100vw;</span><br><span class="line">height: 200rpx;</span><br><span class="line">border: 1rpx solid gray;</span><br><span class="line">text-align: center;</span><br><span class="line">line-height: 200rpx;</span><br><span class="line">&#125;</span><br><span class="line">.loading&#123;</span><br><span class="line">text-align: center;</span><br><span class="line">color: #8F8F94;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如图：<br><img src="https://img-blog.csdnimg.cn/20201013175552198.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="八、小程序打包发布"><a href="#八、小程序打包发布" class="headerlink" title="八、小程序打包发布"></a>八、小程序打包发布</h2><p>1、在项目的manifest.json中<br>选择小程序,配置AppID<br><img src="https://img-blog.csdnimg.cn/20201016164016488.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>2、在微信小程序后台配置线上合法域名<br>登陆微信公众平台–&gt;开发—-&gt;开发设置—&gt;服务器域名<br>添加项目用到的域名<br><img src="https://img-blog.csdnimg.cn/20201016164537350.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>\3. 打包，HbuilderX 发行—&gt;小程序<br><img src="https://img-blog.csdnimg.cn/20201016171037824.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>填写小程序名，和APPId，点击发行。(这里的小程序名字是无意义的，但是要有，具体的小程序名字是在微信公众平台配置的。)<br><img src="https://img-blog.csdnimg.cn/20201016170900285.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来会在项目<a href="https://so.csdn.net/so/search?q=%E6%A0%B9%E7%9B%AE%E5%BD%95&spm=1001.2101.3001.7020">根目录</a>下生产unpackage—&gt;dist—build—mp-weixin目录<br>小程序开发者工具会自动启动<br>点击开发者工具右上角 上传<br><img src="https://img-blog.csdnimg.cn/20201016171627341.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>填写版本号，备注，点击上传。<br><img src="https://img-blog.csdnimg.cn/20201016171721339.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>此控制台报错，上传失败<br><img src="https://img-blog.csdnimg.cn/20201016171806685.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>改：<img src="https://img-blog.csdnimg.cn/20201016171900881.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这样每次编译系统自动会生成sitemap.json<br>然后重新点击上传。提示上传成功(<strong>每个包不能超过2M，整个程序不能超过12M</strong>)</p><p>登陆微信小程序公众平台<br><img src="https://img-blog.csdnimg.cn/20201016173021216.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201016173320790.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201016173703261.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201016173846580.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>提交审核通过后 ，点击前往发布。<br><img src="https://img-blog.csdnimg.cn/20201016174003308.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYzODk2OA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>上线完毕</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;uniAPP开发-全教程&quot;&gt;&lt;a href=&quot;#uniAPP开发-全教程&quot; class=&quot;headerlink&quot; title=&quot;uniAPP开发 全教程&quot;&gt;&lt;/a&gt;uniAPP开发 全教程&lt;/h1&gt;&lt;h2 id=&quot;一、-项目创建、tabbar配置、运行&quot;&gt;&lt;a h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>从零玩转第三方登录之QQ登录</title>
    <link href="http://example.com/2022/09/01/%E4%BB%8E%E9%9B%B6%E7%8E%A9%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E4%B9%8BQQ%E7%99%BB%E5%BD%95/"/>
    <id>http://example.com/2022/09/01/%E4%BB%8E%E9%9B%B6%E7%8E%A9%E8%BD%AC%E7%AC%AC%E4%B8%89%E6%96%B9%E7%99%BB%E5%BD%95%E4%B9%8BQQ%E7%99%BB%E5%BD%95/</id>
    <published>2022-09-01T01:59:17.000Z</published>
    <updated>2022-09-01T01:59:25.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从零玩转第三方登录之QQ登录"><a href="#从零玩转第三方登录之QQ登录" class="headerlink" title="从零玩转第三方登录之QQ登录"></a>从零玩转第三方登录之QQ登录</h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在真正开始对接之前，我们先来聊一聊后台的方案设计。既然是对接第三方登录，那就免不了如何将用户信息保存。首先需要明确一点的是，用户在第三方登录成功之后，<br>我们能拿到的仅仅是一个代表用户唯一身份的ID（微博是真实uid，QQ是加密的openID）以及用来识别身份的accessToken，当然还有昵称、头像、性别等有限资料，<br>对接第三方登录的关键就是如何确定用户是合法登录，如果确定这次登录的和上次登录的是同一个人并且不是假冒的。其实这个并不用我们特别操心，就以微博登录为例，<br>用户登录成功之后会回调一个code给我们，然后我们再拿code去微博那换取 accessToken ，如果这个code是用户乱填的，那这一关肯定过不了，所以，前面的担心有点多余，哈哈。</p><h1 id="1-认识Oauth2-0"><a href="#1-认识Oauth2-0" class="headerlink" title="1. 认识Oauth2.0"></a>1. 认识Oauth2.0</h1><p>现在很多网站都要不管是为了引流也好，为了用户方便也好一般都有第三方账号登陆的需求，今天以QQ登陆为例，来实现一个最简单的第三方登陆。<br>目前主流的第三方登录都是依赖的Oauth2.0实现的，最常见的就是在各种中小型网站或者App中的QQ登录，微信登录等等。所以我建议想要学习和实现第三方登录同学去了解下这个协议。</p><h3 id="必须要域名并且进行备案"><a href="#必须要域名并且进行备案" class="headerlink" title="必须要域名并且进行备案"></a>必须要域名并且进行备案</h3><p>比如我的域名： <a href="https://lianlihe.com/">https://lianlihe.com</a><br>因为腾讯有一个域名认证机制啥的。。。。。。</p><p>2.实名认证<br>QQ登录我们对接的是QQ互联，地址：<code>https://connect.qq.com</code> ,首先需要注册成为开发者并实名认证，需要手持身份证照片，具体就不讲了。</p><h3 id="2-1、进行申请开发者身份"><a href="#2-1、进行申请开发者身份" class="headerlink" title="2.1、进行申请开发者身份"></a>2.1、进行申请开发者身份</h3><h3 id="2-2-创建应用"><a href="#2-2-创建应用" class="headerlink" title="2.2 创建应用"></a>2.2 创建应用</h3><h4 id="进入应用管理页面创建应用，根据实际需要是创建网站应用还是移动应用，我这里是网站应用："><a href="#进入应用管理页面创建应用，根据实际需要是创建网站应用还是移动应用，我这里是网站应用：" class="headerlink" title="进入应用管理页面创建应用，根据实际需要是创建网站应用还是移动应用，我这里是网站应用："></a>进入应用管理页面创建应用，根据实际需要是创建网站应用还是移动应用，我这里是网站应用：</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824085227037.png" alt="image-20220824085227037"><br><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824085155054.png" alt="image-20220824085155054"></p><h4 id="提交成功完步后等待客服审核即可"><a href="#提交成功完步后等待客服审核即可" class="headerlink" title="提交成功完步后等待客服审核即可"></a>提交成功完步后等待客服审核即可</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824085138315.png" alt="image-20220824085138315"></p><h4 id="这是我网站的基本接口信息"><a href="#这是我网站的基本接口信息" class="headerlink" title="这是我网站的基本接口信息"></a>这是我网站的基本接口信息</h4><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824085239345.png" alt="image-20220824085239345"></p><h1 id="QQ登陆流程"><a href="#QQ登陆流程" class="headerlink" title="QQ登陆流程"></a>QQ登陆流程</h1><p><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486864749.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486864749"></p><h4 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h4><p><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486872297.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486872297"></p><h1 id="创建springboot工程"><a href="#创建springboot工程" class="headerlink" title="创建springboot工程"></a>创建springboot工程</h1><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- qq登陆集成 开始 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpcore&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">4.4</span><span class="number">.11</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">4.5</span><span class="number">.8</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpasyncclient&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpmime&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--json转换工具--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;gson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.8</span><span class="number">.5</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--QQSDK--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.gplatform&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;Sdk4J&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">2.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">1.2</span><span class="number">.62</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- qq登陆集成 结束 --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 模板 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- 其它配置 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;<span class="literal">true</span>&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><h3 id="创建http请求工具"><a href="#创建http请求工具" class="headerlink" title="创建http请求工具"></a>创建http请求工具</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.config.RequestConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.conn.ssl.TrustStrategy;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.entity.StringEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.ssl.SSLContextBuilder;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.security.GeneralSecurityException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HttpsUtils</span> &#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> PoolingHttpClientConnectionManager connMgr;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> RequestConfig requestConfig;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">MAX_TIMEOUT</span> <span class="operator">=</span> <span class="number">7000</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(HttpsUtils.class);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="comment">// 设置连接池</span></span><br><span class="line">            connMgr = <span class="keyword">new</span> <span class="title class_">PoolingHttpClientConnectionManager</span>();</span><br><span class="line">            <span class="comment">// 设置连接池大小</span></span><br><span class="line">            connMgr.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">            connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());</span><br><span class="line">            <span class="comment">// Validate connections after 1 sec of inactivity</span></span><br><span class="line">            connMgr.setValidateAfterInactivity(<span class="number">1000</span>);</span><br><span class="line">            RequestConfig.<span class="type">Builder</span> <span class="variable">configBuilder</span> <span class="operator">=</span> RequestConfig.custom();</span><br><span class="line">            <span class="comment">// 设置连接超时</span></span><br><span class="line">            configBuilder.setConnectTimeout(MAX_TIMEOUT);</span><br><span class="line">            <span class="comment">// 设置读取超时</span></span><br><span class="line">            configBuilder.setSocketTimeout(MAX_TIMEOUT);</span><br><span class="line">            <span class="comment">// 设置从连接池获取连接实例的超时</span></span><br><span class="line">            configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);</span><br><span class="line">            </span><br><span class="line">            requestConfig = configBuilder.build();</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送 GET 请求（HTTP），不带输入数据</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> doGet(url, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;());</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送 GET 请求（HTTP），K-V形式</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGet</span><span class="params">(String url, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">apiUrl</span> <span class="operator">=</span> url;</span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">param</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</span><br><span class="line">                  <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                        param.append(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                        param.append(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">                  param.append(key).append(<span class="string">&quot;=&quot;</span>).append(params.get(key));</span><br><span class="line">                  i++;</span><br><span class="line">            &#125;</span><br><span class="line">            apiUrl += param;</span><br><span class="line">            <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">HttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">                  httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                        .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  httpClient = HttpClients.createDefault();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                  <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(apiUrl);</span><br><span class="line">                  <span class="type">HttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpClient.execute(httpGet);</span><br><span class="line">                  <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                  <span class="keyword">if</span> (entity != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="type">InputStream</span> <span class="variable">instream</span> <span class="operator">=</span> entity.getContent();</span><br><span class="line">                        result = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(instream)).lines().collect(Collectors.joining(System.lineSeparator()));</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                  logger.error(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送 POST 请求（HTTP），不带输入数据</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> apiUrl</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> doPost(apiUrl, <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;());</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送 POST 请求，K-V形式</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> apiUrl API接口URL</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> params 参数map</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl, Map&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line">            <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">                  httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                        .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  httpClient = HttpClients.createDefault();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">httpStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(apiUrl);</span><br><span class="line">            <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                  httpPost.setConfig(requestConfig);</span><br><span class="line">                  List&lt;NameValuePair&gt; pairList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(params.size());</span><br><span class="line">                  <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : params.entrySet()) &#123;</span><br><span class="line">                        <span class="type">NameValuePair</span> <span class="variable">pair</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BasicNameValuePair</span>(entry.getKey(), entry.getValue().toString());</span><br><span class="line">                        pairList.add(pair);</span><br><span class="line">                  &#125;</span><br><span class="line">                  httpPost.setEntity(<span class="keyword">new</span> <span class="title class_">UrlEncodedFormEntity</span>(pairList, Charset.forName(<span class="string">&quot;UTF-8&quot;</span>)));</span><br><span class="line">                  response = httpClient.execute(httpPost);</span><br><span class="line">                  <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                  httpStr = EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                  logger.error(e.getMessage());</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                  <span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                              EntityUtils.consume(response.getEntity());</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                              logger.error(e.getMessage());</span><br><span class="line">                        &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> httpStr;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送 POST 请求，JSON形式</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> apiUrl</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> json   json对象</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doPost</span><span class="params">(String apiUrl, Object json)</span> &#123;</span><br><span class="line">            <span class="type">CloseableHttpClient</span> <span class="variable">httpClient</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (apiUrl.startsWith(<span class="string">&quot;https&quot;</span>)) &#123;</span><br><span class="line">                  httpClient = HttpClients.custom().setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class="line">                        .setConnectionManager(connMgr).setDefaultRequestConfig(requestConfig).build();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  httpClient = HttpClients.createDefault();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">httpStr</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="type">HttpPost</span> <span class="variable">httpPost</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpPost</span>(apiUrl);</span><br><span class="line">            <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                  httpPost.setConfig(requestConfig);</span><br><span class="line">                  <span class="type">StringEntity</span> <span class="variable">stringEntity</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringEntity</span>(json.toString(), <span class="string">&quot;UTF-8&quot;</span>);<span class="comment">// 解决中文乱码问题</span></span><br><span class="line">                  stringEntity.setContentEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">                  stringEntity.setContentType(<span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">                  httpPost.setEntity(stringEntity);</span><br><span class="line">                  response = httpClient.execute(httpPost);</span><br><span class="line">                  <span class="type">HttpEntity</span> <span class="variable">entity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                  httpStr = EntityUtils.toString(entity, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                  logger.error(e.getMessage());</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                  <span class="keyword">if</span> (response != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                              EntityUtils.consume(response.getEntity());</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                              logger.error(e.getMessage());</span><br><span class="line">                        &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> httpStr;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 创建SSL安全连接</span></span><br><span class="line"><span class="comment">       *</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> SSLConnectionSocketFactory <span class="title function_">createSSLConnSocketFactory</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">SSLConnectionSocketFactory</span> <span class="variable">sslsf</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                  <span class="type">SSLContext</span> <span class="variable">sslContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SSLContextBuilder</span>().loadTrustMaterial(<span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">TrustStrategy</span>() &#123;</span><br><span class="line">                        </span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isTrusted</span><span class="params">(X509Certificate[] chain, String authType)</span> <span class="keyword">throws</span> CertificateException &#123;</span><br><span class="line">                              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                  &#125;).build();</span><br><span class="line">                  sslsf = <span class="keyword">new</span> <span class="title class_">SSLConnectionSocketFactory</span>(sslContext, <span class="keyword">new</span> <span class="title class_">HostnameVerifier</span>() &#123;</span><br><span class="line">                        </span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">verify</span><span class="params">(String arg0, SSLSession arg1)</span> &#123;</span><br><span class="line">                              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                  &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (GeneralSecurityException e) &#123;</span><br><span class="line">                  logger.error(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sslsf;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*gitHub开始*/</span></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 发送get请求，利用java代码发送请求</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">doGetHub</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="type">CloseableHttpClient</span> <span class="variable">httpclient</span> <span class="operator">=</span> HttpClients.createDefault();</span><br><span class="line">            </span><br><span class="line">            <span class="type">HttpGet</span> <span class="variable">httpGet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HttpGet</span>(url);</span><br><span class="line">            <span class="comment">// 发送了一个http请求</span></span><br><span class="line">            <span class="type">CloseableHttpResponse</span> <span class="variable">response</span> <span class="operator">=</span> httpclient.execute(httpGet);</span><br><span class="line">            <span class="comment">// 如果响应200成功,解析响应结果</span></span><br><span class="line">            <span class="keyword">if</span>(response.getStatusLine().getStatusCode()==<span class="number">200</span>)&#123;</span><br><span class="line">                  <span class="comment">// 获取响应的内容</span></span><br><span class="line">                  <span class="type">HttpEntity</span> <span class="variable">responseEntity</span> <span class="operator">=</span> response.getEntity();</span><br><span class="line">                  </span><br><span class="line">                  <span class="keyword">return</span> EntityUtils.toString(responseEntity);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 将字符串转换成map</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> responseEntity</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,String&gt; <span class="title function_">getMap</span><span class="params">(String responseEntity)</span> &#123;</span><br><span class="line">            </span><br><span class="line">            Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="comment">// 以&amp;来解析字符串</span></span><br><span class="line">            String[] result = responseEntity.split(<span class="string">&quot;\\&amp;&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (String str : result) &#123;</span><br><span class="line">                  <span class="comment">// 以=来解析字符串</span></span><br><span class="line">                  String[] split = str.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">                  <span class="comment">// 将字符串存入map中</span></span><br><span class="line">                  <span class="keyword">if</span> (split.length == <span class="number">1</span>) &#123;</span><br><span class="line">                        map.put(split[<span class="number">0</span>], <span class="literal">null</span>);</span><br><span class="line">                  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        map.put(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line">                  &#125;</span><br><span class="line">                  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 通过json获得map</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@param</span> responseEntity</span></span><br><span class="line"><span class="comment">       * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,String&gt; <span class="title function_">getMapByJson</span><span class="params">(String responseEntity)</span> &#123;</span><br><span class="line">            Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">            <span class="comment">// 阿里巴巴fastjson  将json转换成map</span></span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> JSONObject.parseObject(responseEntity);</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; entry : jsonObject.entrySet()) &#123;</span><br><span class="line">                  <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">                  <span class="comment">// 将obj转换成string</span></span><br><span class="line">                  <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> String.valueOf(entry.getValue()) ;</span><br><span class="line">                  map.put(key, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/*gitHub结束*/</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><h3 id="创建跨域配置类-以防万一出现跨域问题"><a href="#创建跨域配置类-以防万一出现跨域问题" class="headerlink" title="创建跨域配置类 以防万一出现跨域问题"></a>创建跨域配置类 以防万一出现跨域问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsAutoConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">urlBasedCorsConfigurationSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 表示什么域名跨域 *表示全部都跨域</span></span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 注入进去</span></span><br><span class="line">        urlBasedCorsConfigurationSource.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="type">CorsFilter</span> <span class="variable">corsFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(urlBasedCorsConfigurationSource);</span><br><span class="line">        <span class="keyword">return</span> corsFilter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建Logincontroller"><a href="#创建Logincontroller" class="headerlink" title="创建Logincontroller"></a>创建Logincontroller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> top.yangbuyi.QQ.OAuthProperties;</span><br><span class="line"><span class="keyword">import</span> top.yangbuyi.QQ.vo.QQDTO;</span><br><span class="line"><span class="keyword">import</span> top.yangbuyi.QQ.vo.QQOpenidDTO;</span><br><span class="line"><span class="keyword">import</span> top.yangbuyi.common.HttpsUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.management.RuntimeErrorException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.websocket.server.PathParam;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;api&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">loginController</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 认证参数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@Autowired</span></span><br><span class="line">  <span class="keyword">private</span> OAuthProperties oauth;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 调用QQ登陆接口</span></span><br><span class="line"><span class="comment">   * 流程： 先调用接口获取code，在根据code获取access_token,在根据token获取对应的用户信息</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@GetMapping(&quot;/login/oauth&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loginQQ</span><span class="params">(  HttpServletResponse response)</span> &#123;</span><br><span class="line"><span class="comment">// 重定向访问QQ登录服务器</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  response.sendRedirect(oauth.getQQ().getCode_callback_uri() + <span class="comment">//获取code码地址</span></span><br><span class="line">  <span class="string">&quot;?client_id=&quot;</span> + oauth.getQQ().getClient_id() <span class="comment">//appid</span></span><br><span class="line">  +<span class="string">&quot;&amp;state=&quot;</span> + UUID.randomUUID() + <span class="comment">//这个说是防攻击的，就给个随机uuid吧</span></span><br><span class="line">  <span class="string">&quot;&amp;redirect_uri=&quot;</span> + oauth.getQQ().getRedirect_uri() +<span class="comment">//这个很重要，这个是回调地址，即就收腾讯返回的code码</span></span><br><span class="line">  <span class="string">&quot;&amp;response_type=code&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">  e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 在qq平台设置的回调地址</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * 接收回调地址带过来的code码</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="meta">@GetMapping(&quot;/oauth2&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">authorizeQQ</span><span class="params">(String code, HttpServletRequest request)</span> &#123;</span><br><span class="line">HashMap&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">params.put(<span class="string">&quot;code&quot;</span>, code);</span><br><span class="line">params.put(<span class="string">&quot;grant_type&quot;</span>, <span class="string">&quot;authorization_code&quot;</span>);</span><br><span class="line">params.put(<span class="string">&quot;redirect_uri&quot;</span>, oauth.getQQ().getRedirect_uri());</span><br><span class="line">params.put(<span class="string">&quot;client_id&quot;</span>, oauth.getQQ().getClient_id());</span><br><span class="line">params.put(<span class="string">&quot;client_secret&quot;</span>, oauth.getQQ().getClient_secret());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取腾讯access token</span></span><br><span class="line">Map&lt;String, String&gt; reulsts = getAccess_token(params);</span><br><span class="line">System.out.println(<span class="string">&quot;遍历拿到的数据:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : reulsts.entrySet()) &#123;</span><br><span class="line">  System.out.println(entry.getKey() + <span class="string">&quot;=&quot;</span> + entry.getValue());</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;遍历完毕&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//到这里access_token已经处理好了</span></span><br><span class="line"><span class="comment">//下一步获取openid，只有拿到openid才能拿到用户信息</span></span><br><span class="line"><span class="type">String</span> <span class="variable">openidContent</span> <span class="operator">=</span> HttpsUtils.doGet(oauth.getQQ().getOpenid_callback_uri() + <span class="string">&quot;?access_token=&quot;</span> + reulsts.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line"><span class="comment">// callback( &#123;&quot;client_id&quot;:&quot;101887062&quot;,&quot;openid&quot;:&quot;74DD1353321FD56375F34422D833848D&quot;&#125; );</span></span><br><span class="line">System.out.println(<span class="string">&quot;openidContent: &quot;</span> + openidContent);</span><br><span class="line"></span><br><span class="line"><span class="comment">//接下来对openid进行处理</span></span><br><span class="line"><span class="comment">//截取需要的那部分json字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">openid</span> <span class="operator">=</span> openidContent.substring(openidContent.indexOf(<span class="string">&quot;&#123;&quot;</span>), openidContent.indexOf(<span class="string">&quot;&#125;&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">// json 转 对象</span></span><br><span class="line"><span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"><span class="comment">//将返回的openid转换成DTO</span></span><br><span class="line"><span class="type">QQOpenidDTO</span> <span class="variable">qqOpenidDTO</span> <span class="operator">=</span> gson.fromJson(openid, QQOpenidDTO.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装参数 请求用户信息数据</span></span><br><span class="line">params.clear();</span><br><span class="line"><span class="comment">//设置access_token</span></span><br><span class="line">params.put(<span class="string">&quot;access_token&quot;</span>, reulsts.get(<span class="string">&quot;access_token&quot;</span>));</span><br><span class="line"><span class="comment">//设置openid</span></span><br><span class="line">params.put(<span class="string">&quot;openid&quot;</span>, qqOpenidDTO.getOpenid());</span><br><span class="line"><span class="comment">//设置appid</span></span><br><span class="line">params.put(<span class="string">&quot;oauth_consumer_key&quot;</span>, qqOpenidDTO.getClient_id());</span><br><span class="line"><span class="comment">//获取用户信息</span></span><br><span class="line"><span class="type">String</span> <span class="variable">userInfo</span> <span class="operator">=</span> HttpsUtils.doGet(oauth.getQQ().getUser_info_callback_uri(), params);</span><br><span class="line"><span class="type">QQDTO</span> <span class="variable">qqDTO</span> <span class="operator">=</span> gson.fromJson(userInfo, QQDTO.class);</span><br><span class="line"><span class="comment">// （正常情况下，在开发时候用openid作为用户名，再自己定义个密码就可以了）</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 组装数据 */</span></span><br><span class="line">  HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">  map.put(<span class="string">&quot;user&quot;</span>, qqDTO);</span><br><span class="line">  map.put(<span class="string">&quot;qqOpenidDTO&quot;</span>, qqOpenidDTO);</span><br><span class="line">  request.setAttribute(<span class="string">&quot;map&quot;</span>, map);</span><br><span class="line">  log.info(<span class="string">&quot;user数据:&#123;&#125;&quot;</span> + qqDTO);</span><br><span class="line">  log.info(<span class="string">&quot;qqOpenidDTO数据:&#123;&#125;&quot;</span> + qqOpenidDTO);</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;home&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">  e.printStackTrace();</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取腾讯 access_token</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">getAccess_token</span><span class="params">(HashMap&lt;String, Object&gt; params)</span> &#123;</span><br><span class="line"><span class="comment">// 认证地址</span></span><br><span class="line"><span class="comment">//获取access_token如：access_token=9724892714FDF1E3ED5A4C6D074AF9CB&amp;expires_in=7776000&amp;refresh_token=9E0DE422742ACCAB629A54B3BFEC61FF</span></span><br><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> HttpsUtils.doGet(oauth.getQQ().getAccess_token_callback_uri(), params);</span><br><span class="line"><span class="comment">//对拿到的数据进行切割字符串</span></span><br><span class="line">String[] strings = result.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line"><span class="comment">//切割好后放进map</span></span><br><span class="line">Map&lt;String, String&gt; reulsts = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (String str : strings) &#123;</span><br><span class="line">  String[] split = str.split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (split.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">reulsts.put(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> reulsts;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><h3 id="创建QQ参数实体类"><a href="#创建QQ参数实体类" class="headerlink" title="创建QQ参数实体类"></a>创建QQ参数实体类</h3><h4 id="创建-OAuthProperties-用于配合yml配置文件动态获取参数"><a href="#创建-OAuthProperties-用于配合yml配置文件动态获取参数" class="headerlink" title="创建 OAuthProperties 用于配合yml配置文件动态获取参数"></a>创建 OAuthProperties 用于配合yml配置文件动态获取参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取Code码</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//对应application.yml中，oauth下参数</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;oauth&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OAuthProperties</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//获取applicaiton.yml下qq下所有的参数</span></span><br><span class="line">      <span class="keyword">private</span> <span class="type">QQProperties</span> <span class="variable">qq</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QQProperties</span>();</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">public</span> QQProperties <span class="title function_">getQQ</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> qq;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setQQ</span><span class="params">(QQProperties qq)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.qq = qq;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建-QQProperties-用于请求qq的参数"><a href="#创建-QQProperties-用于请求qq的参数" class="headerlink" title="创建 QQProperties 用于请求qq的参数"></a>创建 QQProperties 用于请求qq的参数</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 集成第三方登陆 QQ  参数</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QQProperties</span> &#123;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 你的appid</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String client_id;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       *  #你的appkey</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String client_secret;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 你接收响应code码地址</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String redirect_uri;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 腾讯获取code码地址</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String code_callback_uri;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 腾讯获取access_token地址</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String access_token_callback_uri;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 腾讯获取openid地址</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String openid_callback_uri;</span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 腾讯获取用户信息地址</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String user_info_callback_uri;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 要回调到哪个网站</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line">      <span class="keyword">private</span> String redirect_url_index_yby;</span><br><span class="line">      <span class="keyword">private</span> String redirect_url_login_yby;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><h3 id="创建-QQOpenidDTO-用于获取-access-token、openid"><a href="#创建-QQOpenidDTO-用于获取-access-token、openid" class="headerlink" title="创建 QQOpenidDTO 用于获取 access_token、openid"></a>创建 QQOpenidDTO 用于获取 access_token、openid</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QQOpenidDTO</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">private</span> String openid;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">private</span> String client_id;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建QQDTO-接收QQ返回来的json参数"><a href="#创建QQDTO-接收QQ返回来的json参数" class="headerlink" title="创建QQDTO 接收QQ返回来的json参数"></a>创建QQDTO 接收QQ返回来的json参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QQDTO</span> &#123;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">private</span> String ret;        <span class="comment">//返回码</span></span><br><span class="line">      <span class="keyword">private</span> String msg;        <span class="comment">//如果ret&lt;0，会有相应的错误信息提示，返回数据全部用UTF-8编码。</span></span><br><span class="line">      <span class="keyword">private</span> String nickname;             <span class="comment">//用户在QQ空间的昵称。</span></span><br><span class="line">      <span class="keyword">private</span> String figureurl;              <span class="comment">//大小为30×30像素的QQ空间头像URL。</span></span><br><span class="line">      <span class="keyword">private</span> String figureurl_1;                <span class="comment">//大小为50×50像素的QQ空间头像URL。</span></span><br><span class="line">      <span class="keyword">private</span> String figureurl_2;                <span class="comment">//大小为100×100像素的QQ空间头像URL。</span></span><br><span class="line">      <span class="keyword">private</span> String figureurl_qq_1;                   <span class="comment">//大小为40×40像素的QQ头像URL。</span></span><br><span class="line">      <span class="keyword">private</span> String figureurl_qq_2;                   <span class="comment">//大小为100×100像素的QQ头像URL。需要注意，不是所有的用户都拥有QQ的100x100的头像，但40x40像素则是一定会有。</span></span><br><span class="line">      <span class="keyword">private</span> String gender;           <span class="comment">//性别。 如果获取不到则默认返回&quot;男&quot;</span></span><br><span class="line">      <span class="keyword">private</span> Integer gendertype; <span class="comment">// 性别 数字</span></span><br><span class="line">      <span class="keyword">private</span> String is_yellow_vip;                  <span class="comment">//标识用户是否为黄钻用户（0：不是；1：是）。</span></span><br><span class="line">      <span class="keyword">private</span> String vip;        <span class="comment">//标识用户是否为黄钻用户（0：不是；1：是）</span></span><br><span class="line">      <span class="keyword">private</span> String yellow_vip_level;                     <span class="comment">//黄钻等级</span></span><br><span class="line">      <span class="keyword">private</span> String level;          <span class="comment">//黄钻等级</span></span><br><span class="line">      <span class="keyword">private</span> String is_yellow_year_vip;                       <span class="comment">//标识是否为年费黄钻用户（0：不是； 1：是）</span></span><br><span class="line">      <span class="keyword">private</span> String province; <span class="comment">// 省</span></span><br><span class="line">      <span class="keyword">private</span> String city; <span class="comment">// 市</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><p>示例</p><h3 id="创建前端请求跳转-controller"><a href="#创建前端请求跳转-controller" class="headerlink" title="创建前端请求跳转 controller"></a>创建前端请求跳转 controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestController</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;login&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;登陆进来啦&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@RequestMapping(&quot;home&quot;)</span></span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">home</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;home&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建前端页面"><a href="#创建前端页面" class="headerlink" title="创建前端页面"></a>创建前端页面</h3><p><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486913828.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486913828"></p><h4 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    登录地址    action=&quot;/api/login/oauth&quot;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/api/login/oauth&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background: red;size: 25px&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登陆&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="home-html"><a href="#home-html" class="headerlink" title="home.html"></a>home.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>登陆成功<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;openID :&#x27; + $&#123;map.qqOpenidDTO.openid&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;用户名称 :&#x27; + $&#123;map.user.nickname&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        用户头像:</span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;map.user.figureurl_qq_1&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;map.user.figureurl_qq_1&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;$&#123;map.user.figureurl_qq_2&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        性别:</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.gender&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.yellow_vip_level&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.is_yellow_year_vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.province&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;map.user.city&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--参数列表:--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String ret; //返回码--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String msg; //如果ret&lt;0，会有相应的错误信息提示，返回数据全部用UTF-8编码。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String nickname; //用户在QQ空间的昵称。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String figureurl; //大小为30×30像素的QQ空间头像URL。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String figureurl_1; //大小为50×50像素的QQ空间头像URL。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String figureurl_2; //大小为100×100像素的QQ空间头像URL。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String figureurl_qq_1; //大小为40×40像素的QQ头像URL。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String figureurl_qq_2; //大小为100×100像素的QQ头像URL。需要注意，不是所有的用户都拥有QQ的100x100的头像，但40x40像素则是一定会有。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String gender; //性别。 如果获取不到则默认返回&quot;男&quot;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private Integer gendertype; // 性别 数字--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String is_yellow_vip; //标识用户是否为黄钻用户（0：不是；1：是）。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String vip; //标识用户是否为黄钻用户（0：不是；1：是）--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String yellow_vip_level; //黄钻等级--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String level; //黄钻等级--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String is_yellow_year_vip; //标识是否为年费黄钻用户（0：不是； 1：是）--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String province; // 省--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--private String city; // 市--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>***&lt;已自动折叠&gt;***</p><h3 id="启动注意事项"><a href="#启动注意事项" class="headerlink" title="启动注意事项"></a>启动注意事项</h3><p>必须要打包到服务器启动QQ才能回调</p><h1 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h1><p>方案一:</p><p>点击package 打包<br><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824090640684.png" alt="image-20220824090640684"></p><p><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486934679.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486934679"></p><p>修改application.yml 中的端口为 80<br><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486947672.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486947672"><br>运行 Java程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar qqlogindemo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>启动成功<br><img src="https://qiniu.yangbuyi.top/yby-img/image-1653486997680.png?imageView2/0/q/75%7Cwatermark/2/text/d3d3LnlhbmdidXlpLnRvcA==/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzA2MDYwNg==/dissolve/100/gravity/SouthEast/dx/10/dy/10%7Cwatermark/2/text/5p2o5LiN5piT/font/5b6u6L2v6ZuF6buR/fontsize/440/fill/IzAzMDMwMw==/dissolve/100/gravity/NorthWest/dx/10/dy/10" alt="image-1653486997680"></p><p>访问 login 页面</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824090626460.png" alt="image-20220824090626460"></p><p>点击登录 》 QQ扫码或者密码登录 》 登录成功 跳转到 home</p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824090617568.png" alt="image-20220824090617568"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220824085322317.png" alt="image-20220824085322317"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从零玩转第三方登录之QQ登录&quot;&gt;&lt;a href=&quot;#从零玩转第三方登录之QQ登录&quot; class=&quot;headerlink&quot; title=&quot;从零玩转第三方登录之QQ登录&quot;&gt;&lt;/a&gt;从零玩转第三方登录之QQ登录&lt;/h1&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>nacos数据源配置</title>
    <link href="http://example.com/2022/09/01/nacos%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/09/01/nacos%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/</id>
    <published>2022-09-01T01:42:02.000Z</published>
    <updated>2022-09-01T01:42:08.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nacos设置数据源mysql"><a href="#nacos设置数据源mysql" class="headerlink" title="nacos设置数据源mysql"></a>nacos设置数据源mysql</h1><h2 id="nacos配置"><a href="#nacos配置" class="headerlink" title="nacos配置"></a><a href="https://so.csdn.net/so/search?q=nacos&spm=1001.2101.3001.7020">nacos</a>配置</h2><ul><li>将其中数据源类型，url，用户名密码等改成mysql相关</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.platform=mysql</span><br><span class="line"></span><br><span class="line">### Count of DB:</span><br><span class="line">db.num=1</span><br><span class="line"></span><br><span class="line">### Connect URL of DB:</span><br><span class="line">db.url.0=jdbc:mysql://192.168.5.1:3306/db1?characterEncoding=utf8&amp;connectTimeout</span><br><span class="line">=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span><br><span class="line">db.user=root</span><br><span class="line">db.password=root</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="更改mysql允许远程用户访问"><a href="#更改mysql允许远程用户访问" class="headerlink" title="更改mysql允许远程用户访问"></a>更改mysql允许远程用户访问</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#登录mysql</span><br><span class="line">mysql -u root -p</span><br><span class="line">#切换数据库</span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">#更改root用户，允许通过root用户远程访问</span><br><span class="line">mysql&gt;update user set host = ’%’ where user = ’root’;</span><br><span class="line">#设置所有db均可通过root访问</span><br><span class="line">mysql&gt; grant all privileges  on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;password&#x27;</span><br><span class="line">#刷新赋予的权限</span><br><span class="line">mysql&gt;flush privileges;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="增加windows入站规则"><a href="#增加windows入站规则" class="headerlink" title="增加windows入站规则"></a>增加windows入站规则</h2><ul><li>因mysql安装在win10上，如果不想关闭防火墙，那么设置一个防火墙入站规则，使得远程可以访问本机的3306端口</li><li>控制面板&gt;防火墙&gt;高级设置&gt;增加入站规则&gt;选择端口类型并填写端口&gt;选择tcp连接&gt;保存</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nacos设置数据源mysql&quot;&gt;&lt;a href=&quot;#nacos设置数据源mysql&quot; class=&quot;headerlink&quot; title=&quot;nacos设置数据源mysql&quot;&gt;&lt;/a&gt;nacos设置数据源mysql&lt;/h1&gt;&lt;h2 id=&quot;nacos配置&quot;&gt;&lt;a h</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Xshell使用public_key进行登录</title>
    <link href="http://example.com/2022/08/20/Xshell%E4%BD%BF%E7%94%A8public-key%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95/"/>
    <id>http://example.com/2022/08/20/Xshell%E4%BD%BF%E7%94%A8public-key%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95/</id>
    <published>2022-08-20T03:23:44.000Z</published>
    <updated>2022-08-20T03:23:49.706Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Xshell使用public-key进行登录"><a href="#Xshell使用public-key进行登录" class="headerlink" title="Xshell使用public_key进行登录"></a>Xshell使用public_key进行登录</h1><p>基于Xshell使用密钥(public key)登录ssh</p><p>Augensternnnn</p><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>打开Xshell，点击 工具 -&gt; 新建用户密钥生成向导</p><p><img src="https://img-blog.csdnimg.cn/20200210174541790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>密钥类型 选择“RSA”公钥加密算法；密钥长度 选择 “2048”位密钥长度</p><p><img src="https://img-blog.csdnimg.cn/20200210174819763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>填写密钥名称和密码，进行下一步</p><p><img src="https://img-blog.csdnimg.cn/20200210175056673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>复制公钥里面的内容，并保存为文件以备用</p><p><img src="https://img-blog.csdnimg.cn/20200210175336126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="2"><li>放置公钥(Public Key)到服务器~&#x2F;.ssh&#x2F;authorized_key文件中<br>打开云服务器的控制台，创建密钥对</li></ol><p>  <img src="https://img-blog.csdnimg.cn/20200210175657458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>导入已有的密钥对</p><p><img src="https://img-blog.csdnimg.cn/20200210175846570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>将密钥添加到主机</p><p><img src="https://img-blog.csdnimg.cn/20200210180130643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020021018044183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200210180514130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="重启服务器"><a href="#重启服务器" class="headerlink" title="重启服务器"></a>重启服务器</h2><p><img src="https://img-blog.csdnimg.cn/20200210180849802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="3"><li><p>打开XShell，连接服务器并输入密钥</p><p><img src="https://img-blog.csdnimg.cn/20200210181112414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ol><p>选择 用户身份验证，并填写<br>方法 选择：public key，并填写用户名，选择用户密钥（密码为自己之前设置的）</p><p><img src="https://img-blog.csdnimg.cn/20200210184307605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0F1Z2Vuc3Rlcm5f,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Xshell使用public-key进行登录&quot;&gt;&lt;a href=&quot;#Xshell使用public-key进行登录&quot; class=&quot;headerlink&quot; title=&quot;Xshell使用public_key进行登录&quot;&gt;&lt;/a&gt;Xshell使用public_key进行</summary>
      
    
    
    
    
  </entry>
  
</feed>
